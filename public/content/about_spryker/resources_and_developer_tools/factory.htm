<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="About Spryker|Developer Tools">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Factory</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/MadCapSearch.Google.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <link href="../../resources/tablestyles/patternedrows.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.Google.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form>
                                            <div id="ZL2XDOl1q0ilEvZkcagRUQ" class="search-bar search-bar-container needs-pie">
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <script src="../../resources/prism.js">
                                </script>
                                <div class="search-container">
                                    <form>
                                        <div id="ZSrCfSpwK0WkW9Ud-mBMoQ" class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="6C-e6sO8rUSBUVBUyC8QQA">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="6C-e6sO8rUSBUVBUyC8QQA:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator feedback-topic-required">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                    </div>
                                                </div>
                                                <h1>Factory</h1>
                                                <p>All <span class="Generalbundles/modules">(Undefined variable: General.bundles/modules)</span> are shipped with a dedicated factory for each layer. The responsibility of the factory is to create new instances of the classes from the same layer and <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>.

</p>
                                                <p>The following example shows a typical method from a factory. The method <var>createKeyBuilder() </var>creates an instance which is then injected inside of <var>createCmsBlockFinder()</var>:
</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Click to expand the code sample</a></span>
                                                    <div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php
class CmsBlockFactory extends AbstractFactory
{

    /**
     * @return \Spryker\Client\CmsBlock\Storage\CmsBlockStorageInterface
     */
    public function createCmsBlockFinder()
    {
        return new CmsBlockStorage(
            $this-&gt;getStorage(),
            $this-&gt;createKeyBuilder()
        );
    }

    /**
     * @return \Spryker\Client\CmsBlock\Dependency\Client\CmsBlockToStorageClientInterface
     */
    protected function getStorage()
    {
        return $this-&gt;getProvidedDependency(CmsBlockDependencyProvider::KV_STORAGE);
    }

    /**
     * @return \Spryker\Shared\KeyBuilder\KeyBuilderInterface
     */
    protected function createKeyBuilder()
    {
        return new CmsBlockKeyBuilder();
    }

}

</code></pre>
                                                    </div>
                                                </div>
                                                <h2>Conventions for Factory Methods
</h2>
                                                <p>The factories contain two types of methods:

</p>
                                                <ul>
                                                    <li class="bullet_list" value="1">methods which create internal classes
</li>
                                                    <li class="bullet_list" value="2">methods which provide external dependencies
</li>
                                                </ul>
                                                <table style="mc-table-style: url('../../resources/tablestyles/patternedrows.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-PatternedRows" cellspacing="0">
                                                    <col class="TableStyle-PatternedRows-Column-Regular" style="width: 163px;" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <thead>
                                                        <tr class="TableStyle-PatternedRows-Head-Header1">
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Naming convention</th>
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Example	</th>
                                                            <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Purpose
</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                                                                <p><var>createXXX()</var>
                                                                </p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                                                                <p><var>createCmsBlockFinder()</var>
                                                                </p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                                                <p>		These methods inject dependencies and create instances of internal classes. They always start with the <var>create</var>-prefix. It is highly recommended to have only one occurrence of <var>new </var>per method.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                                                                <p><var>getXXX()</var>
                                                                </p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                                                                <p><var>getCustomerClient()</var>
                                                                </p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                                                <p>These methods retrieve a provided external dependency which can be injected into an internal model. Typical external dependencies are Clients, Facades and QueryContainer. It is a good practice to add the type of the object as a suffix (e.g. getCustomerFacade()).
</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <h2>	Inherited Methods from AbstractFactory
</h2>
                                                <p>The extended AbstractFactory holds some important methods:
</p>
                                                <table style="mc-table-style: url('../../resources/tablestyles/patternedrows.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-PatternedRows" cellspacing="0">
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <thead>
                                                        <tr class="TableStyle-PatternedRows-Head-Header1">
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method	</th>
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Purpose	</th>
                                                            <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Available
</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                                                                <p><var>getConfig()</var>
                                                                </p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                                                                <p>The <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> config contains all of the needed settings for the current <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>.</p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                                                <p>Zed only</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                                                                <p><var>getQueryContainer()</var>
                                                                </p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                                                                <p>The dependency container always holds a direct connection to the <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>’s query container, which is often required by internal models.	</p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                                                <p>Zed only</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <h2>	
	Snippets to Create a New Factory
</h2>
                                                <p>The factory pattern is used all over our code-base. The concrete implementations looks a bit different for Yves, Zed and Client. You can copy&amp;paste these snippets and just replace ‘MyBundle’ with your real <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> name. To enable auto-completion it is recommended to define the interfaces for the query container and <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> config in the class doc block as shown in the snippets.

</p>
                                                <h3>Yves
</h3><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Yves\MyBundle;

use Spryker\Yves\Kernel\AbstractFactory;

class MyBundleFactory extends AbstractFactory
{
}
</code></pre>
                                                <h3>Client
</h3><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Client\MyBundle;

use Pyz\Client\Kernel\AbstractFactory;

class MyBundleFactory extends AbstractFactory
{
}
</code></pre>
                                                <h3>Zed - Communication Layer
</h3><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\MyBundle\Communication;

use Pyz\Zed\MyBundle\MyBundleConfig;
use Pyz\Zed\MyBundle\Persistence\MyBundleQueryContainerInterface;
use Spryker\Zed\Kernel\Communication\AbstractCommunicationFactory;

/**
 * @method MyBundleConfig getConfig()
 * @method MyBundleQueryContainerInterface getQueryContainer()
 */
class MyBundleCommunicationFactory extends AbstractCommunicationFactory
{
}
</code></pre>
                                                <h3>Zed - Business Layer
</h3><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\MyBundle\Business;

use Pyz\Zed\MyBundle\MyBundleConfig;
use Pyz\Zed\MyBundle\Persistence\MyBundleQueryContainerInterface;
use Spryker\Zed\Kernel\Business\AbstractBusinessFactory;

/**
 * @method MyBundleConfig getConfig()
 * @method MyBundleQueryContainerInterface getQueryContainer()
 */
class MyBundleBusinessFactory extends AbstractBusinessFactory
{
}
</code></pre>
                                                <h3>Zed - Persistence Layer
</h3><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\MyBundle\Persistence;

use Pyz\Zed\MyBundle\MyBundleConfig;
use Spryker\Zed\Kernel\Persistence\AbstractPersistenceFactory;

/**
 * @method MyBundleConfig getConfig()
 */
class MyBundlePersistenceFactory extends AbstractPersistenceFactory
{
}
</code></pre>
                                                <h2>Using the Factory
</h2>
                                                <p>An instance of the factory can be retrieved by calling <var>$this-&gt;getFactory()</var>; this will return the instance of the factory defined in the same layer.

</p><pre><code class="language-PHP line-numbers">&lt;?php
    public function registerCustomer(CustomerTransfer $customerTransfer)
    {
        return $this-&gt;getFactory()
            -&gt;createCustomer()
            -&gt;register($customerTransfer);
    }
</code></pre>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>