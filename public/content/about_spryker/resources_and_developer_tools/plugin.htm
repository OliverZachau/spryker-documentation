<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="About Spryker|Developer Tools">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Plugin</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/MadCapSearch.Google.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <link href="../../resources/tablestyles/patternedrows.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.Google.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form>
                                            <div id="-ldR0p4XYEelX-fUkizHFA" class="search-bar search-bar-container needs-pie">
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <script src="../../resources/prism.js">
                                </script>
                                <div class="search-container">
                                    <form>
                                        <div id="7IgOLHENPk2XpNF2kzmT7w" class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="ndHz0DiC8E-Cee6oY8bN3w">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="ndHz0DiC8E-Cee6oY8bN3w:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator feedback-topic-required">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                    </div>
                                                </div>
                                                <h1>Plugin</h1>
                                                <p>Plugins are small classes that are used to connect bundles in a flexible and configurable way. In contrast to a direct call to a facade of another <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>, there can be an array of provided <span class="Generalbundles/modules">(Undefined variable: General.bundles/modules)</span>.

</p>
                                                <p>According to our conventions, plugins are the only classes that can be directly instantiated in other <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>s. For instance the <var>Calculation </var><span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> uses an array of <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>s to perform the calculation. A lot of core <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>s allow to hook into the logic via plugins. This way you can change core behavior without extending core classes and the risk to loose backwards compatibility.

</p>
                                                <h2>Example: Calculator Plugins
</h2>
                                                <p>The Calculation <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> ships with a <var>CalculatorPluginInterface</var> which is implemented in several bundles. For instance you can find the <var>ItemTaxCalculatorPlugin</var> inside the Tax <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>.

</p>
                                                <p>According to the interface, this plugin retrieves a quote transfer object, performs tax related calculations and adds them to the quote.

</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Spryker\Zed\Tax\Communication\Plugin;

use Generated\Shared\Transfer\QuoteTransfer;
use Spryker\Zed\Calculation\Dependency\Plugin\CalculatorPluginInterface;
use Spryker\Zed\Kernel\Communication\AbstractPlugin;

/**
 * @method \Spryker\Zed\Tax\Business\TaxFacade getFacade()
 * @method \Spryker\Zed\Tax\Communication\TaxCommunicationFactory getFactory()
 */
class ItemTaxCalculatorPlugin extends AbstractPlugin implements CalculatorPluginInterface
{

    /**
     * This plugin makes calculations based on the given quote. The result is added to the quote.
     *
     * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
     *
     * @return void
     */
    public function recalculate(QuoteTransfer $quoteTransfer)
    {
        $this-&gt;getFacade()-&gt;recalculateTaxItemAmount($quoteTransfer);
    }

}
</code></pre>
                                                <h2>How to implement a plugin
</h2>
                                                <p>A plugin always implements an interface which is stored in the consuming <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>. You can find them in the <var>[PROJECT]\[APPLICATION]\[<span class="GeneralBUNDLE/MODULE">(Undefined variable: General.BUNDLE/MODULE)</span>]\Dependency\Plugin </var>namespace (e.g. <var>Spryker\Zed\Calculation\Dependency\Plugin</var>).
<span class="GeneralBundle/Module">(Undefined variable: General.Bundle/Module)</span></p>
                                                <p>
Your new plugin needs to be placed in a specific directory inside your <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>:
</p>
                                                <table style="width: 100%;mc-table-style: url('../../resources/tablestyles/patternedrows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <thead>
                                                        <tr class="TableStyle-PatternedRows-Head-Header1">
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Application	</th>
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin directory</th>
                                                            <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Example
</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">Client	</td>
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">	[PROJECT]\Client\[<span class="GeneralBUNDLE/MODULE">(Undefined variable: General.BUNDLE/MODULE)</span>]\Plugin\	</td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">Pyz\Client\Catalog\Plugin\Config\CatalogSearchConfigBuilder</td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">Yves	</td>
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">[PROJECT]\Yves\[<span class="GeneralBUNDLE/MODULE">(Undefined variable: General.BUNDLE/MODULE)</span>]\Plugin\	</td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">Pyz\Yves\Cart\Plugin\Provider\CartControllerProvider</td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-LightRows">Zed	</td>
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-LightRows">

[PROJECT]\Zed\[<span class="GeneralBUNDLE/MODULE">(Undefined variable: General.BUNDLE/MODULE)</span>]\Communication\Plugin\</td>
                                                            <td class="TableStyle-PatternedRows-BodyA-Regular-LightRows">	Spryker\Zed\Tax\Communication\Plugin\ItemTaxCalculatorPlugin</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>Plugins delegate calls to the underlying code of the same <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>. Plugins usually need to extend an <var>AbstractPlugin</var>. This way they can access the internal classes of their <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>. We recommend to use the <var>@method</var> doc block notation to enable auto completion in the IDE.

</p>
                                                <h3>Plugins in Zed
</h3>
                                                <p>You can copy and paste the template below. All you need to do is to replace the placeholders and to implement the related interface. The <var>AbstractPlugin </var>allows you to access the facade of the <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> where the plugin is placed via the <var>getFacade()</var> method.

</p>
                                                <p>The most common use case for plugins in Zed is to delegate all calls directly to a method in the facade. You can also access the factory of the communication layer via <var>getFactory()</var> and it is also possible to access the query container via <var>getQueryContainer() </var>but in general this should not be neccessary.

</p><pre><code class="language-PHP line-numbers">&lt;?php
namepace Pyz\Zed\[BUNDLE]\Communication\Plugin;

use Spryker\Zed\Kernel\Communication\AbstractPlugin;

/**
 * @method \Spryker\Zed\[<span class="GeneralBUNDLE/MODULE">(Undefined variable: General.BUNDLE/MODULE)</span>]\Business\[<span class="GeneralBUNDLE/MODULE">(Undefined variable: General.BUNDLE/MODULE)</span>]Facade getFacade()
 */
class [PLUGIN]Plugin extends AbstractPlugin implements AnotherBundlePluginInterface
{ 
    // ...
}
</code></pre>
                                                <h3>Plugins in Yves
</h3>
                                                <p>You can copy and paste the template below. All you need to do is to replace the placeholders and to implement the related interface. The <var>AbstractPlugin </var>allows you to access the factory via the <var>getFactory()</var> method.

</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Yves\[BUNDLE]\Plugin;

use Spryker\Yves\Kernel\AbstractPlugin;

/**
 * @method \Spryker\Yves\[BUNDLE]\[BUNDLE]Factory getFactory()
 */
class [PLUGIN]Plugin extends AbstractPlugin implements AnotherBundlePluginInterface
{
    // ...
}
</code></pre>
                                                <p>In Yves you can find some special plugins. The underlying framework Silex uses special classes like service-providers, controller-providers, routers and twig functions. They are configured in the main <var>YvesBootstrap</var> class. These providers and routers can be provided by several <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>s, that’s why we place them into the plugin-directory to fit them into our conventions. But they do not necessarily extend the <var>AbstractBundle</var>.

</p>
                                                <h3>Plugins in Client
</h3>
                                                <p>You can copy and paste the template below. All you need to do is to replace the placeholders and to implement the related interface. The <var>AbstractPlugin</var> allows you to access the factory via the <var>getFactory()</var> method.

</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Client\[BUNDLE]\Plugin;

use Spryker\Client\Kernel\AbstractPlugin;

/**
 * @method \Spryker\Client\[BUNDLE]\[BUNDLE]Factory getFactory()
 */
class [PLUGIN]Plugin extends AbstractPlugin implements AnotherBundlePluginInterface
{
    // ...
}
</code></pre>
                                                <h2>How to use a plugin from another <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span></h2>
                                                <p>In case you want to make your <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> flexible, you can add plugins to your <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>’s dependency provider. To do so you need to define an interface which contains a clear description of the expected implementation in the doc block.

</p>
                                                <p><b>Example</b>: plugin interface from the Calculation <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>:</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Click to expand the code sample</a></span>
                                                    <div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Calculation\Dependency\Plugin;

use Generated\Shared\Transfer\QuoteTransfer;

interface CalculatorPluginInterface
{

    /**
     * This plugin makes calculations based on the given quote. The result is added to the quote.
     *
     * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
     *
     * @return void
     */
    public function recalculate(QuoteTransfer $quoteTransfer);

}</code></pre>
                                                    </div>
                                                </div>
                                                <p>
Now you can provide the plugin or an array of plugins in the dependency provider, as in the example below.

Example of dependency provider from the <var>Calculation </var> <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>:

</p><pre><code class="language-PHP line-numbers">
&lt;?php
class CalculationDependencyProvider extends AbstractBundleDependencyProvider
{

    const CALCULATOR_STACK = 'calculator stack';

    /**
     * @param \Spryker\Zed\Kernel\Container $container
     *
     * @return \Spryker\Zed\Kernel\Container
     */
    public function provideBusinessLayerDependencies(Container $container)
    {
        $container[static::CALCULATOR_STACK] = function (Container $container) {
            return $this-&gt;getCalculatorStack($container);
        };

        return $container;
    }

    /**
     * @param \Spryker\Zed\Kernel\Container $container
     *
     * @return \Spryker\Zed\Calculation\Dependency\Plugin\CalculatorPluginInterface[]
     */
    protected function getCalculatorStack(Container $container)
    {
        return [
            //Remove calculated values, start with clean state.
            new RemoveTotalsCalculatorPlugin(),

            //Item calculators
            new ProductOptionGrossSumCalculatorPlugin(),
            new ItemGrossAmountsCalculatorPlugin(),

            //SubTotal
            new SubtotalTotalsCalculatorPlugin(),

            //Expenses (e.g. shipping)
            new ExpensesGrossSumAmountCalculatorPlugin(),
            new ExpenseTotalsCalculatorPlugin(),

            //GrandTotal
            new GrandTotalTotalsCalculatorPlugin(),
        ];
    }

}
</code></pre>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>