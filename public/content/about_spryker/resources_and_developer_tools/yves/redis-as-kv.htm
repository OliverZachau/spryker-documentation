<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="About Spryker|Developer Tools|Front End - Yves">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Using Redis as a KV Storage</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/MadCapSearch.Google.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <link href="../../../resources/tablestyles/patternedrows.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearch.Google.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form>
                                            <div id="Y5ZnsTtj9EeFH5l_2tZ_Qg" class="search-bar search-bar-container needs-pie">
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <script src="../../../resources/prism.js">
                                </script>
                                <div class="search-container">
                                    <form>
                                        <div id="xAwDfGAH0UmQhqmtO_dcuQ" class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="UFQwIusKTECUlRUVHVX2PQ">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="UFQwIusKTECUlRUVHVX2PQ:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator feedback-topic-required">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                    </div>
                                                </div>
                                                <h1>Using Redis as a KV Storage</h1>
                                                <p>This article describes how Redis is used within Spryker; the current functionality can be extended according to your needs.
</p>
                                                <h2>About</h2>
                                                <p>Redis is a key-value data store and for the values it supports a large collection of data structures, such as strings, hashes, lists or sets.

</p>
                                                <p>The following table shows how translations are stored:
</p>
                                                <table style="width: 100%;mc-table-style: url('../../../resources/tablestyles/patternedrows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <thead>
                                                        <tr class="TableStyle-PatternedRows-Head-Header1">
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Locale	</th>
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Key	</th>
                                                            <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Value
</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                                                                <p>de_DE</p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                                                                <p>kv:de.de_de.glossary.translation.global.cart</p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                                                <p>Warenkorb
</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                                                                <p>en_US</p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                                                                <p>			kv:de.en_us.glossary.translation.global.cart</p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                                                <p>Cart
</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>
	The values for the translations are stored as strings, but more complex types, such as product information, are stored in JSON format.

</p>
                                                <p>The key name follows this format: <var>kv:{store}{locale}{resource-type}{key}</var>.

</p>
                                                <h2>Redis
Data Storage</h2>
                                                <p>The data stored in Redis includes:

</p>
                                                <ul>
                                                    <li class="bullet_list" value="1">URL mappings
</li>
                                                    <li class="bullet_list" value="2">Product details
</li>
                                                    <li class="bullet_list" value="3">Product category details
</li>
                                                    <li class="bullet_list" value="4">Stock information
</li>
                                                    <li class="bullet_list" value="5">Translations
</li>
                                                    <li class="bullet_list" value="6">CMS pages and blocks
</li>
                                                </ul>
                                                <h2>How Data is Loaded into Redis
</h2>
                                                <p>Data is loaded in Redis through a dedicated console command. This console command is executed when the application is initially installed, but you can execute it also from the command line:

</p><pre><code class="language-PHP line-numbers">console collector:storage:export
</code></pre>
                                                <p>Click here to find out more about how the Collector <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> works and how to extend it.</p>
                                                <h2>How Data is Kept in Sync
</h2>
                                                <p>Of course, the data stored in the SQL database is the subject of change; data can be updated or deleted or new entries can be added. The data currently stored in Redis is a snapshot of the data in the SQL database from when the last update was run.

The key-value data storage must be kept in sync with the data persisted in the SQL database. In order to achieve this, you must setup a cron job that runs on a specified time interval and updates the key-value data storage.

</p>
                                                <p>For more information see <a href="../cronjob-scheduling.htm" target="_blank">Cronjob Scheduling</a>.

</p>
                                                <p>Also, you must find out which data has changed because you don’t want to completely reload the content stored in Redis. The Touch <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> takes care of marking the items that were updated in the mean time. You must keep in mind that every time you make an update/delete/insert for data that’s also stored in Redis, you must touch that data so that it’s marked for export when the next storage update task will run.

</p>
                                                <h2>How to Browse the Data from Redis
</h2>
                                                <p>In order to be able to browse the data that’s stored in Redis, you must setup Redis Desktop Manager(RDS).

Install RDS from <a href="http://redisdesktop.com/download" target="_blank">here</a>, then configure as shown on the screenshot below. </p>
                                                <p>Find the current Redis Port in <var>config/Shared/config_default-development.php</var>.

</p>
                                                <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../resources/images/redis-setup.png" data-mc-popup-alt="Redis Desktop Manager Setup"><img class="MCPopupThumbnail img imgThumbnail" data-mc-width="475" data-mc-height="429" src="../../../resources/images/redis-setup_thumb_0_48.png" alt="Redis Desktop Manager Setup" title="Redis Desktop Manager Setup" tabindex="" /></a><![CDATA[
]]></p>
                                                <p>Make sure that your virtual machine is up and running.
</p>
                                                <h2>
Using the Data Stored in Redis
</h2>
                                                <h3>Translations
</h3>
                                                <p>For showing content translated according to the selected locale, you can use the translation extension from twig; you just have to specify the key name and pipe it to the <var>trans </var>extension. When rendered, the value that corresponds to the selected locale for that key will be shown.

</p>
                                                <p>E.g.
</p><pre><code class="language-PHP line-numbers">&lt;button&gt;{{ "page.detail.add-to-cart"|trans }}&lt;/button&gt;
</code></pre>
                                                <p>The caption for the button depends on the selected locale:
</p>
                                                <table style="width: 100%;mc-table-style: url('../../../resources/tablestyles/patternedrows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <thead>
                                                        <tr class="TableStyle-PatternedRows-Head-Header1">
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Locale	</th>
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Key	</th>
                                                            <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Value
</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                                                                <p>de_DE</p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                                                                <p>kv:de.de_de.glossary.translation.page.detail.add-to-cart</p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                                                <p>In den Warenkorb</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                                                                <p>en_US</p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                                                                <p>		
	kv:de.en_us.glossary.translation.page.detail.add-to-cart</p>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                                                <p>Add to Cart
</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <h3>
	Accessing the Redis Data Storage
</h3>
                                                <p>Redis data storage is accessed using the <var>StorageClient</var>.

</p>
                                                <p>The <var>StorageClient </var>can be obtained as an external dependency for Yves, in the client layer. In the dependency provider of the client layer from your <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>, add the <var>StorageClient </var>dependency as in the example below:

</p><pre><code class="language-PHP line-numbers">&lt;?php

    const KV_STORAGE = 'kv storage';

    /**
     * @param \Spryker\Client\Kernel\Container $container
     *
     * @return \Spryker\Client\Kernel\Container
     */
    public function provideServiceLayerDependencies(Container $container)
    {
        $container[static::KV_STORAGE] = function (Container $container) {
            return $container-&gt;getLocator()-&gt;storage()-&gt;client();
        };

        return $container;
    }
</code></pre>
                                                <p>Add a method that retrieves an instance of the key value storage in the factory of the client layer of your <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>:

</p><pre><code class="language-PHP line-numbers">&lt;?php

     /**
     * @return \Spryker\Client\Storage\StorageClientInterface
     */
    public function getStorageClient()
    {
        return $this-&gt;getProvidedDependency(MyBundleDependencyProvider::KV_STORAGE);
    }
</code></pre>
                                                <p>To retrieve the value for a given key, you can use the <var>get($key)</var> operation from the <var>StorageClient.</var></p><pre><code class="language-PHP line-numbers">&lt;?php
$storedValue = $this-&gt;storageClient-&gt;get($myKey);
</code></pre>
                                                <h2>Using a Password for Accessing Redis</h2>
                                                <p>It is possible to define a password to restrict access to Redis. Spryker provides the <var>`\Spryker\Shared\Storage\StorageConstants::STORAGE_REDIS_PASSWORD`</var> configuration option that can be used to configure the Redis client to authenticate Spryker. </p>
                                                <p>To activate this, specify the  `<var>redis</var>` protocol for <var>`\Spryker\Shared\Storage\StorageConstants::STORAGE_REDIS_PROTOCOL</var>` (the Spryker demo-shop uses <var>`tcp`</var> by default).</p>
                                                <h2>Using Redis Cache</h2>
                                                <p>To boost the performance in Spryker even more, we have built a caching mechanism to cache all used Redis keys on any page in the shop.</p>
                                                <p>A page in the shop often contains many different Redis entries for various content and information it has e.g. product title, description, and attributes on a product details page. All of this data is stored in many Redis key-value pairs. To retrieve the data for a page, multiple Redis GET requests are needed, so if a page uses a 100 Redis key-values pairs, then a 100 Redis GET requests are needed to retrieve the data.</p>
                                                <p>To optimize the data retrieval from Redis, we designed an algorithm to store all the needed keys in a given page in the shop in only one Redis key and then use one Redis MGET (multi get) request to retrieve all the data. Using the implemented algorithm, only two requests to Redis are needed for most of the pages: one GET request to get the cache entry, and one MGET requests to get all the data.</p>
                                                <p>The Redis cache for a page is basically a key-value pair. The key of the cache is the prefix <strong>StorageClient_</strong> followed by the URL of the page, while the value of the cache is simply a list of all Redis keys used on the cached page.</p>
                                                <p>When accessing a new page, the algorithm checks if a cache for it is already built. If yes, the page uses or refreshes the cache if needed, otherwise the algorithm builds a new cache.</p>
                                                <p>Spryker provides three caching strategies in order to build the list of the keys in the cache entry:</p>
                                                <ul>
                                                    <li value="1">Replace Strategy: This strategy overwrites the list of the keys in a cache with a new one every time a cached page is accessed. This strategy is useful with static pages where the list of keys for these do not change often. This is the default strategy when a strategy is not specified.</li>
                                                    <li value="2">Incremental Strategy: This strategy increments the list of keys inside the cache until the limit is exceeded. The default limit is 1000 keys. The incremental strategy is useful with page that uses configurators e.g. variants where the cache stores all the different combinations.</li>
                                                    <li value="3">Inactive Strategy: This strategy deactivates the cache for a specified page.</li>
                                                </ul>
                                                <p>All the cache entries have a default TTL of one day. The cache will be removed after one day and a new will be generated for different pages when accessing them.</p>
                                                <h3>How to Add and Configure the Cache</h3>
                                                <p>The cache works on the controller level. This means that you can define what strategy a controller uses for all of its actions. By default, the cache is active and uses the Replace strategy.</p>
                                                <p>To specify what cache strategy a controller uses, only two steps are required:</p>
                                                <ol>
                                                    <li value="1">Use the Yves <strong>AbstractController</strong></li><pre><code class="php"> use Pyz\Yves\Application\Controller\AbstractController;
        </code></pre>
                                                    <li value="2">Define the cache strategy by assigning the value to the <strong>STORAGE_CACHE_STRATEGY</strong> constant. For example, an incremental strategy is defined in the following code.</li><pre><code class="php"> const STORAGE_CACHE_STRATEGY = StorageConstants::STORAGE_CACHE_STRATEGY_INCREMENTAL;
        </code></pre>
                                                </ol>
                                                <p>That is it!</p>
                                                <p>To change the default configuration values for the TTL and the key-size limit for the incremental strategy, you can simply extend the <strong>StorageConfig</strong> and override the following methods:</p>
                                                <ul>
                                                    <li value="1"><strong>getStorageCacheIncrementalStrategyKeySizeLimit</strong> to change the limit size for the incremental strategy.</li>
                                                    <li value="2"><strong>getStorageCacheTtl</strong> to change the TTL for the cache.</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>