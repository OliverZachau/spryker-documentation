<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-conditions="Spryker.B2B,Spryker.B2C,Spryker.DemoShop,Spryker.ShopSuite" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Capabilities|Capabilities|Development">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Flysystem    </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/MadCapSearch.Google.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <link href="../../resources/tablestyles/patternedrows.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.Google.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form>
                                            <div id="nc42Ukn6i0SFt9N8ZAsCwg" class="search-bar search-bar-container needs-pie">
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <script src="../../resources/prism.js">
                                </script>
                                <div class="search-container">
                                    <form>
                                        <div id="FRjSgGVxd0CpPcrGgM1uBg" class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="z8JXaoxaF02M1ImidpXfVA">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="z8JXaoxaF02M1ImidpXfVA:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator feedback-topic-required">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                    </div>
                                                </div>
                                                <h1>Flysystem <img src="../../resources/images/shoptype/b2b_shop.png" /> <img src="../../resources/images/shoptype/b2c_shop.png" /> <img src="../../resources/images/shoptype/mastersuite.png" /> <img src="../../resources/images/shoptype/demoshop.png" /></h1>
                                                <p>The Flysystem module integrates Spryker with the <a href="https://github.com/thephpleague/flysystem" target="_blank">thephpleague/flysystem</a> vendor package.</p>
                                                <p>It handles operations, flysystem adapter configuration and provides a <var>FlysystemFilesystemBuilderPluginInterface</var>,</p>
                                                <p>where the <var>build()</var> method is expected to return a concrete implementation of the <var>\League\Flysystem\Filesystem</var> interface.</p>
                                                <p>There are module with adapters for Local, FTP and AWS3 filesystems.</p>
                                                <h2>Flysystem Features</h2>
                                                <p>Quote from <a href="http://flysystem.thephpleague.com/" target="_blank">Flysytem's official documentation</a>:</p>
                                                <ul>
                                                    <li value="1">Generic API for handling common tasks across multiple file storage engines.</li>
                                                    <li value="2">Consistent output which you can rely on.</li>
                                                    <li value="3">Integrate well with other packages/frameworks.</li>
                                                    <li value="4">Be cacheable.</li>
                                                    <li value="5">Emulate directories in systems that support none, like AwsS3.</li>
                                                    <li value="6">Support third party plugins.</li>
                                                    <li value="7">Make it easy to test your filesystem interactions.</li>
                                                    <li value="8">Support streams for big file handling</li>
                                                </ul>
                                                <h3>Module Dependency Graph</h3>
                                                <p>The Flysystem Module provides plugins which integrate <a href="https://github.com/thephpleague/flysystem" target="_blank">thephpleague/flysystem vendor package</a> and implement FileSystem's plugin interface.</p>
                                                <p>
                                                    <img src="../../resources/images/file_system_dependencies.png" title="File System Dependencies" />
                                                </p>
                                                <h2>Flysystem Service API</h2>
                                                <p>Flysystem's Service API is almost exactly like <a href="http://flysystem.thephpleague.com/api/" target="_blank">Flysystem's API</a> with only one distinction,</p>
                                                <p>it takes an additional mandatory parameter containing a pre-configured filesystem name.</p>
                                                <p>See <a href="file_system/filesystem.htm#Plugin" class="MCXref xref">Plugin Configuration</a> for details.</p>
                                                <p>For example, to extract an image's metadata information stored under <var>foo/bar.jpg</var>, use the <var>getMetadata()</var> method with the <var>media</var> store's name.</p><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * Specification:
 * - Select pre-configured filesystem
 * - Get resource metadata
 * - Return resource metadata transfer, null on failure
 *
 * @param string $filesystemName
 * @param string $path
 *
 * @return \Generated\Shared\Transfer\FlysystemResourceMetadataTransfer
 */
public function getMetadata($filesystemName, $path);

$metadataTransfer = $flysystemService-&gt;getMetadata('media', 'foo/bar.jpg');</code></pre>
                                                <p>Or to read file content from the <var>customerDocument</var> store.</p><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * Specification:
 * - Select pre-configured filesystem
 * - Read file
 * - Return file content, false on failure
 *
 * @param string $filesystemName
 * @param string $path
 *
 * @return false|string
 */
public function read($filesystemName, $path);

$invoiceDocument = $flysystemService-&gt;read('customerData', 'invoices/2017/05/123.pdf');</code></pre>
                                                <h2>Flysystem Filesystem Adapter Modules</h2>
                                                <p>Different filesystems require different adapters in order to handle them. In Spryker, we use <a href="https://en.wikipedia.org/wiki/Package_principles" target="_blank">package principles</a> to create modular and easy to configure applications. Each different Flysystem adapter implementing <var>\League\Flysystem\FilesystemInterface</var> has its own Module.</p>
                                                <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../resources/tablestyles/patternedrows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <thead>
                                                        <tr class="TableStyle-PatternedRows-Head-Header1">
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Module</th>
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Description </th>
                                                            <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Config </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">FlysystemAws3v3FileSystem</td>
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">Amazon AWS3 version 3 filesystem adapter</td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">FlysystemConfigAws3v3Transfer</td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">FlysystemFtpFileSystem</td>
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">FTP filesystem adapter</td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">FlysystemConfigFtpTransfer</td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-LightRows">FlysystemLocalFileSystem</td>
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-LightRows">Local filesystem adapter</td>
                                                            <td class="TableStyle-PatternedRows-BodyA-Regular-LightRows">FlysystemConfigLocalTransfer</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>You can install the adapter bundles on demand, just like any other Spryker module, or create your own.</p>
                                                <h3>Flysystem Config</h3>
                                                <p>The <var>FlysystemConfigTransfer</var> and options for <a href="https://github.com/thephpleague/flysystem" target="_blank">thephpleague/flysystem</a> are passed to the <var>build()</var> method.</p>
                                                <p>The adapter config is under <var>adapterConfig</var> and flysystem options under <var>flysystemConfig</var>.</p><pre><code class="language-PHP line-numbers">&lt;transfer name="FlysystemConfig"&gt;
    &lt;property name="name" type="string" /&gt;
    &lt;property name="type" type="string" /&gt;
    &lt;property name="adapterConfig" type="array" /&gt;
    &lt;property name="flysystemConfig" type="array" /&gt;
&lt;/transfer&gt;</code></pre>
                                                <p>The name and type come from the project configuration.</p><pre><code class="language-PHP line-numbers">The value of <var>type</var> should point to a concrete builder plugin implementing <var>FlysystemFilesystemBuilderPluginInterface</var>.</code></pre>
                                                <h3>Filesystem Adapter Config</h3>
                                                <p>Every adapter module requires its own specific settings.</p>
                                                <p><strong>Example of <var>FlysystemConfigFtp</var></strong>:</p><pre><code class="language-PHP line-numbers">&lt;transfer name="FlysystemConfigFtp"&gt;
    &lt;property name="host" type="string" /&gt;
    &lt;property name="username" type="string" /&gt;
    &lt;property name="password" type="string" /&gt;
    &lt;property name="port" type="int" /&gt;
    &lt;property name="root" type="string" /&gt;
    &lt;property name="passive" type="bool" /&gt;
    &lt;property name="ssl" type="bool" /&gt;
    &lt;property name="timeout" type="int" /&gt;
&lt;/transfer&gt;</code></pre>
                                                <h2>Adapter Builders</h2>
                                                <p>Every implementation of <var>\League\Flysystem\AdapterInterface</var> requires a unique set of parameters or dependencies. Therefore, adapter instantiation is delegated to a specialized builder which knows about implementation details.</p>
                                                <p>The builders are executed via plugins.</p>
                                                <h2>Filesystem Builder Plugin</h2>
                                                <p>The Flysystem bundle uses the <var>FlysystemFilesystemBuilderPluginInterface</var> implemented by the concrete adapter's module.</p>
                                                <p>The <var>build()</var> method is expected to return a class implementing the <var>\League\Flysystem\Filesystem</var> interface.</p>
                                                <p>The <var>acceptType()</var> method is expected to return true if the filesystem type can be handled by the implementation.</p>
                                                <p>Mapping between Filesystem and the type it can handle is done via configuration, see <a href="file_system/filesystem.htm#Plugin" class="MCXref xref">Plugin Configuration</a> for details.</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Spryker\Service\Flysystem\Dependency\Plugin;

use Generated\Shared\Transfer\FlysystemConfigTransfer;

interface FlysystemFilesystemBuilderPluginInterface
{

    /**
     * @api
     *
     * @param \Generated\Shared\Transfer\FlysystemConfigTransfer $configTransfer
     * @param \League\Flysystem\PluginInterface[] $flysystemPluginCollection
     *
     * @return \League\Flysystem\Filesystem
     */
    public function build(FlysystemConfigTransfer $configTransfer, array $flysystemPluginCollection = []);

    /**
     * @api
     *
     * @param string $type
     *
     * @return bool
     */
    public function acceptType($type);

}</code></pre>
                                                <h3>Plugin Example</h3>
                                                <p>Example implementation from <var>Aws3v3FilesystemBuilderPlugin</var>.</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Spryker\Service\FlysystemAws3v3FileSystem\Plugin\Flysystem;

use Generated\Shared\Transfer\FlysystemConfigTransfer;
use Spryker\Service\Flysystem\Dependency\Plugin\FlysystemFilesystemBuilderPluginInterface;
use Spryker\Service\Kernel\AbstractPlugin;

class Aws3v3FilesystemBuilderPlugin extends AbstractPlugin implements FlysystemFilesystemBuilderPluginInterface
{

    /**
     * @param string $type
     *
     * @return bool
     */
    public function acceptType($type)
    {
        return $type === get_class($this);
    }

    /**
     * @param \Generated\Shared\Transfer\FlysystemConfigTransfer $configTransfer
     * @param \League\Flysystem\PluginInterface[] $flysystemPluginCollection
     *
     * @return \League\Flysystem\Filesystem
     */
    public function build(FlysystemConfigTransfer $configTransfer, array $flysystemPluginCollection = [])
    {
        return $this-&gt;getFactory()
            -&gt;createFlysystemAws3v3FileSystemBuilder($configTransfer, $flysystemPluginCollection)
            -&gt;build();
    }

}</code></pre>
                                                <h4>Flysystem Adapter Builder Example</h4>
                                                <p>Example of an <var>Aws3v3AdapterBuilder</var>, responsible for the instantiation of <var>League\Flysystem\Adapter\AwsS3v3\AwsS3Adapter</var>.</p>
                                                <p>It uses its own config <var>FlysystemConfigAws3v3Transfer</var>, created by <var>Aws3v3FilesystemBuilder</var>.</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Spryker\Service\FlysystemAws3v3FileSystem\Model\Builder\Adapter;

use Aws\S3\S3Client;
use Generated\Shared\Transfer\FlysystemConfigAws3v3Transfer;
use League\Flysystem\Adapter\AwsS3v3\AwsS3Adapter;

class Aws3v3AdapterBuilder implements AdapterBuilderInterface
{

    const KEY = 'key';
    const SECRET = 'secret';
    const REGION = 'region';
    const VERSION = 'version';
    const CREDENTIALS = 'credentials';

    /**
     * @var \League\Flysystem\Adapter\AwsS3v3\AwsS3Adapter
     */
    protected $adapter;

    /**
     * @var \Generated\Shared\Transfer\FlysystemConfigAws3v3Transfer
     */
    protected $adapterConfig;

    /**
     * @var \Aws\S3\S3Client
     */
    protected $client;

    /**
     * @param \Generated\Shared\Transfer\FlysystemConfigAws3v3Transfer $adapterConfig
     */
    public function __construct(FlysystemConfigAws3v3Transfer $adapterConfig)
    {
        $this-&gt;adapterConfig = $adapterConfig;
    }

    /**
     * @return \League\Flysystem\AdapterInterface
     */
    public function build()
    {
        $this
            -&gt;buildS3Client()
            -&gt;buildAdapter();

        return $this-&gt;adapter;
    }

    /**
     * @return $this
     */
    protected function buildS3Client()
    {
        $this-&gt;client = new S3Client([
            self::CREDENTIALS =&gt; [
                self::KEY =&gt; $this-&gt;adapterConfig-&gt;getKey(),
                self::SECRET =&gt; $this-&gt;adapterConfig-&gt;getSecret(),
            ],
            self::REGION =&gt; $this-&gt;adapterConfig-&gt;getRegion(),
            self::VERSION =&gt; $this-&gt;adapterConfig-&gt;getVersion(),
        ]);

        return $this;
    }

    /**
     * @return $this
     */
    protected function buildAdapter()
    {
        $this-&gt;adapter = new AwsS3Adapter($this-&gt;client, $this-&gt;adapterConfig-&gt;getBucket());

        return $this;
    }

}</code></pre>
                                                <h4>Flysystem Filesystem Builder Example</h4>
                                                <p>Example of <var>Aws3v3FilesystemBuilder</var>, responsible for instantiation of <var>Filesystem</var> implementing <var>League\Flysystem\FilesystemInterface</var>.</p>
                                                <p>It creates a config using <var>FlysystemConfigAws3v3Transfer</var>, and validates it.</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Spryker\Service\FlysystemAws3v3FileSystem\Model\Builder\Filesystem;

use Generated\Shared\Transfer\FlysystemConfigAws3v3Transfer;
use Spryker\Service\FlysystemAws3v3FileSystem\Model\Builder\Adapter\Aws3v3AdapterBuilder;

class Aws3v3FilesystemBuilder extends AbstractFilesystemBuilder
{

    /**
     * @return \Generated\Shared\Transfer\FlysystemConfigAws3v3Transfer
     */
    protected function buildAdapterConfig()
    {
        $configTransfer = new FlysystemConfigAws3v3Transfer();
        $configTransfer-&gt;fromArray($this-&gt;config-&gt;getAdapterConfig(), true);

        return $configTransfer;
    }

    /**
     * @return void
     */
    protected function assertAdapterConfig()
    {
        $adapterConfigTransfer = $this-&gt;buildAdapterConfig();

        $adapterConfigTransfer-&gt;requireRoot();
        $adapterConfigTransfer-&gt;requirePath();
        $adapterConfigTransfer-&gt;requireKey();
        $adapterConfigTransfer-&gt;requireSecret();
        $adapterConfigTransfer-&gt;requireBucket();
        $adapterConfigTransfer-&gt;requireVersion();
        $adapterConfigTransfer-&gt;requireRegion();
    }

    /**
     * @return \Spryker\Service\FlysystemAws3v3FileSystem\Model\Builder\Adapter\AdapterBuilderInterface
     */
    protected function createAdapterBuilder()
    {
        $adapterConfigTransfer = $this-&gt;buildAdapterConfig();

        return new Aws3v3AdapterBuilder($adapterConfigTransfer);
    }

}</code></pre>
                                                <h4>AbstractFilesystemBuilder Example</h4>
                                                <p>Example of <var>AbstractFilesystemBuilder</var> from the <var>FlysystemAws3v3FileSystem</var> module.</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Spryker\Service\FlysystemAws3v3FileSystem\Model\Builder\Filesystem;

use Generated\Shared\Transfer\FlysystemConfigTransfer;
use League\Flysystem\Filesystem;

abstract class AbstractFilesystemBuilder implements FilesystemBuilderInterface
{

    /**
     * @var \Generated\Shared\Transfer\FlysystemConfigTransfer
     */
    protected $config;

    /**
     * @param \Generated\Shared\Transfer\FlysystemConfigTransfer $configTransfer
     */
    public function __construct(FlysystemConfigTransfer $configTransfer)
    {
        $this-&gt;config = $configTransfer;
    }

    /**
     * @return void
     */
    abstract protected function assertAdapterConfig();

    /**
     * @return \Spryker\Service\FlysystemAws3v3FileSystem\Model\Builder\Adapter\AdapterBuilderInterface
     */
    abstract protected function createAdapterBuilder();

    /**
     * @return \League\Flysystem\Filesystem
     */
    public function build()
    {
        $this-&gt;assertAdapterConfig();
        $filesystem = $this-&gt;buildFilesystem();

        return $filesystem;
    }

    /**
     * @return \League\Flysystem\Filesystem
     */
    protected function buildFilesystem()
    {
        $adapter = $this-&gt;createAdapterBuilder()-&gt;build();
        $config = $this-&gt;config-&gt;getFlysystemConfig() ?: [];

        return new Filesystem($adapter, $config);
    }

}</code></pre>
                                                <h2>Flysystem Plugins</h2>
                                                <p><a href="https://github.com/thephpleague/flysystem" target="_blank">thephpleague/flysystem vendor package</a> also supports plugins.</p>
                                                <p>In Spryker, they are loaded via <var>FlysystemDependencyProvider</var> and automatically passed to the <var>build()</var> method.</p>
                                                <p>All you have to do is to configure them in the <var>addFlysystemPluginCollection()</var> method.</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Spryker\Service\Flysystem;

use Spryker\Service\Kernel\AbstractBundleDependencyProvider;
use Spryker\Service\Kernel\Container;

class FlysystemDependencyProvider extends AbstractBundleDependencyProvider
{

    /**
     * @param \Spryker\Service\Kernel\Container $container
     *
     * @return \Spryker\Service\Kernel\Container
     */
    protected function addFlysystemPluginCollection($container)
    {
        $container[self::PLUGIN_COLLECTION_FLYSYSTEM] = function (Container $container) {
            return [];
        };

        return $container;
    }
    </code></pre>
                                                <p><var>FlysystemServiceFactory</var> will use the configured plugins stack in <var>buildFilesystemCollection()</var> via the <var>getFlysystemPluginCollection()</var> method.</p>
                                                <p>Make sure to carry over this behavior if you ever need to overwrite <var>buildFilesystemCollection()</var>.</p>
                                                <p>Otherwise, implement Flysystem plugin loading and configuration on your own.</p>
                                                <h2><a href="javascript:void(0);" class="MCHelpControl MCHelpControl-Related relatedTopics" data-mc-topics="File System  |file_system/filesystem.htm||File System API  |file_system/filesystem-api.htm||Flysystem    |flysystem.htm" target="_self" style="mc-help-control-display: popup;"><span class="MCHelpControl-RelatedHotSpot_"><img class="MCHelpControl_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="16" alt="Related Topics Link Icon" />Related Topics</span></a>
                                                </h2>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>