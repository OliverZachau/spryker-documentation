<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-conditions="Spryker.DemoShop" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Capabilities|Capabilities|Development|Collector">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Development - Collector </title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/MadCapSearch.Google.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearch.Google.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form>
                                            <div id="lXx8h3Ni90KiWbMH4ljRuw" class="search-bar search-bar-container needs-pie">
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <script src="../../../resources/prism.js">
                                </script>
                                <div class="search-container">
                                    <form>
                                        <div id="o_5HtqWMN0uYJIYXvoJqyA" class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="0lW5OKcDr0C2RHmQ5nPqgA">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="0lW5OKcDr0C2RHmQ5nPqgA:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator feedback-topic-required">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                    </div>
                                                </div>
                                                <h1>Development - Collector <img src="../../../resources/images/shoptype/demoshop.png" /></h1>
                                                <p>The Collector module provides mechanisms to manage data consumed by front-end application.

To populate the data stores, 4 steps are required:

</p>
                                                <ul class="obullet">
                                                    <li class="bullet_list" value="1"><a href="#Touch" class="MCXref xref">Touch
</a><![CDATA[
]]></li>
                                                    <li class="bullet_list" value="2"><a href="#Configu" class="MCXref xref">
Configure
</a><![CDATA[
]]></li>
                                                    <li class="bullet_list" value="3"><a href="#Collect" class="MCXref xref">Collect
</a><![CDATA[
]]></li>
                                                </ul>
                                                <h2><a name="Touch"></a>Touch
</h2>
                                                <p>In order for anything to be synchronized, first it has to be marked (touched) via the Touch mechanism. Each collector uses this mechanism to be able to determine which data should be added, updated or deleted.

</p>
                                                <p class="info">
                                                    <br />Cascading Updates, depending on the type of data changed, can trigger cascade update of multiple resources. <br />For example: renaming of a category will result in updating the urls, category nodes, navigation and products.
</p>
                                                <p>The basic idea is that, any resource which should be exported, has an entry in the <var>spy_touch</var> table. This table is used by collector’s query, to collect items marked for synchronization.

</p>
                                                <p>See Touch  for more information.

</p>
                                                <h3>Touch Record
</h3>
                                                <p>CollectorQueries must read information from <var>spy_touch</var> table in order to determine which resources should be collected. Depending on Collector Store Type, the <var>spy_touch_storage</var> or <var>spy_touch_search</var> table records are also needed. These records are used to determine the keys of the resources that are exported to client-side data stores, and this combined information represents the <b>Touch Record</b>.

</p>
                                                <h4>SQL Touch Record Implementation
</h4>
                                                <p>To write a collector SQL query, you must include the following 3 columns:

</p>
                                                <ul>
                                                    <li class="bullet_list" value="1">id_touch from the spy_touch table
</li>
                                                    <li class="bullet_list" value="2">item_id from the spy_touch table
</li>
                                                    <li class="bullet_list" value="3">id either from the spy_touch_storage or the spy_touch_search, depending on the case.
</li>
                                                </ul>
                                                <p><b>Storage</b>:

</p><pre><code class="language-PHP line-numbers"> ...
    spy_touch.id_touch AS %s,
    spy_touch.item_id AS %s,
    spy_touch_storage.id_touch_storage AS %s,
 ...
   INNER JOIN spy_touch t ON (tree.id_category_node = t.item_id AND t.item_type = :itemType)
   LEFT JOIN spy_touch_storage ON spy_touch_storage.fk_touch = t.id_touch AND spy_touch_storage.fk_locale = :fk_locale</code></pre>
                                                <p><b>Search</b>:
</p><pre><code class="language-PHP line-numbers"> ...
    spy_touch.id_touch AS %s,
    spy_touch.item_id AS %s,
    spy_touch_search.id_touch_search AS %s,
 ...
   INNER JOIN spy_touch t ON (tree.id_category_node = t.item_id AND t.item_type = :itemType)
   LEFT JOIN spy_touch_search ON spy_touch_search.fk_touch = t.id_touch AND spy_touch_search.fk_locale = :fk_locale</code></pre>
                                                <p><var>
:itemType</var> is the collectorType and <var>:fk_locale</var> is <var>idLocale</var> from <var>spy_locale</var> table. Each placeholder (%s) for the Touch columns will be replaced by values that are defined in the <var>CollectorConfig</var>. Check <var>prepareCollectorScope()</var> methods for implementation details.

</p>
                                                <h4>Propel Touch Record Implementation
</h4>
                                                <p>For Propel type collector query those steps are not required, as the information about Touch Record is already integrated.
</p>
                                                <h2><a name="Configu"></a>
Configure
</h2>
                                                <p>The collectors register through plugins. When adding a new collector, you must create a dedicated plugin for it in the <var>Communication </var>layer, under the <var>Plugin/</var> folder. The plugin for the new collector must extend <var>AbstractCollectorPlugin</var> class and must implement the <var>run()</var> method which calls the corresponding <var>CollectorFacade</var> that calls the associated collector.

</p><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * @param \Orm\Zed\Touch\Persistence\SpyTouchQuery $baseQuery
 * @param \Generated\Shared\Transfer\LocaleTransfer $locale
 * @param \Spryker\Zed\Collector\Business\Model\BatchResultInterface $result
 * @param \Spryker\Zed\Collector\Business\Exporter\Writer\WriterInterface $dataWriter
 * @param \Spryker\Zed\Collector\Business\Exporter\Writer\TouchUpdaterInterface $touchUpdater
 * @param \Symfony\Component\Console\Output\OutputInterface $output
 *
 * @return void
 */
abstract public function run(
    SpyTouchQuery $baseQuery,
    LocaleTransfer $locale,
    BatchResultInterface $result,
    WriterInterface $dataWriter,
    TouchUpdaterInterface $touchUpdater,
    OutputInterface $output
);
?&gt;</code></pre>
                                                <p><b>Example</b>: <var>NavigationCollectorStoragePlugin</var>.</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Collector\Communication\Plugin;

use Generated\Shared\Transfer\LocaleTransfer;
use Orm\Zed\Touch\Persistence\SpyTouchQuery;
use Spryker\Zed\Collector\Business\Exporter\Writer\TouchUpdaterInterface;
use Spryker\Zed\Collector\Business\Exporter\Writer\WriterInterface;
use Spryker\Zed\Collector\Business\Model\BatchResultInterface;
use Spryker\Zed\Collector\Communication\Plugin\AbstractCollectorPlugin;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * @method \Pyz\Zed\Collector\Communication\CollectorCommunicationFactory getFactory()
 * @method \Pyz\Zed\Collector\Business\CollectorFacade getFacade()
 */
class NavigationCollectorStoragePlugin extends AbstractCollectorPlugin
{

    /**
     * @param \Orm\Zed\Touch\Persistence\SpyTouchQuery $baseQuery
     * @param \Generated\Shared\Transfer\LocaleTransfer $locale
     * @param \Spryker\Zed\Collector\Business\Model\BatchResultInterface $result
     * @param \Spryker\Zed\Collector\Business\Exporter\Writer\WriterInterface $dataWriter
     * @param \Spryker\Zed\Collector\Business\Exporter\Writer\TouchUpdaterInterface $touchUpdater
     * @param \Symfony\Component\Console\Output\OutputInterface $output
     *
     * @return void
     */
    public function run(
        SpyTouchQuery $baseQuery,
        LocaleTransfer $locale,
        BatchResultInterface $result,
        WriterInterface $dataWriter,
        TouchUpdaterInterface $touchUpdater,
        OutputInterface $output
    ) {
        $this-&gt;getFacade()
            -&gt;runStorageNavigationCollector($baseQuery, $locale, $result, $dataWriter, $touchUpdater, $output);
    }

}
?&gt;</code></pre>
                                                <p>
Of course, for each collector a dedicated method must be defined in the CollectorFacade, that makes the connection between the collector plugin and the collector.

</p><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * @param \Orm\Zed\Touch\Persistence\SpyTouchQuery $baseQuery
 * @param \Generated\Shared\Transfer\LocaleTransfer $locale
 * @param \Spryker\Zed\Collector\Business\Model\BatchResultInterface $result
 * @param \Spryker\Zed\Collector\Business\Exporter\Writer\WriterInterface $dataWriter
 * @param \Spryker\Zed\Collector\Business\Exporter\Writer\TouchUpdaterInterface $touchUpdater
 *
 * @return void
 */
public function runStorageNavigationCollector(
    SpyTouchQuery $baseQuery,
    LocaleTransfer $locale,
    BatchResultInterface $result,
    WriterInterface $dataWriter,
    TouchUpdaterInterface $touchUpdater,
    OutputInterface $output
) {
    $this-&gt;getFactory()
        -&gt;createStorageNavigationCollector()
        -&gt;run($baseQuery, $locale, $result, $dataWriter, $touchUpdater, $output);
}
?&gt;</code></pre>
                                                <p>The collectors are registered in the application through their corresponding plugins in the <var>CollectorDependencyProvider </var>class.
</p>
                                                <p>
the collectors that gather data for search type store are registered under <var>SEARCH_PLUGINS</var></p>
                                                <p>the collectors that gather data for the storage type store are registered under <var>STORAGE_PLUGINS</var><![CDATA[
]]></p><pre><code class="language-PHP line-numbers">&lt;?php
$container[static::SEARCH_PLUGINS] = function (Container $container) {
    return [
        'product_abstract' =&gt; new ProductCollectorSearchPlugin(),
    ];
};

$container[static::STORAGE_PLUGINS] = function (Container $container) {
    return [
        'product_abstract' =&gt; new ProductCollectorStoragePlugin(),
        'categorynode' =&gt; new CategoryNodeCollectorStoragePlugin(),
        'navigation' =&gt; new NavigationCollectorStoragePlugin(),
        'translation' =&gt; new TranslationCollectorStoragePlugin(),
        'page' =&gt; new PageCollectorStoragePlugin(),
        'block' =&gt; new BlockCollectorStoragePlugin(),
        'redirect' =&gt; new RedirectCollectorStoragePlugin(),
        'url' =&gt; new UrlCollectorStoragePlugin(),
    ];
};
?&gt;</code></pre>
                                                <h2><a name="Collect"></a>Collect
</h2>
                                                <p>Data collection is done in 2 steps:

</p>
                                                <p>Querying/fetching data from the SQL database (Persistence layer)
</p>
                                                <p>Aggregating/processing data (Business layer)
</p>
                                                <h3>Query
</h3>
                                                <p>To fetch data from the database, you can either use a <var>Propel </var>or <var>PDO </var>type query, under the Persistence layer.

</p>
                                                <ul>
                                                    <li class="bullet_list" value="1"><var>AbstractPdoCollectorQuery</var> - uses native <var>SQL
</var></li>
                                                    <li class="bullet_list" value="2"><var>AbstractPropelCollectorQuery</var> - uses <var>Propel Query
</var></li>
                                                </ul>
                                                <h4>AbstractPdoCollectorQuery
</h4>
                                                <p><var>AbstractCollectorQuery</var> contains one abstract method <var>prepareQuery()</var>.

</p><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * @return void
 */
abstract protected function prepareQuery();
?&gt;</code></pre>
                                                <p>You can set your own SQL query with <var>sql()</var> method of <var>CriteriaBuilder</var> interface.
</p><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * @param string $sqlTemplate
 *
 * @return $this
 */
public function sql($sqlTemplate);
?&gt;</code></pre>
                                                <p>Example of the <var>NavigationCollector</var> query, that uses native <var>PostgreSQL</var> to retrieve hierarchical navigation data.
</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Example of the <var>NavigationCollector</var> query, that uses native <var>PostgreSQL</var> to retrieve hierarchical navigation data.</a></span>
                                                    <div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Collector\Persistence\Storage\Pdo\PostgreSql;

use Spryker\Zed\Collector\Persistence\Exporter\AbstractPdoCollectorQuery;

class NavigationCollectorQuery extends AbstractPdoCollectorQuery
{

    /**
     * @return void
     */
    protected function prepareQuery()
    {
        $sql = '
WITH RECURSIVE
    tree AS
  (
    SELECT
      n.id_category_node,
      n.fk_parent_category_node,
      n.fk_category,
      n.node_order
    FROM spy_category_node n
      INNER JOIN spy_category c ON c.id_category = n.fk_category AND c.is_active = TRUE AND c.is_in_menu = TRUE
      INNER JOIN spy_touch t ON (
        n.id_category_node = t.item_id
        AND t.item_event = :spy_touch_item_event
        AND t.touched &gt;= :spy_touch_touched
        AND t.item_type = :spy_touch_item_type
      )
    WHERE n.is_root = TRUE

    UNION

    SELECT
      n.id_category_node,
      n.fk_parent_category_node,
      n.fk_category,
      n.node_order
    FROM tree
      INNER JOIN spy_category_node n ON n.fk_parent_category_node = tree.id_category_node
      INNER JOIN spy_category c ON c.id_category = n.fk_category AND c.is_active = TRUE AND c.is_in_menu = TRUE
  )
SELECT
  t.id_touch AS %s,
  t.item_id AS %s,
  spy_touch_storage.id_touch_storage AS %s,
  tree.*,
  u.url,
  ca.name,
  ca.meta_title,
  ca.meta_description,
  ca.meta_keywords,
  ca.category_image_name
FROM tree
  INNER JOIN spy_url u ON (u.fk_resource_categorynode = tree.id_category_node AND u.fk_locale = :fk_locale_1)
  INNER JOIN spy_category_attribute ca ON (ca.fk_category = tree.fk_category AND ca.fk_locale = :fk_locale_2)
  INNER JOIN spy_touch t ON (tree.id_category_node = t.item_id AND t.item_type = :itemType)
  LEFT JOIN spy_touch_storage ON spy_touch_storage.fk_touch = t.id_touch AND spy_touch_storage.fk_locale = :fk_locale_3
';
        $this-&gt;criteriaBuilder
            -&gt;sql($sql)
            -&gt;setOrderBy([
                'tree.fk_parent_category_node' =&gt; 'ASC',
                'tree.node_order' =&gt; 'DESC',
            ])
            -&gt;setParameter('itemType', 'categorynode')
            -&gt;setParameter('fk_locale_1', $this-&gt;locale-&gt;getIdLocale())
            -&gt;setParameter('fk_locale_2', $this-&gt;locale-&gt;getIdLocale())
            -&gt;setParameter('fk_locale_3', $this-&gt;locale-&gt;getIdLocale());
    }

}

?&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <h4>CriteriaBuilder
</h4>
                                                <p>The collector will use conditions generated by <var>CriteriaBuilder </var>to create data set for synchronization.

</p>
                                                <p>CriteriaBuilder provides an interface that that makes sure all the parameters and their values are properly bind, or if the order and limit a properly setup, and if they are in the right place in SQL query.

</p>
                                                <h4>AbstractPropelCollectorQuery
</h4>
                                                <p>Implementation of <var>AbstractCollectorQuery</var> is fairly simple, as it has only one abstract method <var>prepareQuery()</var>.
</p><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * @return void
 */
abstract protected function prepareQuery();
?&gt;
</code></pre>
                                                <p>You define your criteria with <var>touchQuery</var> interface, using <var>Propel Query</var>.

</p>
                                                <p>Example of <var>BlockCollector</var> query, which uses <var>Propel Query</var> to retrieve CMS blocks data.
</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Example of a <var>BlockCollector</var> query, using a <var>Propel Query</var> to retrieve CMS blocks data.
</a></span>
                                                    <div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Collector\Persistence\Storage\Propel;

use Orm\Zed\Cms\Persistence\Map\SpyCmsBlockTableMap;
use Orm\Zed\Cms\Persistence\Map\SpyCmsGlossaryKeyMappingTableMap;
use Orm\Zed\Cms\Persistence\Map\SpyCmsPageTableMap;
use Orm\Zed\Cms\Persistence\Map\SpyCmsTemplateTableMap;
use Orm\Zed\Glossary\Persistence\Map\SpyGlossaryKeyTableMap;
use Orm\Zed\Touch\Persistence\Map\SpyTouchTableMap;
use Orm\Zed\Url\Persistence\Map\SpyUrlTableMap;
use Propel\Runtime\ActiveQuery\Criteria;
use Spryker\Zed\Collector\Persistence\Exporter\AbstractPropelCollectorQuery;

class BlockCollectorQuery extends AbstractPropelCollectorQuery
{

    /**
     * @return void
     */
    protected function prepareQuery()
    {
        $this-&gt;touchQuery-&gt;addJoin(
            SpyTouchTableMap::COL_ITEM_ID,
            SpyCmsBlockTableMap::COL_ID_CMS_BLOCK,
            Criteria::INNER_JOIN
        );
        $this-&gt;touchQuery-&gt;addJoin(
            SpyCmsBlockTableMap::COL_FK_PAGE,
            SpyCmsPageTableMap::COL_ID_CMS_PAGE,
            Criteria::INNER_JOIN
        );
        $this-&gt;touchQuery-&gt;addJoin(
            SpyCmsPageTableMap::COL_ID_CMS_PAGE,
            SpyCmsGlossaryKeyMappingTableMap::COL_FK_PAGE,
            Criteria::INNER_JOIN
        );
        $this-&gt;touchQuery-&gt;addJoin(
            SpyCmsPageTableMap::COL_FK_TEMPLATE,
            SpyCmsTemplateTableMap::COL_ID_CMS_TEMPLATE,
            Criteria::INNER_JOIN
        );
        $this-&gt;touchQuery-&gt;addJoin(
            SpyCmsGlossaryKeyMappingTableMap::COL_FK_GLOSSARY_KEY,
            SpyGlossaryKeyTableMap::COL_ID_GLOSSARY_KEY,
            Criteria::INNER_JOIN
        );

        $this-&gt;touchQuery-&gt;addAnd(
            SpyUrlTableMap::COL_FK_LOCALE,
            $this-&gt;getLocale()-&gt;getIdLocale(),
            Criteria::EQUAL
        );

        $this-&gt;touchQuery-&gt;withColumn(SpyCmsBlockTableMap::COL_ID_CMS_BLOCK, 'block_id');
        $this-&gt;touchQuery-&gt;withColumn(SpyCmsBlockTableMap::COL_NAME, 'block_name');
        $this-&gt;touchQuery-&gt;withColumn(SpyCmsBlockTableMap::COL_TYPE, 'block_type');
        $this-&gt;touchQuery-&gt;withColumn(SpyCmsBlockTableMap::COL_VALUE, 'block_value');
        $this-&gt;touchQuery-&gt;withColumn(SpyCmsGlossaryKeyMappingTableMap::COL_PLACEHOLDER, 'placeholder');
        $this-&gt;touchQuery-&gt;withColumn(SpyCmsTemplateTableMap::COL_TEMPLATE_PATH, 'template_path');
        $this-&gt;touchQuery-&gt;withColumn(SpyCmsPageTableMap::COL_IS_ACTIVE, 'isActive');
        $this-&gt;touchQuery-&gt;withColumn(SpyGlossaryKeyTableMap::COL_KEY, 'translation_key');
    }

}

?&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <h3>Process</h3>
                                                <p>There are four collector types, grouped by store and query type they use.</p>
                                                <h4>Storage Collectors</h4>
                                                <ul>
                                                    <li class="bullet_list" value="1"><var>AbstractStoragePdoCollector</var> - uses <var>PDO </var>type query</li>
                                                    <li class="bullet_list" value="2"><var>AbstractStoragePropelCollector</var> - uses <var>Propel </var>type query</li>
                                                </ul>
                                                <p>The entities processed by those collectors will be synchronized with Storage type data store.</p>
                                                <h4>Search Collectors</h4>
                                                <ul>
                                                    <li class="bullet_list" value="1"><var>AbstractSearchPdoCollector</var> - uses <var>PDO </var>type query</li>
                                                    <li class="bullet_list" value="2"><var>AbstractSearchPropelCollector</var> - uses <var>Propel </var>type query</li>
                                                </ul>
                                                <p>The entities processed by those collectors will be synchronized with Search type data store.</p>
                                                <p>After fetching data from the <var>Persistence </var>layer, and processing in Buissiness layer, it is saved under the <var>TouchKey </var>in the data store. A <var>TouchKey </var>is any unique string that can be used to identify resources in the stores.</p>
                                                <p>There are two abstract methods, which every collector has to implement.</p><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * @param string $touchKey
 * @param array $collectItemData
 *
 * @return array
 */
abstract protected function collectItem($touchKey, array $collectItemData);

/**
 * @return string
 */
abstract protected function collectResourceType();
?&gt;</code></pre>
                                                <p>The string returned by <var>collectResourceType()</var> is used to generate the <var>TouchKey</var>.</p>
                                                <p>The <var>collectItem()</var> method decides which data is saved under the <var>TouchKey </var>in the store.</p>
                                                <p>Example of a <var>RedirectCollector</var> class, which uses Storage type data store.</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Collector\Business\Storage;

use Spryker\Zed\Collector\Business\Collector\Storage\AbstractStoragePropelCollector;
use Spryker\Zed\Url\UrlConfig;

class RedirectCollector extends AbstractStoragePropelCollector
{

    /**
     * @return string
     */
    protected function collectResourceType()
    {
        return 'redirect';
    }

    /**
     * @param string $touchKey
     * @param array $collectItemData
     *
     * @return array
     */
    protected function collectItem($touchKey, array $collectItemData)
    {
        return [
            'from_url' =&gt; $collectItemData['from_url'],
            'to_url' =&gt; $collectItemData['to_url'],
            'status' =&gt; $collectItemData['status'],
            'id' =&gt; $collectItemData['id'],
        ];
    }

}
?&gt;</code></pre>
                                                <p>The output of this collector will produce a <var>redirect </var>type entity, stored under <var>kv:de.de_de.resource.redirect.1 </var>key, with the following content:</p><pre><code class="language-PHP line-numbers">{
    "from_url": "/imp",
    "to_url": "/impressum",
    "status": 303,
    "id": 1
}</code></pre>
                                                <p>The content of <var>$collectItemData</var> array represents one row from the result set, generated by the collector’s query in Persistence layer.</p>
                                                <p><![CDATA[
]]><a href="javascript:void(0);" class="MCHelpControl MCHelpControl-Related relatedTopics" data-mc-topics="Collector Types |collector-types.htm||collector_development|collector_development.htm||Running Collectors |collector-running.htm||Scheduling Collector Jobs |collector-sched-collector-jobs.htm"><span class="MCHelpControl-RelatedHotSpot_"><img class="MCHelpControl_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="16" alt="Related Topics Link Icon" />Related Topics</span></a></p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>