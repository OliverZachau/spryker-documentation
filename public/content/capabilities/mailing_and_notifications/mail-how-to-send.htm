<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-conditions="Spryker.B2C,Spryker.B2B" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Capabilities|Capabilities|Mailing and Notifications">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>How To Send a Mail</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/MadCapSearch.Google.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.Google.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form>
                                            <div id="ZL2XDOl1q0ilEvZkcagRUQ" class="search-bar search-bar-container needs-pie">
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <script src="../../resources/prism.js">
                                </script>
                                <div class="search-container">
                                    <form>
                                        <div id="WQZZCFwDWECqGlNZ7hMPlQ" class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="ajUfvCeVWEeOgkl8S2pSKQ">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="ajUfvCeVWEeOgkl8S2pSKQ:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator feedback-topic-required">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                    </div>
                                                </div>
                                                <h1>How To Send a Mail</h1>
                                                <p>The following example represents a real-world scenario: CustomerRegistration.</p>
                                                <p>A Customer goes through the registration process in your frontend (Yves) and all customer information is sent to Zed. Zed uses the information to register the customer. Once the registration is completed, the customer will receive a confirmation email.</p>
                                                <p>In the model which handles the registration you will then do something similar to this:</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Customer\Business\Model\Customer;

    ...
    
    // customer registration code
    $this-&gt;sendMail($customerTransfer);
    
    ...
    
    protected function sendMail(CustomerTransfer $customerTransfer) 
    {
        // Create a MailTransfer instance which is 
        // used for further processing
        $mailTransfer = new MailTransfer();
        
        // Set the mail type which is used for the 
        // internal mapping e.g. which mail provider
        // should send this mail
        $mailTransfer-&gt;setType(CustomerRegistrationMailTypePlugin::MAIL_TYPE);
        
        // Set the CustomerTransfer to the MailTransfer
        // this can be any Transfer object which is 
        // needed in the Mail
        $mailTransfer-&gt;setCustomer($customerTransfer);
        
        // Set the LocaleTransfer which should be used 
        // for e.g. translation inside your templates
        $mailTransfer-&gt;setLocale($customerTransfer-&gt;getLocale());

        // Trigger the mail facade to handle the mail
        $this-&gt;mailFacade-&gt;handleMail($mailTransfer);
    }

...</code></pre>
                                                <p>All <var>MailTransfer</var>’s need at least to know which mail type (nothing more than a string) should be used for further internal processing.</p>
                                                <p>A minimalistic example could look like this:</p><pre><code class="language-PHP line-numbers">&lt;?php
...
protected function sendMail() 
{
    $mailTransfer = new MailTransfer();
    $mailTransfer-&gt;setType(YourMailTypePlugin::MAIL_TYPE);
    $this-&gt;mailFacade-&gt;handleMail($mailTransfer);
}</code></pre>
                                                <p>Now let’s have a detailed look into the MailType plugin used for this example:</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Customer\Communication\Plugin\Mail;

use Spryker\Zed\Kernel\Communication\AbstractPlugin;
use Spryker\Zed\Mail\Business\Model\Mail\Builder\MailBuilderInterface;
use Spryker\Zed\Mail\Dependency\Plugin\MailTypeInterface;

class CustomerRegistrationMailTypePlugin extends AbstractPlugin implements MailTypePluginInterface
{

    const MAIL_TYPE = 'customer registration mail';
    
    /**
     * @return string
     */
    public function getName()
    {
        return static::MAIL_TYPE;
    }
    
    /**
     * @param \Spryker\Zed\Mail\Business\Model\Mail\Builder\MailBuilderInterface $mailBuilder
     *
     * @return void
     */
    public function build(MailBuilderInterface $mailBuilder)
    {
        $this
            -&gt;setSubject($mailBuilder)
            -&gt;setHtmlTemplate($mailBuilder)
            -&gt;setTextTemplate($mailBuilder)
            -&gt;setSender($mailBuilder)
            -&gt;setRecipient($mailBuilder);
    }
    
    ...
    
    protected function setRecipient(MailBuilderInterface $mailBuilder)
    {
        // Get the CusomterTransfer which was added
        // to the MailTransfer in the sendMail() method
        // of the Customer model
        $customerTransfer = $mailBuilder-&gt;getMailTransfer()-&gt;getCustomer();
        
        // Use the customer information to add the needed
        // recipient information through the MailBuilder
        // to the MailTransfer
        $mailBuilder-&gt;addRecipient(
            $customerTransfer-&gt;getEmail(),
            $customerTransfer-&gt;getFirstName() . ' ' . $customerTransfer-&gt;getLastName()
        );
    }
}</code></pre>
                                                <p>The Mail <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>’s default MailBuilder is already pre-defined to build the <var>MailTransfer</var>. MailBuilder internally adds a new <var>MailRecipientTransfer </var>with the passed information, email and name.</p>
                                                <p>When plugin is created, it should be registered it in MailDependencyProvider:</p><pre><code class="language-PHP line-numbers">&lt;?php
        ...
        $container-&gt;extend(self::MAIL_TYPE_COLLECTION, function (MailTypeCollectionAddInterface $mailCollection) {
            $mailCollection
                -&gt;add(new CustomerRegistrationMailTypePlugin());

            return $mailCollection
        });
        ...
 ?&gt;</code></pre>
                                                <p>The default, MailBuilder also has access to the glossary with the <var>setSubject()</var> method. This is used for translations as follows:</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Customer\Communication\Plugin\Mail;

use Spryker\Zed\Kernel\Communication\AbstractPlugin;
use Spryker\Zed\Mail\Business\Model\Mail\Builder\MailBuilderInterface;
use Spryker\Zed\Mail\Dependency\Plugin\MailTypeInterface;

class CustomerRegistrationMailTypePlugin extends AbstractPlugin implements MailTypePluginInterface
{
    ...
    protected function setSubject(MailBuilderInterface $mailBuilder)
    {
        $mailBuilder-&gt;setSubject('mail.customer.registration.subject');
    }
    ...
}</code></pre>
                                                <p>A string is used as a key of the translation. The MailBuilder internally does the translation through the <var>GlossaryFacade</var>:</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Spryker\Zed\Mail\Business\Model\Mail\Builder;
    
    ...
    
    protected function setSubject($subject, array $data = [])
    {
        $subject = $this-&gt;translate($subject, $data);
        
        $this-&gt;getMailTransfer()-&gt;setSubject($subject);
        
        return $this;
    }
    ...
    
    protected function translate($keyName, array $data = [])
    {
        $localeTransfer = $this-&gt;getLocaleTransfer();

        if ($this-&gt;glossaryFacade-&gt;hasTranslation($keyName, $localeTransfer)) {
            $keyName = $this-&gt;glossaryFacade-&gt;translate($keyName, $data, $localeTransfer);
        }

        return $keyName;
    }
}</code></pre>
                                                <p>As you can see above, you can also translate with placeholder. For the <var>mail.order.shipped.subject</var> key we have  <var>Your order {orderReference} is on its way</var> as translation.</p>
                                                <p>In your MailType plugin you can use the orderReference from the given OrderTransfer within the subject:</p><pre><code class="language-PHP line-numbers">&lt;?php
...
protected function setSubject(MailBuilderInterface $mailBuilder)
{
    $orderTransfer = $mailBuilder-&gt;getMailTransfer()-&gt;getOrder();
    
    $mailBuilder-&gt;setSubject(
        'mail.order.shipped.subject',
        [
            '{orderReference}' =&gt; $orderTransfer-&gt;getOrderReference()
        ]
    );
}
...
}</code></pre>
                                                <h2>Templates</h2>
                                                <p>Usually you will have a <var>*.twig</var> file which contains the template you want to use for mail. You need to set the template which should be used in your MailType plugin:</p><pre><code class="language-PHP line-numbers">&lt;?php
...
protected function setTextTemplate(MailBuilderInterface $mailBuilder)
{
    $mailBuilder-&gt;setTextTemplate('customer/mail/customer_registration.text.twig');
}
...
}</code></pre>
                                                <p>The provider determines the template’s final look. It can contain plain text, HTML, etc. For example you can even have a template which generates JSON:</p><pre><code class="language-PHP line-numbers">{
    ...
    customer: "{{ mail.customer.firstName }} {{ mail.customer.lastName }}",
    ...
}</code></pre>
                                                <p>In our example we have a plain text template with:</p><pre><code class="language-PHP line-numbers">{{ 'mail.customer.registration.text' | trans }}</code></pre>
                                                <p>The templates must be placed within the bundles Presentation layer. In our example <var>src/Pyz/Zed/Customer/Presentation/Mail/customer_registration.text.twig</var>. You can use the same <var>trans</var> filter as used with Yves and Zed templates.</p>
                                                <p><var>TwigRenderer</var> is the default renderer, but you can add your own Renderer by implementing the <var>RendererInterface</var>.</p>
                                                <p>We also provide a basic layout file to where you can inject concrete content files. If you want to build your own layout, you need to have the following in your template:</p><pre><code class="language-PHP line-numbers">{% for template in mail.templates %}
    {% if not template.isHtml %}
        {% include "@" ~ template.name with {mail: mail} %}
    {% endif %}
{% endfor %}</code></pre>
                                                <p>This one is used for plain text messages, and templates can also be used to generate JSON or a query strings like <var>customer={{ mail.customer.firstName }}&amp;orderReference={{ mail.order.orderReference }}</var> - it’s up to your provider to decide what you need to render.</p>
                                                <p>For HTML messages you need to have this in your layout file:</p><pre><code class="language-PHP line-numbers">{% for template in mail.templates %}
    {% if template.isHtml %}
        {% include "@" ~ template.name with {mail: mail} %}
    {% endif %}
{% endfor %}</code></pre>
                                                <p>Once you have completed the steps below, call <var>MailFacade::handleMail()</var> to activate the mail functionality.</p>
                                                <p>&#160;</p>
                                                <p><b>See also:</b>
                                                </p>
                                                <ul>
                                                    <li value="1"><a href="mail.htm" class="MCXref xref">Mail   </a>
                                                    </li>
                                                    <li value="2"><a href="mail-create-provider-plugin.htm" class="MCXref xref">Create a MailProviderPlugin  </a>
                                                    </li>
                                                    <li value="3"><a href="mail-create-type-plugin.htm" class="MCXref xref">Create a MailTypePlugin  </a>
                                                    </li>
                                                    <li value="4"><a href="mail-register-provider.htm" class="MCXref xref">Register the Mail Provider  </a>
                                                    </li>
                                                    <li value="5"><a href="mail-register-type.htm" class="MCXref xref">Register a MailTypePlugin  </a>
                                                    </li>
                                                </ul>
                                                <p>&#160;</p>
                                                <p><i>Last review date: Jan. 3rd, 2018</i>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>