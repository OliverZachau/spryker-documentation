<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Capabilities|Capabilities|Order Management">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Handling New Types of Entity URLs</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/MadCapSearch.Google.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.Google.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form>
                                            <div id="Y5ZnsTtj9EeFH5l_2tZ_Qg" class="search-bar search-bar-container needs-pie">
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <script src="../../resources/prism.js">
                                </script>
                                <div class="search-container">
                                    <form>
                                        <div id="zAZF2ll-yk2nAjbJjOwR1g" class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="0H3m-uTWpUutalDORNZiFw">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="0H3m-uTWpUutalDORNZiFw:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator feedback-topic-required">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                    </div>
                                                </div>
                                                <h1>Handling New Types of Entity URLs</h1>
                                                <p>The following information describes how to handle URLs for other types of entities that Spryker core provides.</p>
                                                <h2>Prerequisites</h2>
                                                <p>Before you begin, make sure the target entity is already in your database (the one to you would like to assign URLs to). In the examples below we'll call this entity <var>my_entity</var>. To see how to create new database tables check out our .</p>
                                                <p>The next step is to run a working storage collector to export your entities into the key-value storage (Redis). To see how to create a new collector see  <a href="../development/collector/collector-development.htm">Collector</a>. When you create the collector, make sure its resource type is called the same as your entity (<samp>my_entity</samp> in our examples).</p>
                                                <p>Once you have collected some data in the key-value storage, we can start to assign URLs to them and work towards displaying them on the frontend.</p>
                                                <h2>Preparing the Database</h2>
                                                <p>To begin, extend the <samp>spy_url</samp> table with a new foreign-key to our entity table. Following the existing naming convention for such columns, and prefix the name with <samp>fk_resource</samp>_, then end with the name of the new entity (i.e. <samp>fk_resource_my_entity</samp>).</p>
                                                <p>The propel schema XML file should appear as follows:</p>
                                                <p><samp>Pyz/Zed/MyBundle/Persistence/Propel/Schema/spy_url.schema.xml: </samp>
                                                </p><pre><code class="language-PHP line-numbers">&lt;?xml version="1.0"?&gt;
&lt;database xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="zed" xsi:noNamespaceSchemaLocation="http://static.spryker.com/schema-01.xsd" namespace="Orm\Zed\Url\Persistence" package="src.Orm.Zed.Url.Persistence"&gt;

    &lt;table name="spy_url" phpName="SpyUrl"&gt;
        &lt;column name="fk_resource_my_entity" type="INTEGER"/&gt;
        &lt;foreign-key name="spy_url-fk_resource_my_entity" foreignTable="my_entity" onDelete="CASCADE"&gt;
            &lt;reference foreign="id_my_entity" local="fk_resource_my_entity"/&gt;
        &lt;/foreign-key&gt;
    &lt;/table&gt;

&lt;/database&gt;</code></pre>
                                                <p>After adding the schema extension file, run the following Propel commands to migrate the changes:</p><pre><code class="language-PHP line-numbers">vendor/bin/console propel:diff
vendor/bin/console propel:migrate
vendor/bin/console propel:install</code></pre>
                                                <h2>Preparing URL Transfer Object</h2>
                                                <p>Define a new property for <var>UrlTransfer</var>. The name of the new property should match the name of the newly added database column's name but must be CamelCase formatted. The transfer definition xml should appear as follows:</p>
                                                <p><var>Pyz/Shared/MyBundle/Transfer/my_bundle.transfer.xml</var>: </p><pre><code class="language-PHP line-numbers">&lt;?xml version="1.0"?&gt;
&lt;transfers xmlns="spryker:transfer-01"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="spryker:transfer-01 http://static.spryker.com/transfer-01.xsd"&gt;

  &lt;transfer name="Url"&gt;
      &lt;property name="fkResourceMyEntity" type="int" /&gt;
  &lt;/transfer&gt;

&lt;/transfers&gt;</code></pre>
                                                <p>To apply the change to the <samp>UrlTransfer </samp>run the following command:</p><pre><code class="language-PHP line-numbers">vendor/bin/console transfer:generate</code></pre>
                                                <p>With the steps above we prepared both our database and our code to handle the URLs for the new type of entity.</p>
                                                <h2>Using the URL Facade</h2>
                                                <p>To manipulate URLs we use the URL module's public API:<samp>\Spryker\Zed\Url\Business\UrlFacade</samp>.</p>
                                                <p>The methods there accept instances of <samp>\Generated\Shared\Transfer\UrlTransfer</samp>. The code snippet below demonstrates how to create a new URL for my_entity.</p><pre><code class="language-PHP line-numbers">&lt;?php

/**
 * @param string $url
 * @param int $idMyEntity
 * @param int $idLocale
 *
 * @return \Generated\Shared\Transfer\UrlTransfer
 */
public function createUrlForMyEntity($url, $idMyEntity, $idLocale)
{
    $urlTransfer = new UrlTransfer();
    $urlTransfer
        -&gt;setUrl($url)
        -&gt;setFkResourceMyEntity($idMyEntity)
        -&gt;setFkLocale($idLocale);
    
    return $this-&gt;urlFacade-&gt;createUrl($urlTransfer);
}</code></pre>
                                                <p>The <var>\Spryker\Zed\Url\Business\UrlFacade::createUrl()</var> method persists a new URL in the database and also makes sure it will be collected to the key-value storage the next time the URL collector runs.</p>
                                                <h2>Setting up the Frontend</h2>
                                                <p>To setup the frontend we have to create a Controller class in Yves and make sure it is discoverable to the responsible router.</p>
                                                <p data-mc-conditions="Spryker.DemoShop">In the Spryker Demoshop we provide a basic infrastructure that automatically collects the <samp>new <var>my_entity</var> </samp>resource types to the key-value storage (Redis) and the <samp><var>\Pyz\Yves\Collector\Plugin\Router\StorageRouter</var> </samp>matches URLs that are stored there.</p>
                                                <p data-mc-conditions="Spryker.DemoShop">This router gets a stack of <var>\Pyz\Yves\Collector\Creator\ResourceCreatorInterface</var> which handles a URL resource linked to the matching URLs. This means that, if a URL <samp>/foo</samp> is linked to a <samp>my_entity </samp>record, then there must be a <var>ResourceCreator</var> for this URL that handles<var> my_entity</var> type of resources and forwards the right information about the Controller to the Router that handles the request. If there is no <var>ResourceCreator</var> registered for the <samp>my_entity </samp>resource type, a 404 not found page will be issued.</p>
                                                <p>To create an instance of <var>ResourceCreatorInterface</var> that provides information to a controller to handles URLs for our custom entity and register the <var>ResourceCreator</var> in the <samp><var>StorageRouter</var> </samp>follow the example below:</p>
                                                <p>First, create a simple controller that gets the collected <samp>my_entity</samp> data from the key-value storage.</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Click to expand the code sample</a></span>
                                                    <div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Yves\MyBundle\Controller;

use Spryker\Yves\Kernel\Controller\AbstractController;

class MyEntityController extends AbstractController
{

    /**
     * @param array $data
     *
     * @return \Symfony\Component\HttpFoundation\JsonResponse
     */
    public function indexAction(array $myEntityData)
    {
        // here you can handle the request for the entity that was matched with the requested URL.
        return $this-&gt;jsonResponse($myEntityData);
    }

}</code></pre>
                                                    </div>
                                                </div>
                                                <p data-mc-conditions="Spryker.DemoShop">Next implement the <i>ResourceCreator</i> that connects the router to our controller.</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Click to expand the code sample</a></span>
                                                    <div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php

namespace Pyz\Yves\MyBundle\ResourceCreator;

use Pyz\Yves\Collector\Creator\AbstractResourceCreator;
use Silex\Application;
use Spryker\Yves\Kernel\BundleControllerAction;
use Spryker\Yves\Kernel\Controller\BundleControllerActionRouteNameResolver;

class MyEntityResourceCreator extends AbstractResourceCreator
{

  /**
   * @return string
   */
  public function getType()
  {
      return 'my_entity'; // Name of the URL resource type which normally should also match with the name of the entity to handle.
  }

  /**
   * @param \Silex\Application $application
   * @param array $data
   *
   * @return array
   */
  public function createResource(Application $application, array $data)
  {
      $bundleControllerAction = new BundleControllerAction('MyBundle', 'MyEntity', 'index');
      $routeResolver = new BundleControllerActionRouteNameResolver($bundleControllerAction);
      $service = $this-&gt;createServiceForController($application, $bundleControllerAction, $routeResolver);

      return [
          '_controller' =&gt; $service,
          '_route' =&gt; $routeResolver-&gt;resolve(),
          'meta' =&gt; $data,
      ];
  }

}</code></pre>
                                                    </div>
                                                </div>
                                                <p data-mc-conditions="Spryker.DemoShop">Create a simple factory and a plugin to provide the <i>ResourceCreator</i> to the Collector module. Use plugins to communicate between module in Yves.</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Click to expand the code sample</a></span>
                                                    <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="bash">&lt;?php

namespace Pyz\Yves\MyBundle;

use Pyz\Yves\MyBundle\ResourceCreator\MyEntityResourceCreator;
use Spryker\Yves\Kernel\AbstractFactory;

class MyBundleFactory extends AbstractFactory
{
    /**
     * @return MyEntityResourceCreator
     */
    public function createMyEntityResourceCreator()
    {
        return new MyEntityResourceCreator();
    }
}</code></pre>
                                                    </div>
                                                </div>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Click to expand the code sample</a></span>
                                                    <div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php

namespace Pyz\Yves\MyBundle\Plugin;

use Spryker\Yves\Kernel\AbstractPlugin;

/**
 * @method \Pyz\Yves\MyBundle\MyBundleFactory getFactory()
 */
class MyEntityResourceCreatorPlugin extends AbstractPlugin
{

    /**
     * @return \Pyz\Yves\MyBundle\ResourceCreator\MyEntityResourceCreator
     */
    public function createMyEntityResourceCreator()
    {
        return $this-&gt;getFactory()-&gt;createMyEntityResourceCreator();
    }

}</code></pre>
                                                    </div>
                                                </div>
                                                <p data-mc-conditions="Spryker.DemoShop">In<samp> \Pyz\Yves\Collector\CollectorDependencyProvider</samp> provide the plugin to the Collector module:</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Click to expand the code sample</a></span>
                                                    <div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php

namespace Pyz\Yves\Collector;

use Pyz\Yves\MyBundle\Plugin\MyEntityResourceCreatorPlugin;
use Spryker\Yves\Kernel\AbstractBundleDependencyProvider;
use Spryker\Yves\Kernel\Container;

class CollectorDependencyProvider extends AbstractBundleDependencyProvider
{

    const PLUGIN_MY_ENTITY_RESOURCE_CREATOR = 'PLUGIN_MY_ENTITY_RESOURCE_CREATOR';

    /**
     * @param \Spryker\Yves\Kernel\Container $container
     *
     * @return \Spryker\Yves\Kernel\Container
     */
    protected function providePlugins(Container $container)
    {
        // ...

        $container[self::PLUGIN_MY_ENTITY_RESOURCE_CREATOR] = function () {
            $productResourceCreatorPlugin = new MyEntityResourceCreatorPlugin();

            return $productResourceCreatorPlugin-&gt;createMyEntityResourceCreator();
        };

        return $container;
    }

}</code></pre>
                                                    </div>
                                                </div>
                                                <p data-mc-conditions="Spryker.DemoShop">Finally in <samp><var>\Pyz\Yves\Collector\CollectorFactory</var> </samp>add the plugin to the <var>ResourceCreator</var> stack that the <samp><var>StorageRouter</var> </samp>will use for matching resources.</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Click to expand the code sample</a></span>
                                                    <div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php

namespace Pyz\Yves\Collector;

use Pyz\Yves\Collector\Mapper\ParameterMerger;
use Pyz\Yves\Collector\Mapper\UrlMapper;
use Spryker\Yves\Kernel\AbstractFactory;

class CollectorFactory extends AbstractFactory
{

   /**
    * @return \Pyz\Yves\Collector\Creator\ResourceCreatorInterface[]
    */
   public function createResourceCreators()
   {
       return [
           // ...
           $this-&gt;createMyEntityResourceCreator(),
       ];
   }

   /**
    * @return Pyz\Yves\MyBundle\ResourceCreator\MyEntityResourceCreator
    */
   protected function createMyEntityResourceCreator()
   {
       return $this-&gt;getProvidedDependency(CollectorDependencyProvider::PLUGIN_MY_ENTITY_RESOURCE_CREATOR);
   }

}</code></pre>
                                                    </div>
                                                </div>
                                                <h2>Next Steps</h2>
                                                <p>We should now be able to open the URLs in Yves for the new entities that already have assigned URLs and were collected to the key-value storage as described above. Next, we can handle the request in our new controller properly, create some twig templates and display the page in a well formatted way, or anything that requirements bring.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>