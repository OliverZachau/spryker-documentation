<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Capabilities|Capabilities|Checkout">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Checkout Steps</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/MadCapSearch.Google.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.Google.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form>
                                            <div id="lXx8h3Ni90KiWbMH4ljRuw" class="search-bar search-bar-container needs-pie">
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <script src="../../resources/prism.js">
                                </script>
                                <div class="search-container">
                                    <form>
                                        <div id="e-zkXX4lN0iQ6n6MeO7SSA" class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="eCat9RFcA0unNP6ILzeiCQ">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="eCat9RFcA0unNP6ILzeiCQ:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator feedback-topic-required">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                    </div>
                                                </div>
                                                <h1>Checkout Steps</h1>
                                                <h2>Entry Step</h2>
                                                <p>Redirect customer to correct step based on QuoteTransfer state. This step requires <var>input = false</var> so it won’t be rendered.</p>
                                                <h2>Customer Step</h2>
                                                <p>The customer step provides three forms (login, register and register as a guest). This step is responsible for filling <var>CustomerTransfer</var> with corresponding data. The authentication logic is left to customer <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>, this step is only delegating calls to (and from) customer <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> and mapping data with forms.</p>
                                                <h2>Address Step</h2>
                                                <p>The address step where customer fills billing and shipping addresses in <var>QuoteTransfer::billing</var> and <var>QuoteTransfer::shipping </var>respectively. This step lets the returning customers to select one of the existing addresses or create a new one. New and guest customers can only create a new address. If a new address is selected, then it’s only created when order is placed in <var>OrderCustomerSavePlugin</var>. This step will be skipped if already signed in customer uses checkout.</p>
                                                <h2>Shipment Step</h2>
                                                <p>Get shipment method information and store it into the quote. This step requires additional configuration because different shipment providers and different ways forms should be handled for each.</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /><strong>Form Handling</strong>:</a></span>
                                                    <div class="MCDropDownBody dropDownBody">
                                                        <p><var>ShipmentForm</var> uses subforms, each subform is implemented as a plugin that implements <var>CheckoutSubFormInterface</var> and is provided in <var>CheckoutFactory::createShipmentMethodsSubForms()</var> Main form uses quote transfer as data store. Data for shipment is stored under <var>QuoteTransfer::shipment</var> as a <var>ShipmentTransfer</var>object.</p>
                                                        <p><var>ShipmentTransfer</var> contains:</p>
                                                        <ul>
                                                            <li class="bullet_list" value="1">shipmentSelection (string) — name of the form for the selected shipment.</li>
                                                            <li class="bullet_list" value="2">carrier (ShipmentCarrierTransfer) —</li>
                                                            <li class="bullet_list" value="3">method (ShipmentMethodTransfer) — information about the shipment method that is currently selected.</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /><strong>Data Handling:</strong></a></span>
                                                    <div class="MCDropDownBody dropDownBody">
                                                        <p>Data handling happens after a valid form is being submitted during the <var>ShipmentStep</var>; step receives plugins that implement <var>CheckoutStepHandlerPluginInterface</var> and provided in <var>CheckoutFactory::createShipmentPlugins()</var>. When <var>execute()</var> method is called on <var>ShipmentStep</var> then the plugin that is identified by the <var>ShipmentTransfer::shipmentSelection</var> string is selected and method <var>CheckoutStepHandlerPluginInterface::addToQuote()</var> is called to update `QuoteTransfer with payment data. From this part the data handling is left to concrete CheckoutStepHandler.</p>
                                                        <p>The approach of implementing shipment and payment handlers and forms are the same <a href="#payment_step">PaymentStep</a></p>
                                                    </div>
                                                </div>
                                                <h2><a name="payment_step"></a>Payment Step</h2>
                                                <p>Get payment information and store it into quote for later processing when state machine is triggered.</p>
                                                <p>Payment step has similar structure and data handling mechanics as the shipment step does.</p>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /><strong>Form Handling</strong>:</a></span>
                                                    <div class="MCDropDownBody dropDownBody">
                                                        <p><var>PaymentForm</var> uses subforms, each subform is implemented as a plugin that implements <var>CheckoutSubFormPluginInterface</var> and is provided in the <var>CheckoutFactory::createPaymentMethodSubForms()</var>. Main form uses <var>QuoteTransfer</var> as a data store. Data for payment is stored under <var>QuoteTransfer::payment</var> as a <var>PaymentTransfer</var>` object.</p>
                                                        <p>Main form has radio buttons, where the customer can select from the available payment methods. Choices are built from the subform name. Each provided subform corresponds to a radio input.</p>
                                                        <p>When the form is created it requires the property path to be provided so that it knows how to map it’s subform to <var>QuoteTransfer</var>. see <a href="http://symfony.com/doc/current/reference/forms/types/form.html#property-path" target="_blank">property_path</a>. Property path is built out of few parts of <var>PaymentTransfer::payment</var> and subform provides <var>getPropertyPath()</var> that returns a string; this string should return the property that exists under <var>PaymentTransfer</var>.</p>
                                                        <p><var>PaymentTransfer </var>includes:</p>
                                                        <ul>
                                                            <li class="bullet_list" value="1">paymentProvider (string) — payment provider name (Paypal, Payolution etc..).</li>
                                                            <li class="bullet_list" value="2">paymentMethod (string) — payment method (credit card, invoice).</li>
                                                            <li class="bullet_list" value="3">paymentSelection (string) — subform name that is currently selected.</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /><strong>Data handling</strong>:</a></span>
                                                    <div class="MCDropDownBody dropDownBody">
                                                        <p>Data handling happens after a valid form is submitted during the <var>PaymentStep</var>; the step receives plugins that implement <var>CheckoutStepHandlerPluginInterface</var> and that are provided in the <var>CheckoutFactory::createPaymentPlugins()</var>. When <var>execute()</var> method is called on <var>PaymentStep</var>, the plugin that is identified by <var>PaymentTransfer::paymentSelection</var> string is selected and the <var>CheckoutStepHandlerPluginInterface::addToQuote()</var> is called to update `QuoteTransfer with payment data. From this part all population or data handling is left to concrete CheckoutStepHandler.</p>
                                                        <p>Example: a new payment method <var>Paypal</var> must be added. First step would be to add the new property to <var>PaymentTransfer</var> and call it <var>paypal</var>. This property will use <var>PaypalTransfer</var> and it will contain the data we need to map the details from the form. Next create/use Paypal <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> to add step plugin.</p>
                                                        <p>In the Paypal <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> add the following plugins:</p>
                                                        <ul>
                                                            <li class="bullet_list" value="1">Create <var>PaypalCheckoutSubForm</var> implementing <var>CheckoutSubFormPluginInterface </var>that returns a subform that implements <var>SubFormInterface</var></li>
                                                            <li class="bullet_list" value="2">Create <var>PaypalHandler</var> implementing <var>CheckoutStepHandlerPluginInterface</var> that should populate <var>QuoteTransfer:payment:paypal</var> with <var>PaypalTransfer</var></li>
                                                        </ul>
                                                        <p>After creation you need to add the plugins to the checkout process; to do this you need to create a <var>CheckoutDependencyInjector</var> inside your <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> and configure it to be used by the Checkout <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span>.</p>
                                                        <p>From there you can simply inject the needed forms and handler.</p>
                                                        <p>Add your form to the <var>CheckoutSubFormPluginCollection</var> by extending the given <var>CheckoutDependencyProvider::PAYMENT_SUB_FORMS</var></p>
                                                        <p>Your handler needs to be added to the <var>CheckoutStepHandlerPluginCollection</var> by extending the given <var>CheckoutDependencyProvider::PAYMENT_METHOD_HANDLER</var></p>
                                                        <p>After this, you should be able to see the new payment selection with subform rendered below.</p>
                                                    </div>
                                                </div>
                                                <h2>Summary Step</h2>
                                                <p>Display order information about to be placed, item details and order totals.</p>
                                                <h2>Place Order Step</h2>
                                                <p>Place order into system. This step requires <var>input = false</var>. This step makes Zed HTTP request which sends <var>QuoteTransfer</var>. In this step all order saving is happening.</p>
                                                <h2>Success Page</h2>
                                                <p>Display success page, on executing, clears <var>QuoteTransfer</var>, also customer session is marked as dirty so that with next request it would reload with updated data (new customer address).</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>