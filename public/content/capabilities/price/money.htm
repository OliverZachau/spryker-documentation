<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Capabilities|Capabilities|Price">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Money</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/MadCapSearch.Google.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <link href="../../resources/tablestyles/patternedrows.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.Google.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form>
                                            <div id="jAgM3ZMb9EKPv6VQrvCK3g" class="search-bar search-bar-container needs-pie">
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <script src="../../resources/prism.js">
                                </script>
                                <div class="search-container">
                                    <form>
                                        <div id="VGq1oSmHjkmNgKudWALw6Q" class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="fbihAoiEvkmaai_4X6OC4g">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="fbihAoiEvkmaai_4X6OC4g:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator feedback-topic-required">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                    </div>
                                                </div>
                                                <h1>Money</h1>
                                                <p class="tip"><strong>Money</strong>
                                                    <br />Handling monetary values can be a problem and is often quite hard. The Money bundle makes it easier to work with monetary values.</p>
                                                <p>Spryker handles all monetary values as integer and provides conversions from decimal values to cent values and vice versa.</p>
                                                <p>The key feature of this module is to convert a <var>MoneyTransfer</var> into the proper string version of it, given the current locale and currency.</p>
                                                <h2>Usage</h2>
                                                <p>The Money module is very straight forward and easy to use. The <var>MoneyFacade</var> exposes the following methods:</p>
                                                <ul>
                                                    <li class="bullet_list" value="1"><var>MoneyFacade::fromInteger()</var>
                                                    </li>
                                                    <li class="bullet_list" value="2"><var>MoneyFacade::fromFloat()</var>
                                                    </li>
                                                    <li class="bullet_list" value="3"><var>MoneyFacade::fromString()</var>
                                                    </li>
                                                    <li class="bullet_list" value="4"><var>MoneyFacade::formatWithCurrency()</var>
                                                    </li>
                                                    <li class="bullet_list" value="5"><var>MoneyFacade::formatWithoutCurrency()</var>
                                                    </li>
                                                    <li class="bullet_list" value="6"><var>MoneyFacade::convertIntegerToDecimal()</var>
                                                    </li>
                                                    <li class="bullet_list" value="7"><var>MoneyFacade::convertDecimalToInteger()</var>
                                                    </li>
                                                </ul>
                                                <h3><var>MoneyFacade::from*()</var> methods</h3>
                                                <p>Internally we use a powerful implementation of the Money Pattern. Outside the Money <span class="Generalbundle/module">(Undefined variable: General.bundle/module)</span> you will only see the <var>MoneyTransfer</var> which encapsulates our internals.</p>
                                                <p>To get a money object you can call the <var>MoneyFacade::from*()</var> methods:</p>
                                                <table class="TableStyle-PatternedRows" style="mc-table-style: url('../../resources/tablestyles/patternedrows.css');" cellspacing="0">
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <tbody>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><var>MoneyFacade::fromInteger(1000)</var>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">with integer</td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows"><var>MoneyFacade::fromInteger(1000, 'EUR')</var>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">with integer and currency</td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><var>MoneyFacade::fromFloat(10.00)</var>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">with float</td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows"><var>MoneyFacade::fromFloat(10.00, 'EUR')</var>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">with float and currency</td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><var>MoneyFacade::fromString('1000')</var>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">with string</td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><var>MoneyFacade::fromString('1000', 'EUR')</var>
                                                            </td>
                                                            <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">with string and currency</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>All of them will return a <var>MoneyTransfer </var>with a <var>MoneyTransfer::$amount</var> of ‘1000’. The only difference between them is the <var>MoneyTransfer::$currency</var>. This value differs if you pass a currency to the <var>MoneyFacade::from*()</var> methods or not.</p>
                                                <p>In case you don’t pass a currency, the currency configured as default one will be used. If you pass a specific currency, it will be used instead of the one that’s configured as default one.</p>
                                                <h4><var>MoneyFacade::formatWithSymbol()</var>
                                                </h4>
                                                <p>This method accepts only one argument, a <var>MoneyTransfer</var>. It will return a string representation of the given object, considering the current locale.</p>
                                                <p>Example:</p>
                                                <p><var>MoneyTransfer::$amount</var> = 1000</p>
                                                <p><var>MoneyTransfer::$currency</var> = ‘EUR’</p>
                                                <p>Current locale is <var>de_DE</var></p>
                                                <p>The output would be <var>10,00 €</var></p>
                                                <p>If the current locale would be <var>en_US</var>, the output would be: <var>€10.00</var> when passing the same object.</p>
                                                <h4><var>MoneyFacade::formatWithoutSymbol()</var>
                                                </h4>
                                                <p>The same behavior as in <var>MoneyFacade::formatWithSymbol()</var>, except of the fact that the currency symbol is not included.</p>
                                                <p>The output would then be <var>10,00</var> or <var>10.00</var> for the above example.</p>
                                                <h4><var>MoneyFacade::convertIntegerToDecimal()</var>
                                                </h4>
                                                <p>In some cases you will need a plain decimal representation of the value in integer (e.g. cents). This can be useful e.g. for API calls.</p>
                                                <h4><var>MoneyFacade::convertDecimalToInteger()</var>
                                                </h4>
                                                <p>In some cases you will need an integer (e.g. cents) representation for a decimal value. This can be useful when you want to store monetary values in the database.</p>
                                                <h3>Money Collection Form Type</h3>
                                                <p>From Money version  2.2.*, you can have money collection form type inside your forms which will allow to include complex form collection that will render table with currency per store and gross/net price.</p>

        For example, add FormBuilder
in your form Type:        <pre><code class="language-php line-numbers">
  /**
       * @param \Symfony\Component\Form\FormBuilderInterface $builder
       *
       * @return $this
       */
      protected function addMoneyValueCollectionType(FormBuilderInterface $builder)
      {
          $builder-&gt;add(
              DiscountCalculatorTransfer::MONEY_VALUE_COLLECTION, //is the property in the main form you want to map. It should be transferred as in example
              MoneyCollectionType::class,
              [
                  MoneyCollectionType::OPTION_AMOUNT_PER_STORE =&gt; false, //If you want to render per store, set it to true
              ]
          );

          return $this;
      }

        </code></pre>

        Also, you need to modify twig template to include form money value collection table.

        <pre><code class="language-php line-numbers">
 {{ form_money_collection(mainForm.moneyValueCollection) }}
        </code></pre><p>This will render table with all currencies enabled in store. You have to handle persistence yourself, which means that you have to save and read data to MoneyValueTransfer collection.
        Component provides only initial data.</p><p>&#160;</p><p><b>See also:</b></p><ul><li value="1"><a href="../internationalization/currency.htm" class="MCXref xref">Currency    </a></li></ul><p>&#160;</p><p><i>Last review date: Oct. 6th, 2017 </i></p></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>