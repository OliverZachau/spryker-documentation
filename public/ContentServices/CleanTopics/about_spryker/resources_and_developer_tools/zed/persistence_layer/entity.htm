<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>In Spryker an entity represents one entry from a table in the database. Entities are an implementation of the Active record design pattern , so their usage is very simple.
For a full documentation see Propel’s Active Record Reference . Spryker’s entities are called Active Record classes or just Models there. &lt;?php
$customer = new SpyCustomer();
$customer-&gt;setFirstName('John');
$customer-&gt;setLastName('Doe');
$customer-&gt;setEmail('john.doe@spryker.com');
$customer-&gt;save(); Saving Entities With Transactions In general, Propel performs every save operation in a transaction. Sometimes you want to save things together, e.g. when you save customers and order-items during the checkout. For this you can use Propel’s connection. &lt;?php $connection = Propel::getConnection(); $connection-&gt;beginTransaction(); $customerEntity-&gt;save(); $customerAddressEntity-&gt;save(); $salesOrderEntity-&gt;save(); $connection-&gt;commit(); Entity Usage Usually entities are used in the(Undefined variable: General.bundle/module)’s business layer to persist data. In contrast to most other classes in Spryker, entities are never injected, because they have state. Another way to retrieve entities is to use a query from the query container. See also: Database Overview Defining Database Schema Learn about Entity Manager and how to use it Learn about Repository class and how to use it Implementing and using a query container Creating query objects</body>
</html>