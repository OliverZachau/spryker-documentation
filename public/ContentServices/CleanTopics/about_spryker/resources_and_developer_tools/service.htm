<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Service is a Spryker application layer shared by the Client application layer and the Zed application layer. This service layer provides the ability to register a service once and have it applied to both layers. Usage is focused on level details (infrastructure layer). For example: encoding, text processing, sanitization. Currently there is already fewUtilbundles providing services (UtilText, UtilEncoding, etc.). How to use a Service To support best practices, any services shared between bundles and applications (Yves, Zed, Client) that do not resolve high-level business processes should be moved to services. Services can be accessed with the locator:$container-&gt;getLocator()-&gt;utilEncoding()-&gt;service(). Service structure When creating new service follow this file structure: Under a newly created(Undefined variable: General.bundle/module). src/Spryker/Service/ - root directory. src/Spryker/Service/DemoService.php - main locatable service class. Should extend Spryker\Service\Kernel\AbstractService. src/Spryker/Service/DemoServiceFactory.php - service factory class. Should extend Spryker\Service\Kernel\AbstractServiceFactory. src/Spryker/Service/DemoDependencyProvider - service dependency provider. Should extend Spryker\Service\Kernel\AbstractBundleDependencyProvider. Sample service class: &lt;?php
/** * @method \Spryker\Service\UtilEncoding\UtilEncodingServiceFactory getFactory() */
class UtilEncodingService extends AbstractService implements UtilEncodingServiceInterface
{ /** * {@inheritdoc} * * @api * * @param string $jsonValue * @param int|null $options * @param int|null $depth * * @return string */ public function encodeJson($jsonValue, $options = null, $depth = null) { return $this-&gt;getFactory() -&gt;createJsonEncoder() -&gt;encode($jsonValue, $options, $depth); }
}
?&gt; After creating all mentioned files runvendor/bin/console dev:ide:generate-service-auto-completionto have service visible by our locator autocomplete.</body>
</html>