<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Features Product Relations With this release we introduce product relations feature. This feature can be used in many different ways. Some of the anticipated (and most common for e-commerce shops) use cases are displaying similar products, up-selling of products, etc. The solution comes with a Zed UI where product relations can be defined manually using condition rules. Out of the box solution showcases this feature in the demoshop in two different ways. On product detail page we have related products for the given product. In cart we demonstrate up-selling. If for any item in the cart there are applicable products for up-sell, those will be displayed. Affected(Undefined variable: General.bundle/module)s Major Minor Patch - ProductRelation 1.0.0 n/a - ProductRelation 1.0.1 - ProductRelationCollector 1.0.0 n/a - ProductRelation 1.0.2 Documentation For(Undefined variable: General.bundle/module)documentation see: Product Relation. For integration guides see: Product Relations Feature Integration. Event(Undefined variable: General.bundle/module) This release introduces the Event(Undefined variable: General.bundle/module). It implementsObserverpattern where you can add extension points(events) in your code and allow other(Undefined variable: General.bundle/module)s to listen and react to those events. Asynchronous event handling is supported. Affected(Undefined variable: General.bundle/module)s Major Minor Patch - Event 1.0.0 - Category 3.1.0 - Product 5.1.0 - ProductCategory 4.1.0 - Event 1.0.1 Documentation For(Undefined variable: General.bundle/module)documentation see: Event. Migration Guides To upgrade, follow the steps described below: Apply every minor and patch: composer update "spryker/*" Once that is done, upgrade to the new CMS major and its dependencies: composer require spryker/event:"^1.0.0" spryker/product-relation:"^1.0.0" spryker/product-relation-collector:"^1.0.0" Beta: Propel Query Builder This(Undefined variable: General.bundle/module)can be used to generate advanced conditional queries based on user input. Samples for usage can be found in feature product relations. We use it in our administrative backend for defining rule application and scope/conditions. The Propel query criteria it generates is based on jQuery QueryBuilder . Affected(Undefined variable: General.bundle/module)s Major Minor Patch n/a - PropelQueryBuilder 0.1.1 n/a Improvements Enable 3rd Party Integrations With this release, we enabled 3rd party integrations for the core. It’s now possible to create packages which can be installed along withspryker/* (Undefined variable: General.bundle/module)s into the vendor directory. Affected(Undefined variable: General.bundle/module)s Major Minor Patch n/a - Twig 3.1.0 - Application 3.1.1 - Development 3.1.1 - Glossary 3.0.1 - Propel 3.0.1 - Testify 3.0.2 - Transfer 3.1.1 - ZedNavigation 1.0.1 Bugfixes Customer Salutation in Order Previously on checkout the salutation column was not populated in thespy_sales_order. This issue is fixed now. We have modified thehydrateSalesOrderCustomer()so that it stores all applicable customer data to the order. Affected(Undefined variable: General.bundle/module)s Major Minor Patch n/a - Sales 5.1.0 - Sales 5.1.1 Kernel Resolver Fix Resolving classes for store specific(Undefined variable: General.bundle/module)s didn’t work as expected. Classes that did not get overridden in the store specific(Undefined variable: General.bundle/module)would not get resolved to the non-store specific(Undefined variable: General.bundle/module)classes. The class resolvers have been changed to fix this issue to properly resolve classes. Affected(Undefined variable: General.bundle/module)s Major Minor Patch n/a n/a - Kernel 3.1.1 Processing Multiple Items in StateMachine Previously we had an issue in state machine transaction handling. If any item in collection was failing to process, an exception was thrown. That was a problem because when state machine executes commands where external calls are made, it was not possible to guarantee atomic operation. This issue is solved now. If single sales item fail then the item process will be rolled back for that single item, not the entire collection. Affected(Undefined variable: General.bundle/module)s Major Minor Patch n/a n/a - Oms 6.0.1 - StateMachine 2.0.1 Inconsistent Log Files Path Previously we had an inconsistency problem among different logger path builder implementations. Most(Undefined variable: General.bundle/module)s hadStore::getInstance()-&gt;getStoreName()for store specific logs path key, but some(Undefined variable: General.bundle/module)s hadStore::getInstance()-&gt;getCurrentLocale(). With the default demoshop setup this was not an issue because we have store names same like locale codes (DE, AT, etc.). However as soon as the store name varies from the locale code, this logic was not working anymore. We have fixed this inconsistency in log files path by replacinggetCurrentLocale()withgetStoreName(). Affected(Undefined variable: General.bundle/module)s Major Minor Patch n/a n/a - Application 3.1.2 - ZedRequest 3.0.2 UtilEncoding Fix for Custom Options The JSON encoding did not properly consider custom options. If you supplied your own encoding options, those were ignored. They now get passed through as expected, and you can for example, set up: &lt;?php
$options = Json::DEFAULT_OPTIONS | JSON_PRETTY_PRINT; return $this-&gt;service-&gt;encodeJson($value, $options); to allow more human readable output for development mode. Affected(Undefined variable: General.bundle/module)s Major Minor Patch n/a n/a - UtilEncoding 2.0.1</body>
</html>