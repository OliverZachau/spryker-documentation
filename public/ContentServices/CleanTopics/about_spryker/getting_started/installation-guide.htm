<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Spryker Commerce OS is delivered as a virtual machine. All service installations, such as database, Redis, Elastic Search, and PHP modules are already included in the VM. To install the Spryker Commerce OS for development: 1.Install Prerequisites To set up your environment, install the following prerequisites: Git VirtualBox 5.2.2+ Vagrant 2.0.0+ vagrant-vbguestandvagrant-hostmanagerplugins: vagrant plugin install vagrant-vbguest
vagrant plugin install vagrant-hostmanager 2.Install Spryker Virtual Machine To install the VM on Mac OS, Unix or Linux, run the following commands in your favorite shell (e.g.Bash). On Windows, useGit Bashcommand prompt with administrative privileges. How to Launch Git Bash ClickStart. Start typingGit Bash. In the search results, right-clickGit Bashand selectRun as administrator. 1.Create the folder in which you want the source code to be placed: mkdir devvm
cd devvm 2.Initialize the Vagrant environment: vagrant init devvm2.0.0 https://github.com/spryker/devvm/releases/download/v2.0.0/spryker-devvm.box 3.Update the Vagrantfile: Add hostmanager plugin configuration: mv Vagrantfile Vagrantfile.bak
awk '/^end/{print " config.hostmanager.enabled = true\n config.hostmanager.manage_host = true"}1' Vagrantfile.bak &gt; Vagrantfile Enable creation of symlimnks(Windows only): mv Vagrantfile Vagrantfile2.bak
awk '/^ # Enable provisioning with a shell script./{print "\n config.vm.provider \"virtualbox\" do |v|\n v.customize [\"setextradata\", :id, \"VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root\", \"1\"]\nend"}1' Vagrantfile2.bak &gt; Vagrantfile 4.Build and start the virtual machine: VM_PROJECT=suite SPRYKER_REPOSITORY="git@github.com:spryker-shop/suite.git" vagrant up When the VM is built and running, your local copy of the repository will be placed in theprojectsubfolder of the folder where the VM is located (e.g.~/devvm/project). The subfolder will be mounted as a network share inside the VM to/data/shop/development/current. 3.Install the Application 1.Log into the VM: vagrant ssh 2.Install the Prestissimo Composer Tool: To speed up the installation and update processes, it is recommended to install the Prestissimo Composer Tool . It will speed up the execution of thecomposer installandcomposer updatecommands both for local development and in server deployments. To install the tool, run composer global require hirak/prestissimo 3.Run the installation commands: ulimit -n 65535
composer install
vendor/bin/install Executing these steps will install all required dependencies, and run the installation process. Also, this will install the demo data and export it toRedisandElasticsearch. When the installation process is complete, Spryker Commerce OS is ready to use. It can be accessed via the following links: http://www.de.suite.local - front-end; http://zed.de.suite.local - backend (administrator interface). Credentials to access the administrator interface: useradmin@spryker.comand passwordchange123. Next Steps and Additional Info: Git Configuration If you want to commit from within the VM, it is recommended to set the right Git preferences: git config --global user.email "your.email@domain.tld"
git config --global user.name "Your Name"
git config --global push.default simple
git config --global pull.rebase true VM Configuration If you like to change the default configuration of the virtual machine, you can do this by following the example below. export VM_CPUS=2
export VM_MEMORY=4192
export VM_NAME="My custom name"
export VM_IP_PREFIX="10.10.0." Disable Shared Folder For non-standard setups you have the option to disable shared folder with Spryker code. If you decide not to use shared folders feature, it’s your responsibility to get Spryker code into/data/shop/development/currentdirectory inside your VM. export VM_SKIP_SF=1 Using SSH Instead of HTTPS In case you already have your SSH keys set up on your host system, it can be more convenient to directly use them for downloading the repository: export SPRYKER_REPOSITORY="git@github.com:spryker-shop/suite.git" Before proceeding with the installation, please make sure you have your SSH public key in github. In order to generate your SSH key, follow the steps presented in the following article: Generating SSH keys . Filesystem Layout A common Spryker Project is like a typical web project. There is the project level code and theSpryker Commerce OScode.Spryker Commerce OScode is installed into the vendor folder. As you are running both Yves and Zed inside the VM, you will actually see the source code for both. They share a similar directory layout, but specific folders are indicated by the name of the application. So, a folder named Zed naturally belongs to Zed. A Shared folder belongs to Yves and Zed. Path Usage config config	various configuration files data logfiles and caches src your project code static static	assets and the public document roots for Yves and Zed vendor packages installed via composer. In particularvendor/sprykercontains Yves and Zed bundles. Services and Ports Service Port Comments MySQL Server 3306 Username is development, password is mate20mg PostgreSQL Server 5432 Username is development, password is mate20mg Redis 10009 You can explore Redis with e.g. Redis Desktop Manager Mailcatcher 1080 Catches all the mails that are sent during development in the Dev VM Management UI 15672 See for more information Activating the Opcache Module To optimize the performance of the system, you can enable the Opcache. This is not recommend for development, because you may get strange results. To activate the Opcache, just put the following lines at the end of thephp.iniand restart php. This configuration is not optimized for production environments! sudo nano /etc/php7.1/fpm/php.ini [Cache]
; configuration for php ZendOpcache module
; priority=05
zend_extension=opcache.so
; Determines if Zend OPCache is enabled
opcache.enable=1
; Determines if Zend OPCache is enabled for the CLI version of PHP
&gt;opcache.enable_cli=1
; The OPcache shared memory storage size.
opcache.memory_consumption=64
; The amount of memory for interned strings in Mbytes.
opcache.interned_strings_buffer=8
; The maximum number of keys (scripts) in the OPcache hash table.
; Only numbers between 200 and 100000 are allowed.
opcache.max_accelerated_files=8000
; The maximum percentage of "wasted" memory until a restart is scheduled.
opcache.max_wasted_percentage=5
; When disabled, you must reset the OPcache manually or restart the
; webserver for changes to the filesystem to take effect.
opcache.validate_timestamps=1
; How often (in seconds) to check file timestamps for changes to the shared
; memory storage allocation. ("1" means validate once per second, but only
; once per request. "0" means always validate)
opcache.revalidate_freq=1
; If enabled, a fast shutdown sequence is used for the accelerated code
opcache.fast_shutdown=1 sudo -i
service php7.1-fpm restart
exit Setting a VM Name It is advised to label your VM (especially when you have more than a single one): set-vm-name my-project This will displayvagrant@my-projectin your console starting with the next login. Upgrading to a Newer Version To check for newer released versions, we recommend that you follow the steps described here Checking for newer versions . See also: Troubleshooting Installation Guide - No VM Last review date: June. 13th, 2018</body>
</html>