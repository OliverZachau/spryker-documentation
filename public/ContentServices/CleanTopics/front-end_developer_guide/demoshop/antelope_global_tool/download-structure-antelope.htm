<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Download and Structure (Antelope) Antelope Deprecation Notice: As of 04/2017 Antelope will be replaced by Oryx . You can still use Antelope however, no new development is planned for this component. Here you will find out how to download external dependencies and where to place them, together with your own asset files. You will often find references toAntelopeas a recommended tool for assets download, read more about it here . Yves Yves UI must be implemented on project level. External Dependencies You can use the package manager that you prefer, but we strongly recommend to usenpm: it works with Antelope (Spryker recommended tool for front-end assets management). Assets and Themes Yves come with themes: they are dresses for Yves. You can create a new theme by creating a folder under@project/assets/Yvesand placing your assets there. Zed Zed UI can be extended on project level. External Dependencies Each(Undefined variable: General.bundle/module)that implements a UI may have external dependencies. You can use the package manager that you prefer, but we strongly recommend to usenpm: it works with Antelope (our dedicated tool for back-end assets management). They will be eventually stored under the@core/&lt;(Undefined variable: General.bundle/module)-name&gt;/assets/Zed/node_modulesfolder. Assets Zed has one theme only. Each(Undefined variable: General.bundle/module)that implements a UI has its own assets. They are placed under the@core/&lt;(Undefined variable: General.bundle/module)-name&gt;/assets/Zedfolder. However, you can extend Zed UI by creating@project/assets/Zedand place your assets there. Gui(Undefined variable: General.bundle/module)as default UI provider: Gui(Undefined variable: General.bundle/module)manages all the dependencies needed in Zed. It provides the base structure for every(Undefined variable: General.bundle/module)that implements a UI, and Zed Antelope configuration.Be sure you have it in your project, otherwise Zed UI will not be available. One Projectpackage.jsonfor Everything Create a@project/package.jsonto manage all external dependencies. Add modules using--saveor--save-devto divide them between direct and development ones. They will be available for Yves and Zed. cd /path/to/your/project-root
npm init # this will create a package.json
...
npm install --save jquery bootstrap font-awesome # yves/zed dependencies
npm install --save-dev less less-loader # dev dependencies Download External Dependencies The easier way to download all the external dependencies is by using Antelope: cd /path/to/your/project-root
antelope install Otherwise, you can usenpm: cd /path/to/your/project-root
npm install cd /path/to/gui/(Undefined variable: General.bundle/module)npm install cd /path/to/another/(Undefined variable: General.bundle/module)npm install</body>
</html>