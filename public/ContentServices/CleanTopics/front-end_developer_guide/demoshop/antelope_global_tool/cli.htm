<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Antelope Deprecation Notice: As of 04/2017 Antelope will be replaced by Oryx. You can still use Antelope however, no new development is planned for this component. Antelope is a command line interface tool available and ready for use from your terminal/console . Before you proceed with setup, read the requirements . Setup Oncenode.jsandnpmare installed, run: npm install -g antelope You can choose to install a specific version of Antelope, as in the example below: npm install -g antelope#2.0.0 # specific version
npm install -g antelope#"&gt;=0.2.0 &lt;1.0.0" # version range (npm semver) How it Works Antelope is a tool dedicated for Spryker projects, so itmust be executed from the project root folder. Once there, at least for the first time, you should run a test to check that everything is fine. cd /path/to/your/project-root
antelope test Install thenpmDependencies Instead of manually downloading and configuring each dependency in your project, use this command to search and executenpminstall for eachpackage.jsonin your project. The modules will be installed: on project level (Yves themes dependencies); on Spryker core level (Zed UI specific dependecies). antelope install One manifest only Create just onepackage.jsonfile for your project to manage all the external dependencies. Read Download External Dependencies for further information. Re-run installation after each update Remember to run this command every time you add a new Yves dependency, start with a brand new project or after a Spryker Core update. It will guarantee an updated and reliable front-end dependency tree, avoidingAntelopebuild errors. Build Assets This command loads the webpack configuration associated with each application (YvesandZed) and/or theme, and runs it. Every asset is processed and copied in the proper public folder. If you need to build the assets for the entire project, run the build command as in the example below: antelope build If you need to build the assets only forZedor only forYves, you can run the build command with one of the following arguments: antelope build zed # builds Zed assets only
antelope build yves # builds Yves assets only, all available themes There are several options you can run this command with: Flag Application Mode Description -t, --theme Yves All Define the Yves theme to exclusively target in build process. -w, --watch Yves, Zed Development Add watchers over the assets. When you change a file, Antelope rebuilds the target. To build Yves with watchers, you need to specify a theme. -d, --debug Yves, Zed Debug Print a more verbose cli output. -l, --legacy Yves, Zed Legacy For projects that use Spryker version 1.x or below. --production Yves, Zed Production Optimize the output. antelope build ... --watch
antelope build yves --theme demoshop
antelope build ... --debug
antelope build ... --legacy
antelope build ... --production
antelope build ... -dwl Help To see the output of theclihelp: antelope --help # commands list
antelope build --help # available flags list for command</body>
</html>