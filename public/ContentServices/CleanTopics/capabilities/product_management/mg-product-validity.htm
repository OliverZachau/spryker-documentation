<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Installing Version 1.* The Product Validity module is responsible for (de)activation of products for (or starting from) a certain period of time. Follow the instructions below to have the module up and running in your shop. Database Changes We have added a new spy_product_validitydatabase table (the query can be checked here ). To start the database migration, run the following commands: vendor/bin/console propel:diff- manual review is necessary for the generated migration file. vendor/bin/console propel:migrate vendor/bin/console propel:model:build After that, add table files tosrc/Orm/Zed/ProductValidity/Persistencefolder. Auto-check Enabling To have the scheduler running to auto update products in accordance with the time settings for the product validity, you need to add cronjob and console command.
The instructions below demonstrate how to do that. Enable the console command We have added a new console commandproduct:check-validity.
The command checks validity by date ranges and active status for products. Then it updates (for demoshop it will betouch) the ones for which the activity state changes.. To enable it, addProductValidityConsoletoConsoleDependencyProvider. Check out our Demoshop implementation for implementation example and idea. Enable the cronjob Add the following job toconfig/Zed/cronjobs/jobs.phpfile: $jobs[] = [ 'name' =&gt; 'check-product-validity', 'command' =&gt; '$PHP_BIN vendor/bin/console product:check-validity', 'schedule' =&gt; '* * * * *', 'enable' =&gt; true, 'run_on_non_production' =&gt; true, 'stores' =&gt; $allStores, ]; Check out our Demoshop implementation for implementation example. Product Plugins For correct work of the Time to Live feature, you need to sync validity data with products concrete. Add the following plugins for that: ProductValidityReadPlugintoProductDependencyProvider::getProductConcreteReadPlugins() ProductValidityUpdatePlugintoProductDependencyProvider::getProductConcreteAfterUpdatePlugins() Check out our Demoshop implementation for implementation example and idea. See also: Get a general idea of the TTL feature Familiarize yourself with the feature details and its usage scenarios Last review date: Feb. 23rd, 2018</body>
</html>