<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Upgrading from Version 7.* to Version 8.* With the new OMS version, detail lock logging has been introduced and execution bucket size decreased. In order to successfully migrate to the new OMS version, perform the following steps: Migrate the DB: vendor/bin/console propel:diff, also manual review is necessary for the generated migration file; vendor/bin/console propel:migrate; vendor/bin/console propel:model:build; Migrate the configuration file and the constants: Spryker\Shared\Oms\OmsConstants::INITIAL_STATUSshould be replaced bySpryker\Zed\Oms\OmsConfig::getInitialStatus(). Spryker\Shared\Oms\OmsConstants::NAME_CREDIT_MEMO_REFERENCEwas deprecated and removed. Migrate the deprecated classes / interfaces: Find the usage ofSpryker\Zed\Oms\Communication\Plugin\Oms\Condition\ConditionCollectionInterfaceand change the interface toSpryker\Zed\Oms\Dependency\Plugin\Condition\ConditionCollectionInterface. Find the usage ofSpryker\Zed\Oms\Communication\Console\ClearLocksand change the interface toSpryker\Zed\Oms\Communication\ClearLocksConsole. Find the usage ofSpryker\Zed\Oms\Communication\Plugin\Oms\Command\CommandByItemInterfaceand change the interface toSpryker\Zed\Oms\Dependency\Plugin\Command\CommandByItemInterface. Find the usage ofSpryker\Zed\Oms\Communication\Plugin\Oms\Command\CommandByOrderInterfaceand change the interface toSpryker\Zed\Oms\Dependency\Plugin\Command\CommandByOrderInterface. Find the usage ofSpryker\Zed\Oms\Communication\Plugin\Oms\Command\CommandInterfaceand change the interface toSpryker\Zed\Oms\Dependency\Plugin\Command\CommandInterface. Find the usage ofSpryker\Zed\Oms\Communication\Plugin\Oms\Condition\ConditionInterfaceand change the interface toSpryker\Zed\Oms\Dependency\Plugin\Condition\ConditionInterface. Migrate the methods: The methods did not change the interface but the naming changed. You need to migrate only in case you extendedSpryker\Zed\Oms\Persistence\OmsQueryContainerInterfaceorSpryker\Zed\Oms\Business\Process\ProcessInterface. The classes that implementSpryker\Zed\Oms\Business\Process\ProcessInterfaceshould be named assetIsMaininstead ofsetMainandgetIsMaininstead ofgetMain. The classes that implementSpryker\Zed\Oms\Persistence\OmsQueryContainerInterfaceshould be named asqueryActiveProcessesinstead ofgetActiveProcessesandqueryOrderItemStatesinstead ofgetOrderItemStates. Find the usage of\Spryker\Zed\Oms\Business\OmsBusinessFactory::createOrderStateMachineOrderStateMachineand replace it with\Spryker\Zed\Oms\Business\OmsBusinessFactory::createLockedOrderStateMachine. Find the usage of\Spryker\Zed\Oms\Business\OmsBusinessFactory::createOrderStateMachineBuilder($xmlFolder = null)and move the value of$xmlFolderto\Spryker\Zed\Oms\OmsConfig::getProcessDefinitionLocation(). From now on this function doesn't have$xmlFolderas a parameter. Find the usage of\Spryker\Zed\Oms\Business\OrderStateMachine\LockedOrderStateMachine::buildIdentifierForOrderItemsLockand replace it with the two calls:::collectIdentifiersForOrderItemsLock(array $orderItems)and::buildIdentifierForOrderItemIdsLock($orderItemIds). Find the usage ofSpryker\Zed\Oms\Persistence\OmsQueryContainerInterface::countSalesOrderItemsForSkuand replace it with::collectIdentifiersForOrderItemsLock(array $orderItems). Find the usage ofSpryker\Zed\Oms\Persistence\OmsQueryContainerInterface::queryLockedItemsByIdentifierAndExpirationDateand use your own implementation (based onOmsQueryContainer). Find the usage ofSpryker\Zed\Oms\Persistence\OmsQueryContainerInterface::queryLockedItemsByIdentifierAndExpirationDateand use your own implementation (based onOmsQueryContainer). In OMS module version 8 we have also added support for stock reservations per store. We have added a few more database tables as well as a new column tospy_oms_reservationtable. Run the database migrations: ALTER TABLE "spy_oms_product_reservation" ADD "fk_store" INTEGER; ALTER TABLE "spy_oms_product_reservation" ADD CONSTRAINT "spy_oms_product_reservation-fk_store" FOREIGN KEY ("fk_store") REFERENCES "spy_store" ("id_store"); CREATE SEQUENCE "spy_oms_product_reservation_store_pk_seq"; CREATE TABLE "spy_oms_product_reservation_store" ( "id_oms_product_reservation_store" INTEGER NOT NULL, "store" VARCHAR(255) NOT NULL, "sku" VARCHAR(255) NOT NULL, "reservation_quantity" INTEGER NOT NULL, "version" INT8 NOT NULL, "created_at" TIMESTAMP, "updated_at" TIMESTAMP, PRIMARY KEY ("id_oms_product_reservation_store"), CONSTRAINT "spy_oms_product_reservation_store-unique-store-sku" UNIQUE ("store","sku") ); CREATE INDEX "spy_oms_product_reservation_store-version" ON "spy_oms_product_reservation_store" ("version"); CREATE INDEX "spy_oms_product_reservation_store-sku" ON "spy_oms_product_reservation_store" ("sku"); CREATE INDEX "spy_oms_product_reservation_store-store" ON "spy_oms_product_reservation_store" ("store"); CREATE SEQUENCE "spy_oms_product_reservation_change_version_pk_seq"; CREATE TABLE "spy_oms_product_reservation_change_version" ( "version" INT8 NOT NULL, "id_oms_product_reservation_id" INTEGER NOT NULL, "created_at" TIMESTAMP, "updated_at" TIMESTAMP, PRIMARY KEY ("version") ); CREATE TABLE "spy_oms_product_reservation_last_exported_version" ( "version" INT8 NOT NULL, "created_at" TIMESTAMP, "updated_at" TIMESTAMP ); Upgrading from Version 6.* to Version 7.* In version 7, OMS no longer usesSalesAggregatorto calculate totals, it is now done via the Calculator module. Therefore, there is no more dependency withSalesAggregator. TheSpryker\Zed\Oms\Business\Mail\MailHandlerdependency toSalesAggregatorFacadewas replaced withSalesFacade. To learn how to migrate to the new structure see, Upgrading from Version 3.* to Version 4.* Upgrading from Version 3.* to Version 4.* With OMS version 4 we added availability integration therefore, a nw database table was created. CREATE SEQUENCE "spy_oms_product_reservation_pk_seq"; CREATE TABLE "spy_oms_product_reservation"
( "id_oms_product_reservation" INTEGER NOT NULL, "sku" VARCHAR(255) NOT NULL, "reservation_quantity" INTEGER DEFAULT 0 NOT NULL, PRIMARY KEY ("id_oms_product_reservation"), CONSTRAINT "spy_oms_product_reservation-sku" UNIQUE ("sku")
); New Oms plugin addedReservationHandlerPluginInterfacewhich is executed when item is transferred to state with "reserved" flag. To start using it with core implementation, addSpryker\Zed\Availability\Communication\Plugin\AvailabilityHandlerPluginto your projectOmsDependencyProvider::getReservationHandlerPlugins(). See also: Get a general idea about stock and availability Learn what Availability module does and how it works Last review date: Feb. 26th, 2018</body>
</html>