<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Create a form In Yves, we start by building the form. Add the new(Undefined variable: General.bundle/module)also in Yves and add a Form/ folder where we’ll place the implementation for building the form. First add the data provider, inside the Form/DataProvider/ folder: Click to expand the code sample &lt;?php
namespace Pyz\Yves\PaymentMethods\Form\DataProvider; use Generated\Shared\Transfer\QuoteTransfer;
use Pyz\Yves\Checkout\Dependency\DataProvider\DataProviderInterface; class DirectDebitDataProvider implements DataProviderInterface
{ /** * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer * * @return \Generated\Shared\Transfer\QuoteTransfer */ public function getData(QuoteTransfer $quoteTransfer) { return $quoteTransfer; } /** * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer * * @return array */ public function getOptions(QuoteTransfer $quoteTransfer) { return []; } } Then implement the form: Click to expand the code sample &lt;?php namespace Pyz\Yves\PaymentMethods\Form; use Generated\Shared\Transfer\DirectDebitPaymentTransfer;
use Pyz\Shared\PaymentMethods\PaymentMethodsConstants;
use Pyz\Yves\Checkout\Dependency\CheckoutAbstractSubFormType;
use Pyz\Yves\Checkout\Dependency\SubFormInterface;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface; class DirectDebitSubForm extends CheckoutAbstractSubFormType implements SubFormInterface
{ /** * @const string */ const PAYMENT_PROVIDER = PaymentMethodsConstants::PROVIDER; /** * @const string */ const PAYMENT_METHOD = PaymentMethodsConstants::PAYMENT_METHOD_DIRECTDEBIT; /** * @const string */ const FIELD_BANK_ACCOUNT_HOLDER = 'bank_account_holder'; /** * @const string */ const FIELD_BANK_ACCOUNT_BIC = 'bank_account_bic'; /** * @const string */ const FIELD_BANK_ACCOUNT_IBAN = 'bank_account_iban'; /** * @return string */ public function getPropertyPath() { return PaymentMethodsConstants::PAYMENT_DIRECTDEBIT_FORM_PROPERTY_PATH; } /** * @return string */ public function getName() { return static::PAYMENT_PROVIDER . '_' . static::PAYMENT_METHOD; } /** * @return string */ public function getTemplatePath() { return static::PAYMENT_PROVIDER . '/' . static::PAYMENT_METHOD; } /** * @param \Symfony\Component\OptionsResolver\OptionsResolverInterface $resolver * * @return void */ public function setDefaultOptions(OptionsResolverInterface $resolver) { parent::setDefaultOptions($resolver); $resolver-&gt;setDefaults([ 'data_class' =&gt; DirectDebitPaymentTransfer::class, SubFormInterface::OPTIONS_FIELD_NAME =&gt; [], ]); } /** * @param \Symfony\Component\Form\FormBuilderInterface $builder * @param array $options * * @return void */ public function buildForm(FormBuilderInterface $builder, array $options) { parent::buildForm($builder, $options); $this-&gt;addBankAccountHolder($builder); $this-&gt;addBankAccountIban($builder); $this-&gt;addBankAccountBic($builder); } /** * @param \Symfony\Component\Form\FormBuilderInterface $builder * * @return $this */ public function addBankAccountHolder($builder) { $builder-&gt;add( static::FIELD_BANK_ACCOUNT_HOLDER, 'text', [ 'label' =&gt; false, 'required' =&gt; true, ] ); return $this; } /** * @param \Symfony\Component\Form\FormBuilderInterface $builder * * @return $this */ public function addBankAccountBic($builder) { $builder-&gt;add( static::FIELD_BANK_ACCOUNT_BIC, 'text', [ 'label' =&gt; false, ] ); return $this; } /** * @param \Symfony\Component\Form\FormBuilderInterface $builder * * @return $this */ public function addBankAccountIban($builder) { $builder-&gt;add( static::FIELD_BANK_ACCOUNT_IBAN, 'text', [ 'label' =&gt; false, 'required' =&gt; true, ] ); return $this; } } To plug this form into checkout, add a plugin for it inside thePlugin/folder: Click to expand the code sample &lt;?php namespace Pyz\Yves\PaymentMethods\Plugin; use Spryker\Yves\Kernel\AbstractPlugin;
use Spryker\Yves\StepEngine\Dependency\Plugin\Form\SubFormPluginInterface; /** * @method \Pyz\Yves\PaymentMethods\PaymentMethodsFactory getFactory() */
class DirectDebitSubFormPlugin extends AbstractPlugin implements SubFormPluginInterface
{ /** * @return \Pyz\Yves\PaymentMethods\Form\DirectDebitSubForm */ public function createSubForm() { return $this-&gt;getFactory()-&gt;createDirectDebitForm(); } /** * @return \Pyz\Yves\Checkout\Dependency\DataProvider\DataProviderInterface */ public function createSubFormDataProvider() { return $this-&gt;getFactory()-&gt;createDirectDebitFormDataProvider(); } } Payment Handler To be able to handle this new payment type, add aDirectDebitHandlerclass: &lt;?php namespace Pyz\Yves\PaymentMethods\Handler; use Generated\Shared\Transfer\QuoteTransfer;
use Pyz\Shared\PaymentMethods\PaymentMethodsConstants;
use Symfony\Component\HttpFoundation\Request; class DirectDebitHandler
{ /** * @const string */ const PAYMENT_PROVIDER = PaymentMethodsConstants::PROVIDER; /** * @const string */ const PAYMENT_METHOD = PaymentMethodsConstants::PAYMENT_METHOD_DIRECTDEBIT; /** * @param \Symfony\Component\HttpFoundation\Request $request * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer * * @return \Generated\Shared\Transfer\QuoteTransfer */ public function addPaymentToQuote(Request $request, QuoteTransfer $quoteTransfer) { $quoteTransfer-&gt;getPayment() -&gt;setPaymentProvider(static::PAYMENT_PROVIDER) -&gt;setPaymentMethod(static::PAYMENT_METHOD); return $quoteTransfer; }
} To plug this payment handler into checkout, add a plugin for it inside thePlugin/folder: &lt;?php namespace Pyz\Yves\PaymentMethods\Plugin; use Spryker\Shared\Kernel\AbstractTransfer;
use Spryker\Yves\Kernel\AbstractPlugin;
use Spryker\Yves\StepEngine\Dependency\Plugin\Handler\StepHandlerPluginInterface;
use Symfony\Component\HttpFoundation\Request; /** * @method \Pyz\Yves\PaymentMethods\PaymentMethodsFactory getFactory() */
class DirectDebitHandlerPlugin extends AbstractPlugin implements StepHandlerPluginInterface
{ /** * @param \Symfony\Component\HttpFoundation\Request $request * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer * * @return \Generated\Shared\Transfer\QuoteTransfer */ public function addToDataClass(Request $request, QuoteTransfer $quoteTransfer) { $this-&gt;getFactory()-&gt;createDirectDebitHandler()-&gt;addPaymentToQuote($request, $quoteTransfer); } } Direct debit Twig template
Add the Twig template that will be rendered when direct debit payment method is selected under the configured path: in Yves, createdirectdebit.twigtemplate file inPaymentMethods/Theme/thenApplicationConstants::YVES_THEMEconfig value directory. Adjust the path according to the theme you are currently using. Adjust the path according to the theme you are currently using. &lt;div class="payment-subform directdebit-form"&gt; &lt;h4&gt;{{ 'payment.paymentmethods.directdebit.bankaccount' | trans }}&lt;/h4&gt; &lt;label&gt;{{ 'payment.paymentmethods.directdebit.holder' | trans }}&lt;/label&gt; &lt;div class="field"&gt; {{ form_widget(form.paymentmethods_directdebit.bank_account_holder, { 'attr': {'placeholder': 'payment.paymentmethods.directdebit.holder' | trans } }) }} {{ form_errors(form.paymentmethods_directdebit.bank_account_holder) }} &lt;/div&gt; &lt;label&gt;{{ 'payment.paymentmethods.directdebit.iban' | trans }}&lt;/label&gt; &lt;div class="field"&gt; {{ form_widget(form.paymentmethods_directdebit.bank_account_iban, { 'attr': {'placeholder': 'payment.paymentmethods.directdebit.iban' | trans } }) }} {{ form_errors(form.paymentmethods_directdebit.bank_account_iban) }} &lt;/div&gt; &lt;label&gt;{{ 'payment.paymentmethods.directdebit.bic' | trans }}&lt;/label&gt; &lt;div class="field"&gt; {{ form_widget(form.paymentmethods_directdebit.bank_account_bic, { 'attr': {'placeholder': 'payment.paymentmethods.directdebit.bic' | trans } }) }} {{ form_errors(form.paymentmethods_directdebit.bank_account_bic) }} &lt;/div&gt; {{ form_widget(form.paymentmethods_directdebit) }} {{ form_errors(form.paymentmethods_directdebit) }}
&lt;/div&gt; Don’t forget to add the factory and the dependency provider for this new added(Undefined variable: General.bundle/module)in Yves.</body>
</html>