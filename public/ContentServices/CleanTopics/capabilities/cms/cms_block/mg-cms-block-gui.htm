<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Upgrading from Version 1.* to Version 2.* This version adds support to manage CMS Block-store relation through the dedicated CMS Block Administration Intrerface. Installl/updatespryker/cms-blockto at least Version 2.0.0. You can find additional guide to migration here . Upgradespryker/cms-block-guito at least Version 2.0.0. The CMS Block Administration Interface expects the CMS Block-store relation handling partial form to be defined in the dependency provider using theSpryker\Zed\Kernel\Communication\Form\FormTypeInterface. You can use the single store and multi-store compatible default implementationSpryker\Zed\Store\Communication\Form\Type\StoreRelationToggleTypewrapped inSpryker\Zed\Store\Communication\Plugin\Form\StoreRelationToggleFormTypePlugin. Note:Spryker\Zed\Store\Communication\Plugin\Form\StoreRelationToggleFormTypePluginis introduced inspryker/storeversion1.2.0. Example injection &lt;?php
namespace Pyz\Zed\CmsBlockGui; use Spryker\Zed\CmsBlockGui\CmsBlockGuiDependencyProvider as CmsBlockGuiCmsBlockGuiDependencyProvider;
use Spryker\Zed\Store\Communication\Plugin\Form\StoreRelationToggleFormTypePlugin; class CmsBlockGuiDependencyProvider extends CmsBlockGuiCmsBlockGuiDependencyProvider
{ /** * @return \Spryker\Zed\Kernel\Communication\Form\FormTypeInterface */ protected function createStoreRelationFormTypePlugin() { return new StoreRelationToggleFormTypePlugin(); }
} The following deprecated methods have been removed: CmsBlockGuiCommunicationFactory::createCmsBlockForm() CmsBlockGuiCommunicationFactory::createCmsBlockGlossaryForm() CmsBlockGuiCommunicationFactory::createCmsBlockGlossaryPlaceholderTranslationFormType() CmsBlockGuiCommunicationFactory::createCmsBlockGlossaryPlaceholderFormType() CmsBlockForm::getName() CmsBlockGlossaryForm::getName() CmsBlockGlossaryPlaceholderForm::getName() Additionally these internal classes have changed. Take a look if you have customized any of them: CmsBlockForm CmsBlockTable ViewBlockController ViewBlock/index.twig You can find more details for these changes on CMS Block GUI module release page . Go to aCMS Blockedit page through the CMS Block Administration Interface to verify that the migration was successful. At this point the CMS Block-store relation configuration will be shown but being disabled if multi-store feature is not enabled yet. You can find additional information about multi-store CMS Block feature and the process of its enablement here . See also: Learn how to migrate CMS Block Learn how to migrate CMS Block Collector Learn more about Multi-store CMS Block Learn how to use CMS blocks Last review date: Jan. 31st, 2018</body>
</html>