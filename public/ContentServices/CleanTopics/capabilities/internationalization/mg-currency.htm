<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Upgrading from Version 2.* to Version 3.* With the Currency module version 3 we have addedsp_currencydatabase table to persist currencies in ZED. Run the following SQL request: CREATE SEQUENCE "spy_currency_pk_seq"; CREATE TABLE "spy_currency" ( "id_currency" INTEGER NOT NULL, "name" VARCHAR(255), "code" VARCHAR(5), "symbol" VARCHAR(5), PRIMARY KEY ("id_currency") ); We have also added currency data importers which are provided in our demoshop. Take\Pyz\Zed\DataImport\Business\Model\Currency\CurrencyWriterStepand instantiate it inDataImportBusinessFactory: namespace Pyz\Zed\DataImport\Business; /** * @method \Pyz\Zed\DataImport\DataImportConfig getConfig() * @SuppressWarnings(PHPMD.ExcessiveClassComplexity) */ class DataImportBusinessFactory extends SprykerDataImportBusinessFactory { /** * @return \Spryker\Zed\DataImport\Business\Model\DataImporterInterface */ public function getImporter() { $dataImporterCollection = $this-&gt;createDataImporterCollection(); $dataImporterCollection-&gt;addDataImporter($this-&gt;createCurrencyImporter()); } /** * @return \Spryker\Zed\DataImport\Business\Model\DataImporterInterface */ protected function createCurrencyImporter() { $dataImporter = $this-&gt;getCsvDataImporterFromConfig($this-&gt;getConfig()-&gt;getCurrencyDataImporterConfiguration()); $dataSetStepBroker = $this-&gt;createTransactionAwareDataSetStepBroker(); $dataSetStepBroker-&gt;addStep(new CurrencyWriterStep()); $dataImporter-&gt;addDataSetStepBroker($dataSetStepBroker); return $dataImporter; } } Take/data/import/currency.csvfrom the demoshop and put it into your project import directory. Configure the importer: namespace Pyz\Zed\DataImport; class DataImportConfig extends SprykerDataImportConfig { const IMPORT_TYPE_CURRENCY = 'currency'; } /** * @return \Generated\Shared\Transfer\DataImporterConfigurationTransfer */ public function getCurrencyDataImporterConfiguration() { return $this-&gt;buildImporterConfiguration('currency.csv', static::IMPORT_TYPE_CURRENCY); } Add the console command: namespace Pyz\Zed\Console; /** * @SuppressWarnings(PHPMD.ExcessiveMethodLength) */ class ConsoleDependencyProvider extends SprykerConsoleDependencyProvider { /** * @param \Spryker\Zed\Kernel\Container $container * * @return \Symfony\Component\Console\Command\Command[] */ public function getConsoleCommands(Container $container) { $commands = [ new DataImportConsole(DataImportConsole::DEFAULT_NAME . ':' . DataImportConfig::IMPORT_TYPE_CURRENCY), ] } } Now you should be able to import currencies usingdata:import:currencyconsole command. With the version 3 we have created the currency switcher twig function which renders drop down with currency selection. Add\Spryker\Yves\Currency\Plugin\CurrencySwitcherServiceProviderservice provider to Yves bootstrap. namespace Pyz\Yves\Application; class YvesBootstrap { /** * @return void */ protected function registerServiceProviders() { $this-&gt;application-&gt;register(new CurrencySwitcherServiceProvider()); } } And "include" in twig template like{{ spyCurrencySwitch() }}. You may also neet to update yourspryker/kernelmodule so you can configure multiple currencies per store. You can set them like
here: $stores['DE'] = [ 'currencyIsoCodes' =&gt; ['EUR', 'USD'], ]; See also: Learn more about Currency Last review date: Sep. 21, 2017</body>
</html>