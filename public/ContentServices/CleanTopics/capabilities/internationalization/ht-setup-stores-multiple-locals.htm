<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Multiple Locales This article describes the steps that you need to consider when you have to setup stores with multiple locales. Configure Locales for Store The stores configuration can be found in theconfig/Shared/stores.phpfile. You can find out more about store configuration here . For each store you can define a set of locales; the first locale is the default . &lt;?php 'locales' =&gt; [ // first entry is default 'en' =&gt; 'en_US', 'de' =&gt; 'de_DE', ] In the example above, theenkey is associated with theen_USlocale. URL Routing for Stores with Multiple Locales In Yves, the key for the selected locale is contained in the URL; if no key is contained in the URL, then the default locale is considered as the current one. E.g.: in Demoshop, for listing the current content of the cart, the following URLs are routed to the same controller and action: URL Locale http://www.de.demoshop.local/cart en_US http://www.de.demoshop.local/de/cart de_DE http://www.de.demoshop.local/en/cart en_US Routing the URLs For URL routing, when defining the controllers in your controller provider, you must include the allowed locales for the application. The allowed locales pattern can be retrieved using thegetAllowedLocalesPatternfrom the base class of the controller provider (AbstractYvesControllerProvider). &lt;?php
$allowedLocalesPattern = $this-&gt;getAllowedLocalesPattern(); $this-&gt;createGetController('/{cart}', static::ROUTE_CART, 'Cart', 'Cart') -&gt;assert('cart', $allowedLocalesPattern . 'cart|cart') -&gt;value('cart', 'cart'); Products with Localized Attributes The details of the abstract products are stored localized in thespy_product_abstract_localized_attributestable. For each abstract product there is an entry in this table that corresponds to each locale, containing the associated attributes for the defined locale. Similar, the details of the concrete products are kept localized in thespy_product_localized_attributestable. The localized attributes are loaded in the key-value data storage by the Collectors, so that the details can be rendered in Yves according to the selected locale. The following details are stored localized in the Demoshop, for both abstract and concrete products: name short description long description Importing products with localized attributes When importing product data in your application you need to consider the list of locales that are defined for the store. The CSV file containing the product data that needs to be imported must contain the name of the product for each locale: name.en_US,name.de_DE The CSV file that contains the attributes for the products that need to be imported must contain the short and long description for each locale : short_description.en_US, short_description.de_DE long_description.en_US, long_description.de_DE Categories with Localized Attributes The details of the categories are kept in thespy_category_attribute. For each category defined in thespy_categorytable there is an entry for each defined locale containing the details of the category localized. The attributes are loaded in the key-value data storage by the Collectors, so that the details can be rendered in Yves according to the selected locale. The following category details are stored localized: meta_title meta_description category_image_name Importing categories with localized attributes The product categories are imported through the Importer module. Similar to importing product data, you need to consider each locale defined in the application when importing the attributes for the categories. The CSV file containing the product data that needs to be imported must contain the name of the product for each locale: category_name.en_US, category_name.de_DE low_pic.en_US, low_pic.de_DE category_description.en_US, category_description.de_DE Importing CMS Blocks and Pages The CMS blocks and pages are able to render localized content through the use of placeholders. The placeholders have a glossary key associated; at runtime, the placeholder is replaced with the glossary value that corresponds to the current locale. Also, a static page will have a distinct URL for each locale defined in the application. Click here for more about CMS . The CMS blocks and pages are imported through XML files. The structure of the XML file is very simple: it contains a list of blocks, each block has a template associated, a name and a list of placeholders for each locale. Example: Click to expand the code sample &lt;?xml version="1.0"?&gt;
&lt;blocks&gt; &lt;block&gt; &lt;template&gt;data_privacy&lt;/template&gt; &lt;blockName&gt;data_privacy_block&lt;/blockName&gt; &lt;locales&gt; &lt;de_DE&gt; &lt;placeholders&gt; &lt;placeholder&gt; &lt;name&gt;privacy_policy&lt;/name&gt; &lt;translation&gt;Datenschutzerklärung&lt;/translation&gt; &lt;/placeholder&gt; &lt;/placeholders&gt; &lt;/de_DE&gt; &lt;en_US&gt; &lt;placeholders&gt; &lt;placeholder&gt; &lt;name&gt;privacy_policy&lt;/name&gt; &lt;translation&gt;Data Privacy Policy&lt;/translation&gt; &lt;/placeholder&gt; &lt;/placeholders&gt; &lt;/en_US&gt; &lt;/locales&gt; &lt;/block&gt;
&lt;/blocks&gt; The XML file structure for loading static pages is similar to the one for importing blocks; the only differences are that a page has also a URL associated for each locale and it doesn’t have a name linked to it. Click to expand the code sample &lt;?xml version="1.0"?&gt;
&lt;pages&gt;
&lt;page&gt; &lt;template&gt;data_privacy&lt;/template&gt; &lt;locales&gt; &lt;de_DE&gt; &lt;url&gt;/de/datenschutz&lt;/url&gt; &lt;placeholders&gt; &lt;placeholder&gt; &lt;name&gt;privacy_policy&lt;/name&gt; &lt;translation&gt;Datenschutzerklärung&lt;/translation&gt; &lt;/placeholder&gt; &lt;/placeholders&gt; &lt;/de_DE&gt; &lt;en_US&gt; &lt;url&gt;/en/privacy&lt;/url&gt; &lt;placeholders&gt; &lt;placeholder&gt; &lt;name&gt;privacy_policy&lt;/name&gt; &lt;translation&gt;Data Privacy Policy&lt;/translation&gt; &lt;/placeholder&gt; &lt;/placeholders&gt; &lt;/en_US&gt; &lt;/locales&gt;
&lt;/page&gt;
&lt;/pages&gt; Localized URLs
Thespy_urltable stores the URLs that correspond to: category pages product details pages static pages defined in CMS For each category there is a distinct URL for each configured locale. Similar for product details pages. These URLs are automatically created and stored in the DB when importing products and categories through theImportermodule. E.g.: /en/computersand/de/computersare the URL’s for the same category but for different locales. The URLs assigned for each imported CMS static page are distinct for each defined locale. /en/privacyand /de/datenschutzpoint to the same template; when rendered, they’ll be loaded with the glossary values that correspond to the associated locale.</body>
</html>