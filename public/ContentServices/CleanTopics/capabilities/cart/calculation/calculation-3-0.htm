<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>The latest version of this module can be found here Calculation Spryker uses the Calculation module to calculate the cart totals that are displayed in the cart/checkout or when the order is placed. The calculation module extensively uses plugins to inject calculation algorithms. How Calculation Works Quote Transfer The quote transfer object is used to store data and plugins that calculate the amounts. There is already a list of plugins which populate quote transfer with corresponding data. Calculations are executed every time the content of the cart is updated. For more details check Cart Data Flow . If manual recalculation of cart is required, thenCalculationFacade::recalculatecan be called from Zed orCalculationClient::recalculatefrom Yves with prepared Quote Transfer . When the recalculation operation is called, the calculator runs the calculator plugin stack and each plugin modifies the QuoteTransfer (calculates discounts, adds sum gross prices, calculates taxes, etc.). Most plugins require theunitGrossPriceand thequantityto be provided. Calculated amounts Each amount is being calculated and stored in cents. Calculator Plugins Click to view Calculator plugins are registered in theCalculationDependencyProvider::getCalculatorStack()method. This method can be extended on the project level and the plugin stack can be updated with your own plugins. Each calculator must implementCalculatorPluginInterface. For more information see: &lt;?php
interface CalculatorPluginInterface
{ /** * @param QuoteTransfer $quoteTransfer * public function recalculate(QuoteTransfer $quoteTransfer);
} RemoveTotalsCalculatorPlugin- Resets quote totals, sets TotalsTransfer empty. RemoveAllCalculatedDiscountsCalculatorPlugin- Resets every CalculatedDiscountTransfer. ItemGrossAmountsCalculatorPlugin- CalculatessumGrossPricefor each ItemTransfer. ItemTransfer::sumGrossPrice = ItemTransfer::unitGrossPrice * ItemTransfer::quantity ProductOptionGrossSumCalculatorPlugin-Calculates unitGrossPriceWithProductOptions,sumGrossPriceWithProductOptionsfor ItemTransfer andsumGrossPricefor ProductOptionTransfer. ProductOptionTransfer::sumGrossPrice = ProductOptionTransfer::unitGrossPrice * ProductOptionTransfer::quantity
ItemTransfer::unitGrossPriceWithProductOptions = sum(ProductOptionTransfer::unitGrossPrice) + ItemTransfer::unitGrossPrice
ItemTransfer::sumGrossPriceWithProductOptions = sum(ProductOptionTransfer::sumGrossPrice) + ItemTransfer:sumGrossPrice SubtotalTotalsCalculatorPlugin- Sums each of thesumGrossPriceWithProductOptionsitems. TotalsTransfer::subtotal = sum(ItemTransfer::sumGrossPriceWithProductOptions) ExpensesGrossSumAmountCalculatorPlugin- CalculatessumGrossPricefor each item. ExpenseTransfer::sumGrossPrice = ExpenseTransfer::unitGrossPrice * ExpenseTransfer::quantity ExpenseTotalsCalculatorPlugin- CalculatesexpenseTotalin TotalsTransfer. TotalsTransfer::expenseTotal = sum(ExpenseTransfer::sumGrossPrice) DiscountCalculatorPlugin- Applies discounts to current QuoteTransfer each discountable item with propertycalculatedDiscounts, gets discounts filled. AlsovoucherDiscountsandcartRuleDiscountsare populated with additional used discount data for order level. Discount Calculation Discount calculation is a separate topic and is explained here Discount . SumGrossCalculatedDiscountAmountCalculatorPlugin- Calculates and setsItemTransferamounts after discounts tosumGrossPriceWithProductOptionAndDiscountAmountsandunitGrossPriceWithProductOptionAndDiscountAmounts;sets expense amounts after discounts tounitGrossPriceWithDiscountsandsumGrossPriceWithDiscounts. ItemTransfer::unitGrossPriceWithProductOptionAndDiscountAmounts = ItemTransfer::unitGrossPriceWithProductOptions - (sum(ItemTransfer:calculatedDiscounts::unitGrossPrice) + sum(ProductOptionTransfer::calculatedDiscounts::unitGrossPrice))
ItemTransfer::sumGrossPriceWithProductOptionAndDiscountAmounts = ItemTransfer::sumGrossPriceWithProductOptions - (sum(ItemTransfer:calculatedDiscounts::sumGrossPrice) + sum(ProductOptionTransfer::calculatedDiscounts::sumGrossPrice)) DiscountTotalsCalculatorPlugin- Calculates total for discounts used and sets it tototalDiscountinTotalsTransfer. Sum all discountable itemCalculatedDiscountTransfergross amounts: TotalsTransfer:discountTotal += sum(ItemTransfer::CalculateDiscountTransfer::sumGrossAmount +
ItemTransfer::ProductOptionTransfer::CalculateDiscountTransfer::sumGrossAmount + ExpenseTransfer::sumGrossAmount)
GrandTotalTotalsCalculatorPlugin - Calculates grandTotal in TotalsTransfer.
TotalsTransfer:grandTotal = TotalsTransfer::subtotal + TotalsTransfer:expenseTotal GrandTotalWithDiscountsCalculatorPlugin- CalculatesGrandTotalafter discounts inTotalsTransfer. TotalsTransfer:grandTotal = TotalsTransfer::subtotal + TotalsTransfer:expenseTotal - TotalsTransfer::discountTotal TaxTotalsCalculatorPlugin- CalculatestaxTotalandtaxRateused from TotalTransfer::grandTotal, sets it inTotalsTransfer::TaxTotalsTransfer. TaxableItems = ItemTransfer, ProductOptionTransfer, ExpenseTransfer. TaxTotalsTransfer::taxRate = sum(TaxableItems) / TaxableItems TaxTotalsTransfer::taxAmount = round((TotalsTransfer::grandTotal * TaxTotalsTransfer::taxRate) / TaxTotalsTransfer::taxRate / 100) Calculation Data Structure Quote Transfer QuoteTransfer is the main data transfer object used in Cart, Calculation, Checkout and when order is placed. This object is created when first item is added to the cart. The entire data object is stored into the session. It consists of: Field Description totals ( TotalsTransfer ) Order totals. items ( ItemTransfer []) CartItem collection. voucherDiscounts ( DiscountTransfer []) cartRuleDiscounts ( DiscountTransfer []) expenses ( ExpenseTransfer ) billingAddress (AddressTransfer) Current checkout customer billing address. shippingAddress (AddressTransfer) Current checkout customer shipment address. customer (CustomerTransfer) Current checkout customer details. orderReference (string) Current checkout order reference, available afterPlaceOrderStep. payment (PaymentTransfer) Information about currently selected payment, available afterPaymentStep. shipment (ShipmentTransfer) Information about currently selected shipment, available afterShipmentStep. Totals Transfer TotalsTransfer is a data object holding cart totals, subtotal, expenses (shipping), discount total and grand total. Here should the amounts for order level be stored. Field Description subtotal (int) Calculated total amount before taxes and discounts. Is set bySubtotalTotalsCalculatorPlugin. expenseTotal (int) Total expenses amount (shipping). It is set byExpenseTotalsCalculatorPlugin. discountTotal (int) Total discount amount. It is set byDiscountTotalsCalculatorPlugin. taxTotal ( TaxTotalsTransfer ) Tax totals for current cart. Is set byTaxTotalsCalculatorPlugin. grandTotal (int) The total amount the customer needs to pay after the discounts are applied. It is set byGrandTotalWithDiscountsCalculatorPlugincalculator plugin. hash (string) Hash from total values to identify amount changes. It is set byGrandTotalCalculatorPlugin. Tax Total Transfer TaxTotalsTransfer holds taxRate and taxAmount used for grandTotal. Field Description taxRate (int) current tax rate in percentage. amount (int) current tax amount from grandTotal. Item Transfer ItemTransfer is a cart item transfer, holds single product information. Field Description id (int) id of the concrete product. sku (string) concrete product sku. groupKey (string) group key used for grouping items in cart. quantity (int) number of items selected. idSalesOrderItem (int) id of order item, stored when items is saved, after PlaceOrderStep. name (string) concrete product name. idProductAbstract (int) id of abstract product. abstractSku (string) abstract product sku. variety (string) used when item is in a(Undefined variable: General.bundle/module). status (string) state machine state when item used as order item. addedAt (string) used in wishlist to have date when item was added. productConcrete (ProductConcreteTransfer) concrete product details added in the wishlist. unitGrossPrice (int) single item gross price. It’s set withCartItemPricePlugincart expander plugin. sumGrossPrice (int) sum of items gross price. Calculated withExpensesGrossSumAmountCalculatorPlugin. unitGrossPriceWithDiscounts (int) unit gross price after the discounts are applied. It’s set bySumGrossCalculatedDiscountAmountCalculatorPlugin. sumGrossPriceWithDiscounts (int) sum of item gross price after discounts. It’s set bySumGrossCalculatedDiscountAmountCalculatorPlugin. taxRate (int) current tax rate. It’s set byProductCartPlugincart expander plugin. unitGrossPriceWithProductOptions (int) single item with product options gross price. It’s set byProductOptionGrossSumCalculatorPlugin. sumGrossPriceWithProductOptions (int) sum of item gross price with product options. It’s set byProductOptionGrossSumCalculatorPlugin. unitGrossPriceWithProductOptionAndDiscountAmounts (int) single item with product options gross price and after discounts. It’s set bySumGrossCalculatedDiscountAmountCalculatorPlugin. sumGrossPriceWithProductOptionAndDiscountAmounts (int) sum of item gross price with product options and after discounts. It’s set bySumGrossCalculatedDiscountAmountCalculatorPlugin. unitTaxAmountWithProductOptionAndDiscountAmounts (int) single item tax amount with product options after discounts. (order only). sumTaxAmountWithProductOptionAndDiscountAmounts (int) sum of items gross price with product options after discounts. (order only). refundableAmount (int) item available refundable amount (order only). unitTaxAmount (int) tax amount for single item (order only). sumTaxAmount (int) tax amount for sum of items (order only). calculatedDiscounts[] ( CalculatedDiscountTransfer ) item calculated discount collection. It’s set byDiscountCalculatorPlugin. canceledAmount (int) canceled amount for this item (order only). productOptions ( ProductOptionTransfer []) assigned product options. It’s set byCartItemProductOptionPlugincart expander plugin. Calculated Discount Transfer Each item which can have discounts applied have calculatedDiscounts property added which holds collection of discounts for each discount type. Field Description displayName (string) applied discount name description (string) applied discount description voucherCode (string) used voucher code quantity(int) number of discounted items unitGrossAmount (int) discount gross amount for single items; It’s set byDiscountCalculatorPlugin sumGrossAmount (int) discount gross amount for sum of items; It’s set byDiscountCalculatorPlugin Product Option Transfer ProductOptionTransfer, some items may have product option collection attached which also have amounts calculated. Field Description idSalesOrderItemOption (int) id of sales order item option stored after the order is placed unitGrossPrice (int) single item gross price. It’s setby CartItemProductOptionPlugincart expander plugin sumGrossPrice (int) sum of items gross price. It’s set byProductOptionGrossSumCalculatorPlugincart expander plugin taxRate (int) tax rate in percentage. It’s set byCartItemProductOptionPlugincart expander plugin calculatedDiscounts[] ( CalculatedDiscountTransfer ) product Option calculated discount collection. It’s set byDiscountCalculatorPlugin refundableAmount (int) item available refundable amount (order only) unitTaxAmount (int) tax amount for single product option (order only) sumTaxAmount (int) tax amount for sum of product options (order only) Discount Transfer DiscountTransfer, is a collection of discounts used in all QuoteTransfer discountable items.It can be voucherDiscounts or cartRuleDiscounts. Field Description displayName (string) discount name idDiscount (int) id of discount, as stored in the discount table description (string) description of the applied discount calculatorPlugin (string) discount calculator plugin used to calculate this discount (Fixed, Percentage) isPrivileged (bool) is the discount privileged, can be combined with other discounts isActive (bool) is the discount active validFrom (string) starting date for discount validity validTo (string) ending date for discount validity collectorLogicalOperator (string) logical operator for collector (OR, AND) when combining multiple discounts discountCollectors (DiscountCollectionTransfer[]) list of discount collectors used for this discount amount (int) total discount amount used for this discount type. It’s set byDiscountCalculatorPlugin ExpenseTransfer Field Description idExpense (int) unique identifier of the expense sumGrossPrice (int) sum of item gross price. It’s set byExpensesGrossSumAmountCalculatorPlugin unitGrossPrice (string) single expense price. e.g.: shipment expenses are set in theShipmentStep type (string) type of expense (shipping) taxRate (int) tax in percents calculatedDiscounts (CalculatedDiscountTransfer[]) list of applied discounts for this item quantity (int) number of items idSalesExpense (int) id of expense as stored in the sales_expense unitGrossPriceWithDiscounts (int) single item price after discounts. Set bySumGrossCalculatedDiscountAmountCalculatorandOrderAmountAggregator\ItemDiscounts sumGrossPriceWithDiscounts (int) sum off all item prices after discounts. Set bySumGrossCalculatedDiscountAmountCalculatorandOrderAmountAggregator\ItemDiscounts unitTaxAmountWithDiscounts (int) tax amount for single item after discounts(order only) sumTaxAmountWithDiscounts (int) tax amount for sum of items after discounts(order only) refundableAmount (int) total refundable amount for this item (order only) canceledAmount (int) total cancelled amount for this item (order only) unitTaxAmount (int) tax amount for single item (order only)
sumTaxAmount (int)	tax amount for sum of items (order only)</body>
</html>