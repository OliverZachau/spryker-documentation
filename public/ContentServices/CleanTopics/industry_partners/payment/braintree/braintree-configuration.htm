<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Addspryker-eco/braintreeto your project by runningcomposer require spryker-eco/braintree Please refer toconfig/config.dist.phpfor example of module configuration. To setup the initial Braintree configuration, use the credentials you received after registering your Braintree merchant account: // the mode of the transaction, either development, integration, sandbox, production, qa (required)
$config[BraintreeConstants::ENVIRONMENT] = ''; // the id of the merchant used (required)
$config[BraintreeConstants::MERCHANT_ID] = ''; // the public key given by the defined merchant account (required)
$config[BraintreeConstants::PUBLIC_KEY] = ''; // the private key given by the defined merchant account (required)
$config[BraintreeConstants::PRIVATE_KEY] = ''; // merchant account id specifying the currency (Marketplace master merchant is used by default)
$config[BraintreeConstants::ACCOUNT_ID] = ''; // merchant account unique identifier (Marketplace master merchant is used by default)
$config[BraintreeConstants::ACCOUNT_UNIQUE_IDENTIFIER] = ''; // defaults to false
$config[BraintreeConstants::IS_VAULTED] = true; // defaults to false
$config[BraintreeConstants::IS_3D_SECURE] = true; Checkout Configuration To use Braintree in frontend, Braintree payment method handlers and subforms should be added toPyz/Yves/Checkout/CheckoutDependencyProvider.php $container[CheckoutDependencyProvider::PAYMENT_METHOD_HANDLER] = function () { $paymentHandlerPlugins = new StepHandlerPluginCollection(); $paymentHandlerPlugins-&gt;add(new BraintreeHandlerPlugin(), PaymentTransfer::BRAINTREE_CREDIT_CARD); $paymentHandlerPlugins-&gt;add(new BraintreeHandlerPlugin(), PaymentTransfer::BRAINTREE_PAY_PAL); return $paymentHandlerPlugins; }; $container[CheckoutDependencyProvider::PAYMENT_SUB_FORMS] = function () { $paymentSubFormPlugins = new SubFormPluginCollection(); $paymentSubFormPlugins-&gt;add(new BraintreeCreditCardSubFormPlugin()); $paymentSubFormPlugins-&gt;add(new BraintreePayPalSubFormPlugin()); return $paymentSubFormPlugins; }; All subform and handler plugins are located inSprykerEco\Yves\Braintree\Plugin\namespace. OMS Configuration Activate the following Braintree process: $config[OmsConstants::ACTIVE_PROCESSES] = [ 'BraintreePayPal01', 'BraintreeCreditCard01',
]; $config[OmsConstants::PROCESS_LOCATION] = [ OmsConfig::DEFAULT_PROCESS_LOCATION, APPLICATION_VENDOR_DIR . '/spryker-eco/braintree/config/Zed/Oms',
]; $config[SalesConstants::PAYMENT_METHOD_STATEMACHINE_MAPPING] = [ \SprykerEco\Shared\Braintree\BraintreeConfig::PAYMENT_METHOD_CREDIT_CARD =&gt; 'BraintreeCreditCard01', \SprykerEco\Shared\Braintree\BraintreeConfig::PAYMENT_METHOD_PAY_PAL =&gt; 'BraintreePayPal01',
]; Default implementation for commands and options should be added toPyz/Zed/Oms/OmsDependencyProvider.php Commands: $container-&gt;extend(OmsDependencyProvider::COMMAND_PLUGINS, function (CommandCollectionInterface $commandCollection) { $commandCollection -&gt;add(new AuthorizePlugin(), 'Braintree/Authorize') -&gt;add(new RevertPlugin(), 'Braintree/Revert') -&gt;add(new CapturePlugin(), 'Braintree/Capture') -&gt;add(new RefundPlugin(), 'Braintree/Refund'); return $commandCollection;
}); Conditions: $container-&gt;extend(OmsDependencyProvider::CONDITION_PLUGINS, function (ConditionCollectionInterface $conditionCollection) { $conditionCollection -&gt;add(new IsAuthorizationApprovedPlugin(), 'Braintree/IsAuthorizationApproved') -&gt;add(new IsReversalApprovedPlugin(), 'Braintree/IsReversalApproved') -&gt;add(new IsCaptureApprovedPlugin(), 'Braintree/IsCaptureApproved') -&gt;add(new IsRefundApprovedPlugin(), 'Braintree/IsRefundApproved'); return $conditionCollection;
}); All commands and conditions are located inSprykerEco\Zed\Braintree\Communication\Plugin\Oms\namespace. Payment Configuration Default implementation for checkout payment plugins should be added toPyz/Zed/Payment/PaymentDependencyProvider.php $container-&gt;extend(PaymentDependencyProvider::CHECKOUT_PLUGINS, function (CheckoutPluginCollection $pluginCollection) { $pluginCollection -&gt;add(new BraintreePreCheckPlugin(), BraintreeConfig::PROVIDER_NAME, PaymentDependencyProvider::CHECKOUT_PRE_CHECK_PLUGINS) -&gt;add(new BraintreeSaveOrderPlugin(), BraintreeConfig::PROVIDER_NAME, PaymentDependencyProvider::CHECKOUT_ORDER_SAVER_PLUGINS) -&gt;add(new BraintreePostSavePlugin(), BraintreeConfig::PROVIDER_NAME, PaymentDependencyProvider::CHECKOUT_POST_SAVE_PLUGINS); return $pluginCollection; }); All payment plugins are located inSprykerEco\Zed\Braintree\Communication\Plugin\Checkout\namespace. See also: Get a general idea about Braintree Learn how to perform requests with Braintree Familiarize yourself with the Braintree workflow Last review date: Dec. 22nd, 2017</body>
</html>