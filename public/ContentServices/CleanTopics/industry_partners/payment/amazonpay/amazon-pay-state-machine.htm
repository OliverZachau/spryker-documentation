<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>The state machine is different for synchronous and asynchronous flow. Although from status "capture completed" it is the same and in the state machine, it's presented as a sub-process. State machine for the synchronous flow: State machine for the asynchronous flow: OMS Commands In order to support processing of OMS, there's list of commands and conditions. Click here for example of injection &lt;script&gt; /** * @param \Spryker\Zed\Kernel\Container $container * * @return void */ protected function injectAmazonPayCommands(Container $container) { $container-&gt;extend( OmsDependencyProvider::COMMAND_PLUGINS, function (CommandCollectionInterface $commandCollection) { $commandCollection -&gt;add(new CancelOrderCommandPlugin(), 'AmazonPay/CancelOrder') -&gt;add(new CloseOrderCommandPlugin(), 'AmazonPay/CloseOrder') -&gt;add(new RefundOrderCommandPlugin(), 'AmazonPay/RefundOrder') -&gt;add(new ReauthorizeExpiredOrderCommandPlugin(), 'AmazonPay/ReauthorizeExpiredOrder') -&gt;add(new CaptureCommandPlugin(), 'AmazonPay/Capture') -&gt;add(new UpdateSuspendedOrderCommandPlugin(), 'AmazonPay/UpdateSuspendedOrder') -&gt;add(new UpdateAuthorizationStatusCommandPlugin(), 'AmazonPay/UpdateAuthorizationStatus') -&gt;add(new UpdateCaptureStatusCommandPlugin(), 'AmazonPay/UpdateCaptureStatus') -&gt;add(new UpdateRefundStatusCommandPlugin(), 'AmazonPay/UpdateRefundStatus'); return $commandCollection; } ); } /** * @param \Spryker\Zed\Kernel\Container $container * * @return void */ protected function injectAmazonPayConditions(Container $container) { $container-&gt;extend(OmsDependencyProvider::CONDITION_PLUGINS, function (ConditionCollectionInterface $conditionCollection) { $conditionCollection -&gt;add(new IsClosedConditionPlugin(), 'AmazonPay/IsClosed') -&gt;add(new IsCloseAllowedConditionPlugin(), 'AmazonPay/IsCloseAllowed') -&gt;add(new IsCancelledConditionPlugin(), 'AmazonPay/IsCancelled') -&gt;add(new IsCancelNotAllowedConditionPlugin(), 'AmazonPay/IsCancelNotAllowed') -&gt;add(new IsCancelledOrderConditionPlugin(), 'AmazonPay/IsOrderCancelled') -&gt;add(new IsAuthOpenConditionPlugin(), 'AmazonPay/IsAuthOpen') -&gt;add(new IsAuthDeclinedConditionPlugin(), 'AmazonPay/IsAuthDeclined') -&gt;add(new IsAuthPendingConditionPlugin(), 'AmazonPay/IsAuthPending') -&gt;add(new IsAuthSuspendedConditionPlugin(), 'AmazonPay/IsAuthSuspended') -&gt;add(new IsAuthExpiredConditionPlugin(), 'AmazonPay/IsAuthExpired') -&gt;add(new IsAuthClosedConditionPlugin(), 'AmazonPay/IsAuthClosed') -&gt;add(new IsAuthTransactionTimedOutConditionPlugin(), 'AmazonPay/IsAuthTransactionTimedOut') -&gt;add(new IsAuthSuspendedConditionPlugin(), 'AmazonPay/IsPaymentMethodChanged') -&gt;add(new IsCaptureCompletedConditionPlugin(), 'AmazonPay/IsCaptureCompleted') -&gt;add(new IsCaptureDeclinedConditionPlugin(), 'AmazonPay/IsCaptureDeclined') -&gt;add(new IsCapturePendingConditionPlugin(), 'AmazonPay/IsCapturePending') -&gt;add(new IsRefundCompletedConditionPlugin(), 'AmazonPay/IsRefundCompleted') -&gt;add(new IsRefundDeclinedConditionPlugin(), 'AmazonPay/IsRefundDeclined') -&gt;add(new IsRefundPendingConditionPlugin(), 'AmazonPay/IsRefundPending'); return $conditionCollection; }); } &lt;/script&gt; See also: Get a general idea about Amazon Pay Configure Amazon Pay API Configure Amazon Pay Obtaining Amazon Order Reference and Shipping Addresses details Learn how Amazon Pay Refund works Rendering the "Pay with Amazon" button on the Cart page Learn how Amazon Pay Sandbox Simulations work Check out Amazon Pay example email notifications Last review date: Nov. 13th, 2017</body>
</html>