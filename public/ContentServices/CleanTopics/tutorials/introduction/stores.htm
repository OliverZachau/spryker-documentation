<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Challenge Description Override aZedcore(Undefined variable: General.bundle/module)on project level, and then override it on store level. You can also repeat the same challenge for aYves (Undefined variable: General.bundle/module). Challenge Solving Highlights Project Level Let’s first override on the project level. Add anIndexController::indexAction()tosrc/Pyz/Zed/Application/Communication/Controllerthat outputs a string containing a message about the project level. Check http://zed.de.demoshop.local . That’s it! Store Level Now, let’s override the same(Undefined variable: General.bundle/module)for a store level. Add store configuration forXYinside theconfig/Shared/stores.phpconfiguration file. Createconfig_default-&lt;store&gt;.phpandconfig_default_&lt;environment&gt;_&lt;store&gt;.php. You can copy another config file and change the name forXYstore. Add a new(Undefined variable: General.bundle/module)calledApplicationXYinsidesrc/Pyz/Zed. Add anIndexController::indexAction()and to your new(Undefined variable: General.bundle/module) ApplicationXYthat outputs a string containing a message about the store level. Change the store in Nginx config for zed. To do so, open the config file:/etc/nginx/sites-available/DE_development_zedand change the$application_storetoXY. Restart Nginx by runningsudo /etc/init.d/nginx restart. Configuring the storeXYis done! Check again http://zed.de.demoshop.local to see the new message for theXYstore. References Documentation Description Multi Store Projects How to set up multi-store projects</body>
</html>