<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Fields can be added to the existing database tables, but they cannot be removed (removing fields from the tables could break the functionalities implemented in Spryker Core). As an example, we will add a description field to the spy_price_type table. The structure of this table is defined in the Price(Undefined variable: General.bundle/module), in the spy_price.schema.xml file, as it can be seen below: &lt;table name="spy_price_type"&gt; &lt;column name="id_price_type" type="INTEGER" required="true" primaryKey="true" autoIncrement="true"/&gt; &lt;column name="name" type="VARCHAR" size="255" required="true"/&gt; &lt;unique&gt; &lt;unique-column name="name"/&gt; &lt;/unique&gt;
&lt;id-method-parameter value="spy_price_type_pk_seq"/&gt;&lt;/table&gt; To add an additional column to this table, follow these steps : On the project side, if it wasn’t created yet, add the corresponding xml file ( follow the same folder structure and give it the same name) mkdir -p src/Pyz/Zed/Price/Persistence/Propel/Schema
touch src/Pyz/Zed/Price/Persistence/Propel/Schema/spy_price.schema.xml Add the additional fields to the table definition &lt;?xml version="1.0"?&gt;
&lt;database xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="zed" xsi:noNamespaceSchemaLocation="http://static.spryker.com/schema-01.xsd" namespace="Orm\Zed\Price\Persistence" package="src.Orm.Zed.Price.Persistence"&gt; &lt;table name="spy_price_type"&gt; &lt;column name="description" type="VARCHAR" size="255" required="false"/&gt; &lt;/table&gt; &lt;/database&gt; Update the database by running from the command line the following : vendor/bin/console propel:install Extending the database schema for the first time If you’re extending the database schema for the first time, make sure that the Propel schema path pattern for the project side is set inPropelConfig, so that the XML schema files from the project side are also grabbed when running the Propel setup command. &lt;?php
namespace Pyz\Zed\Propel; use Spryker\Zed\Propel\PropelConfig as SprykerPropelConfig; class PropelConfig extends SprykerPropelConfig
{ /** * @return array */ public function getPropelSchemaPathPatterns() { return array_merge( [APPLICATION_SOURCE_DIR.'/*/Zed/*/Persistence/Propel/Schema/'], parent::getPropelSchemaPathPatterns() ); }
}</body>
</html>