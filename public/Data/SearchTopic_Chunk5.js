define({"386":{i:0.00496082030681243,u:"../content/front-end_developer_guide/demoshop/oryx/oryx.htm",a:"  As of April 2017, Oryx replaces  Antelope Introduction\n Oryx is the Spryker projects frontend helper. The purpose of Oryx is to simplify the asset building process, giving developers the freedom to choose and configure the preprocessors for the frontend.\n\n Oryx relies on webpack 2.\n\n Oryx for ZED ...",t:"Oryx "},"387":{i:0.00500450437425971,u:"../content/front-end_developer_guide/demoshop/oryx/oryx-for-zed.htm",a:"  As of April 2017, Oryx replaces  Antelope Introduction\n oryx-for-zed is an extension of Oryx that performs a full build for Spryker Zed UI applications. It also provides access to Zed settings and Zed webpack configuration, so you can extend/change the whole building process.\n\n Requirements\n ...",t:"Oryx for Zed "},"388":{i:0.000513801086699129,u:"../content/front-end_developer_guide/demoshop/twig_templates/twig-overview.htm",a:" Given that we are working on a web application, we need a proper way to generate HTML dynamically. The most common approach relies on templates and for this we decided to go with Twig Template Engine.\n\n \nYou can use other technology for the front-end of your application as well; this is just a ...",t:"Overview - Twig "},"389":{i:0.000513801086699129,u:"../content/front-end_developer_guide/twig-compatibility-mode-demoshop-vs-suite.htm",a:"In the suite, all variables available in the Twig templates can be accessed from the _view variable. In the Demoshop we used a different technique and passed the Twig variables to the global Twig namespace directly. The following code examples will help to understand the difference. Demoshop ...",t:"Twig Compatibility Mode Demoshop vs Suite"},"390":{i:0.000513801086699129,u:"../content/industry_partners/partner-integration.htm",a:"Industry Partner Integration  In this section you will find information about our Industry Partner Integration solutions. Please visit our  Partners Registry  for a complete list of our partners ",t:"Industry Partner Integration    "},"391":{i:0.0005283588349818,u:"../content/industry_partners/hosting/claranet.htm",a:"Hosting Provider - Claranet  Partner Information   Copyright and Disclaimer See  Disclaimer . See also: Managed Services for eCommerce 2.0   Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - Claranet "},"392":{i:0.0005283588349818,u:"../content/industry_partners/hosting/continum.htm",a:"Hosting Provider - Continum  Partner Information   Copyright and Disclaimer See  Disclaimer .   Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - Continum "},"393":{i:0.0005283588349818,u:"../content/industry_partners/hosting/metaways.htm",a:"Hosting Provider - Metaways  Partner Information Copyright and Disclaimer See  Disclaimer .   Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - Metaways"},"394":{i:0.0005283588349818,u:"../content/industry_partners/hosting/plusserver.htm",a:"Hosting Provider - PlusServer  Partner Information Copyright and Disclaimer See  Disclaimer .   Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - PlusServer"},"395":{i:0.0005283588349818,u:"../content/industry_partners/payment/afterpay.htm",a:"Payment Integration - AfterPay  Partner Information   Copyright and Disclaimer See  Disclaimer .   Last review date: Jul. 6th, 2018 ",t:"Payment Integration - AfterPay  "},"396":{i:0.0005283588349818,u:"../content/industry_partners/payment/amazonpay/amazon-pay.htm",a:" Partner Information Amazon Pay consists of client-side tools (widget, javascript etc.) and Amazon API with SDKs written for different programming languages (PHP, Python, Ruby, Java, C#). Client-side tools are used for displaying GUI elements on some common pages of an internet shop, and it includes ...",t:"Payment Integration - Amazon Pay"},"397":{i:0.000513801086699129,u:"../content/industry_partners/payment/amazonpay/amazon-pay-configuration.htm",a:" \n            Please refer to config/Shared/config.dist.php for an example of module configuration.\n         To set up the Amazon Pay initial configuration, use the credentials you received after completeng the registration as an Amazon seller: \n$config[AmazonPayConstants::CLIENT_ID] = ...",t:"Amazon Pay - Configuration  "},"398":{i:0.000513801086699129,u:"../content/industry_partners/payment/amazonpay/amazon-pay-email-notification.htm",a:" Since Amazon Pay requires some emails being sent in specific situations, please implement on a project level following authorization status update logic. UpdateOrderAuthorizationStatusTransaction Once the order authorization state is Suspended, the customer should receive an email stating that the ...",t:"Amazon Pay - Email Notifications  "},"399":{i:0.000513801086699129,u:"../content/industry_partners/payment/amazonpay/amazon-pay-refund.htm",a:" After successful authorization and capture processes order should be closed. This blocks any modifications to an order. From this state only Refund operation is possible. Refund can be partial if more than one item is set to refund or full. Amazon only requires the amount of money which has to be ...",t:"Amazon Pay - Refund  "},"400":{i:0.000513801086699129,u:"../content/industry_partners/payment/amazonpay/amazon-pay-state-machine.htm",a:" The state machine is different for synchronous and asynchronous flow. Although from status \"capture completed\" it is the same and in the state machine, it\u0027s presented as a sub-process. The state machine for the synchronous flow: The state machine for the asynchronous flow: OMS Commands Here is a ...",t:"Amazon Pay - State Machine  "},"401":{i:0.000513801086699129,u:"../content/industry_partners/payment/amazonpay/amazon-pay-api.htm",a:" So far we discussed the client side implementation provided by Amazon Pay. On the Spryker OS side, the module provides tools for rendering Amazon Pay widgets. Another part of the implementation is the Amazon Pay API function wrapper, implemented as a Facade. Each API call involves similar classes ...",t:"Amazon Pay - API"},"402":{i:0.000513801086699129,u:"../content/industry_partners/payment/amazonpay/amazon-pay-simulations.htm",a:" In order to reproduce some edge cases like declined payment or pending capture, Amazon provides two solutions. The first is special methods marked with a red star on payment widget. It allows reproducing different cases of \"decline\" payment workflow.  But there are more edge cases like expired ...",t:"Amazon Pay - Sandbox Simulations"},"403":{i:0.000513801086699129,u:"../content/industry_partners/payment/amazonpay/amazon-pay-order-ref-info.htm",a:"Amazon Pay - Order Reference and Information about Shipping Addresses  After successful authorization, a buyer will be redirected to an order details page to enter all the information necessary for placing an order: address of shipment, payment method, delivery method and some calculations about ...",t:"Amazon Pay - Obtaining an Amazon Order Reference and Information about Shipping Addresses"},"404":{i:0.000513801086699129,u:"../content/industry_partners/payment/amazonpay/amazon-pay-rendering-pay.htm",a:" Usually the checkout page includes information for the buyer to review, items in the cart, prices, total price information and some other order related details. From this page, the buyer can proceed to checkout by clicking a related GUI element (for example hyperlink or button). Amazon Pay provides ...",t:"Amazon Pay - Rendering a \"Pay with Amazon\" Button on the Cart Page"},"405":{i:0.0005283588349818,u:"../content/industry_partners/payment/arvato/arvato.htm",a:" Partner Information   See also: Risk Solution Services Integration - Arvato 2.0 Risk Check - Arvato Risk Solution Services 2.0 Store Order - Arvato Risk Solution Services 2.0 Arvato partners with e-commerce platform Spryker   Last review date: Jul. 5th, 2017   ",t:"Risk Solution Services Integration - Arvato"},"406":{i:0.000513801086699129,u:"../content/industry_partners/payment/arvato/v2_0/arvato-2-0.htm",a:" The purpose of developing the risk solution services is to provide a complete and comprehensive risk management\n    for the eCommerce/mail-order industry, contributing to a high level of modularization and automation. Besides the use\n    of pre-configured service modules for risk management, risk ...",t:"Risk Solution Services Integration - Arvato 2.0   "},"407":{i:0.000513801086699129,u:"../content/industry_partners/payment/arvato/v2_0/arvato-risk-check-2-0.htm",a:" \n    Accounted for by external credit agency data and internal existing customer- and order-details\n    the RiskCheck evaluates the probability of payment default for the customer orders.\n \n    The returned decision codes (Result – ActionCode – ResultCode) manage the definition of the eShop’s ...",t:"Arvato  2.0 - Risk Check"},"408":{i:0.000513801086699129,u:"../content/industry_partners/payment/arvato/v2_0/arvato-store-order-2-0.htm",a:" \n    As soon as the order is activated in the eShop it has to be directly delivered by the service call StoreOrder in risk solution services.\n    Based on the transmitted data a limit check is processed again. The result and action codes returned by StoreOrder\n    should be analyzed and the order ...",t:"Arvato  2.0 - Store Order"},"409":{i:0.0005283588349818,u:"../content/industry_partners/payment/billpay/billpay.htm",a:"Payment Integration - Billpay (BETA) BETA version\n This (Undefined variable: General.bundle/module) is still in development. For questions and inquiries please contact  academy@spryker.com Partner Information Copyright and Disclaimer See  Disclaimer .",t:"Payment Integration - Billpay"},"410":{i:0.000513801086699129,u:"../content/industry_partners/payment/billpay/billpay_payment_methods.htm",a:" Refer to Billpay payment information ( https://www.billpay.de/en/business-clients/payment-information/ ) for information about payment methods. The identity and credit check are checked within a single \"pre-authorize\" call after summary page was submitted.\n           This may lead to the ...",t:"Billpay - Invoice Payment in Preauthorize Mode"},"411":{i:0.000513801086699129,u:"../content/industry_partners/payment/billpay/billpay-integration.htm",a:" Billpay offers multiple payment methods (Invoice, Direct Debit, PayLater, Instalment). Availability of payment methods differs from country to country. Please contact Billpay directly or visit the Billpay website ( https://www.billpay.de/en/business-clients/merchant-request/ ) for details. The ...",t:"Billpay - Integration"},"412":{i:0.0005283588349818,u:"../content/industry_partners/payment/braintree/braintree.htm",a:"(BETA)  Braintree provides two methods of payment: Credit Card PayPal In order to integrate Braintree payments, a Braintree merchant account should be created and configuration data then could be obtained from Braintree. There are two types of accounts for the integration: test accounts live ...",t:"Payment Integration — Braintree"},"413":{i:0.000513801086699129,u:"../content/industry_partners/payment/braintree/braintree-configuration.htm",a:" \n    Add spryker-eco/braintree to your project by running composer require spryker-eco/braintree \n    Please refer to config/config.dist.php for example of module configuration.\n To setup the initial Braintree configuration, use the credentials you received after registering your Braintree merchant ...",t:"Braintree — Configuration  "},"414":{i:0.000513801086699129,u:"../content/industry_partners/payment/braintree/braintree-requests.htm",a:" In order to perform the needed requests, you can easily use the implemented state machine commands and conditions. The next section gives a summary of them. You can also use the facade methods directly which, however, are invoked by the state machine. Braintree State Machine Commands and Conditions ...",t:"Braintree — Performing Requests  "},"415":{i:0.000513801086699129,u:"../content/industry_partners/payment/braintree/braintree-workflow.htm",a:" Both credit card and PayPal utilize the same request flow. It basically consists of the following requests: Pre-check: to check the user information in order to make sure that all the needed information is correct before doing the actual pre-authorization. Authorize: to perform a payment risk check ...",t:"Braintree — Workflow  "},"416":{i:0.0005283588349818,u:"../content/industry_partners/payment/computop/computop.htm",a:" Partner Information \n            We integrate with a wide range of payment methods that can be configured according to your needs and convenience. Payment method flows are configured using state machines.\n         \n            Implementation details:\n         API details OMS details \n            ...",t:"Payment Integration - Computop"},"417":{i:0.000513801086699129,u:"../content/industry_partners/payment/computop/computop-api-details.htm",a:"Computop API  Authorization Call: \n        Authorize money.\n     \n        There is no partial authorization. Please make one API call to make authorization for all items in the order.\n     \n        It is not possible to Authorize a higher amount than in the ORDER.\n     Inquire Call: Status inquiries ...",t:"Computop - API details"},"418":{i:0.000513801086699129,u:"../content/industry_partners/payment/computop/computop-credit-card.htm",a:" Example State Machine Front-end Integration \n    To adjust the frontend appearance, provide the following templates in your theme directory:\n \n        src/\u003cproject_name\u003e/Yves/Computop/Theme/\u003ccustom_theme_name\u003e/credit_card.twig\n     State Machine Integration The Computop provides a demo state ...",t:"Computop - Credit Card  "},"419":{i:0.000513801086699129,u:"../content/industry_partners/payment/computop/computop-direct-debit.htm",a:" Example State Machine Front-end Integration \n    To adjust the frontend appearance, provide the following templates in your theme directory:\n \n        src/\u003cproject_name\u003e/Yves/Computop/Theme/\u003ccustom_theme_name\u003e/direct_debit.twig\n     State Machine Integration The Computop provides a demo state ...",t:"Computop - Direct Debit  "},"420":{i:0.000513801086699129,u:"../content/industry_partners/payment/computop/computop-easy-credit.htm",a:" Computop - Easy Credit  Example State Machine Front-end Integration \n    To adjust the frontend appearance, provide the following templates in your theme directory:\n \n        src/\u003cproject_name\u003e/Yves/Computop/Theme/\u003ccustom_theme_name\u003e/easy_credit.twig\n     State Machine Integration The Computop ...",t:" Computop - Easy Credit  "},"421":{i:0.000513801086699129,u:"../content/industry_partners/payment/computop/computop-ideal.htm",a:" The iDeal issuer simulation is not working anymore and therefore testing on  sandbox is currently not possible. We have sent a question to Computop about additional API call. Waiting for the answer. Example State Machine: Front-end Integration \n    To adjust the frontend appearance, provide the ...",t:"Computop - iDeal  "},"422":{i:0.000513801086699129,u:"../content/industry_partners/payment/computop/computop-oms-details.htm",a:" The following plugins are used for performing calls to Paygate during OMS operation. Authorize Plugin: \n        Make an Authorize call to Computop.\n     Cancel Plugin: Follow these steps to cancel the item in the order in case all the items or the last possible one got canceled: Inquire a call to ...",t:"Computop - OMS  "},"423":{i:0.000513801086699129,u:"../content/industry_partners/payment/computop/computop-paydirekt.htm",a:" Computop - Paydirekt  Example State Machine: Front-end Integration \n    To adjust the frontend appearance, provide the following templates in your theme directory:\n \n        src/\u003cproject_name\u003e/Yves/Computop/Theme/\u003ccustom_theme_name\u003e/paydirekt.twig\n     State Machine Integration The Computop ...",t:" Computop - Paydirekt  "},"424":{i:0.000513801086699129,u:"../content/industry_partners/payment/computop/computop-paynow.htm",a:" Example State Machine Front-end Integration To adjust the frontend appearance, provide the following templates in your theme directory:  src/\u003cproject_name\u003e/Yves/Computop/Theme/\u003ccustom_theme_name\u003e/paynow.twig . State Machine Integration The Computop provides a demo state machine for the PayNow ...",t:"Computop - PayNow"},"425":{i:0.000513801086699129,u:"../content/industry_partners/payment/computop/computop-paypal.htm",a:" Computop - PayPal  Example State Machine Front-end Integration \n    To adjust frontend appearance, provide following templates in your theme directory:\n \n        src/\u003cproject_name\u003e/Yves/Computop/Theme/\u003ccustom_theme_name\u003e/paypal.twig\n     State Machine Integration The Computop provides a demo state ...",t:" Computop - PayPal  "},"426":{i:0.000513801086699129,u:"../content/industry_partners/payment/computop/computop-sofort.htm",a:" Example State Machine: Front-end Integration \n    To adjust the frontend appearance, provide the following templates in your theme directory:\n \n        src/\u003cproject_name\u003e/Yves/Computop/Theme/\u003ccustom_theme_name\u003e/sofort.twig\n     State Machine Integration The Computop provides a demo state machine ...",t:"Computop - Sofort  "},"427":{i:0.0005283588349818,u:"../content/industry_partners/payment/heidelpay/heidelpay.htm",a:" Partner Information Integrating Heidelpay To integrate Hidelpay in your project, follow these steps: Install  Heidelpay Integrate  Heidelpay to your project \tConfigure selected payment methods: Paypal ( Paypal Authorize ,  Payal Debit ) Credit Card iDeal Sofort Easy Credit Build your own workflow ...",t:"Payment Integration - Heidelpay"},"428":{i:0.00654049373817771,u:"../content/industry_partners/payment/heidelpay/v1_0/heidelpay-installation.htm",a:" To install Heidelpay, if necessary, add  the Heidelpay repo to your repositories in composer.json: \"repositories\": [\n  ...\n  {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/spryker-eco/Heidelpay.git\"\n  }\n    ], and simply do \u003e composer require spryker-eco/heidelpay   See also: Payment ...",t:"Heidelpay - Installation  "},"429":{i:0.00654049373817771,u:"../content/industry_partners/payment/heidelpay/v1_0/heidelpay-integration.htm",a:"Heidelpay - Integration to Your Project\n Configuration You can copy over configs to your config from the Heidelpay\u0027s moduleconfig.dist.php file.\n         \n        The most important configuration items are explained in the table below,\n        make sure to get the required configuration items from ...",t:"Heidelpay - Integration to Your Project\n "},"430":{i:0.000569939410205946,u:"../content/industry_partners/payment/heidelpay/v1_0/heidelpay-authorize.htm",a:" Setup The following configuration should be made after Heidelpay has been  installed  and  integrated . Configuration Example (for testing only): \n$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_PAYPAL] = \u002731HA07BC8142C5A171749A60D979B6E4\u0027;\n This value should be taked from ...",t:"Heidelpay - Paypal Authorize  "},"431":{i:0.000991202162625838,u:"../content/industry_partners/payment/heidelpay/v1_0/heidelpay-credit-card.htm",a:" Setup The following configuration should be made after Heidelpay has been  installed  and  integrated . Configuration Example (for testing only): \n$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_IDEAL] = ...",t:"Heidelpay - Credit Card Secure  "},"432":{i:0.000569939410205946,u:"../content/industry_partners/payment/heidelpay/v1_0/heidelpay-paypal-debit.htm",a:" Setup The following configuration should be made after Heidelpay has been  installed  and  integrated . Configuration Example (for testing only): \n$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_PAYPAL] = \u002731HA07BC8142C5A171749A60D979B6E4\u0027;\n This value should be taken from ...",t:"Heidelpay - Paypal Debit Workflow  "},"433":{i:0.000513801086699129,u:"../content/industry_partners/payment/heidelpay/v1_0/heidelpay-error-workflow.htm",a:"Heidelpay - Workflow for Errors\n \n        From the user\u0027s perspective, there is almost no difference between successful and unsuccessful order flow. The only exception is a redirect to the URL after the placeOrderAction (/checkout/place-order) is complete.\n        Both urls can be configured as ...",t:"Heidelpay - Workflow for Errors\n     "},"434":{i:0.000569939410205946,u:"../content/industry_partners/payment/heidelpay/v1_0/heidelpay-sofort.htm",a:" Setup The following configuration should be made after Heidelpay has been  installed  and  integrated . Configuration Example (for testing only): \n$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_SOFORT] = \u002731HA07BC8142C5A171749CDAA43365D2\u0027;\n \n    Checkout Payment Step Display ...",t:"Heidelay - Sofort (Online Transfer)  "},"435":{i:0.000569939410205946,u:"../content/industry_partners/payment/heidelpay/v1_0/heidelpay-ideal.htm",a:" Setup The following configuration should be made after Heidelpay has been  installed  and  integrated . Configuration Example (for testing only): \n$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_IDEAL] = \u002731HA07BC8142C5A171744B56E61281E5\u0027;\n This value should be taken from ...",t:"Hedelpay - iDeal  "},"436":{i:0.014042434429016,u:"../content/industry_partners/payment/heidelpay/v1_0/heidelpay-easy-credit.htm",a:" The following configuration should be implemented after Heidelpay has been  installed  and  integrated . Configuration Example (for testing only): \n$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_EASY_CREDIT] = \u002731HA07BC810DCA126FA83FA533886979\u0027;\n\t\t\t\t This value should be taken ...",t:"Heidelpay - Easy Credit"},"437":{i:0.0005283588349818,u:"../content/industry_partners/payment/klarna/klarna.htm",a:" BETA version\n This (Undefined variable: General.bundle/module) is still in development. For questions and inquiries please contact  academy@spryker.com Partner Information Klarna Invoice The option to pay after delivery makes buying quicker and easier for customers. With Klarna’s Pay Later, ...",t:"Payment Integration  - Klarna"},"438":{i:0.0005283588349818,u:"../content/industry_partners/payment/payolution/payolution.htm",a:" BETA version\n This (Undefined variable: General.bundle/module) is still in development. For questions and inquiries please contact  academy@spryker.com Partner Information Payolution provides two methods of payment: Invoice Installment In order to integrate Payolution payments, a Payolution ...",t:"Payment Integration — Payolution"},"439":{i:0.000513801086699129,u:"../content/industry_partners/payment/payolution/payolution-configuration.htm",a:" \n            Add spryker-eco/payolution to your project by running composer require spryker-eco/payolution \n            Please refer to config/config.dist.php for example of module configuration.\n         To setup the initial Payolution configuration, use the credentials you received after ...",t:"Payolution — Configuration  "},"440":{i:0.000513801086699129,u:"../content/industry_partners/payment/payolution/payolution-installment.htm",a:" Installment Scenarios Standard Case Full Refund Partial Refund Integrating Payolution Installment Payment The In order to integrate installment payment, two simple steps are needed: setting Payolution installment payment configuration and calling the facade functions. Setting Payolution Installment ...",t:"Payolution — Installment Payment  "},"441":{i:0.000513801086699129,u:"../content/industry_partners/payment/payolution/payolution-invoice.htm",a:" Workflow Scenarios Payments from Payolution to Merchant are not included in the sequence diagrams since they occur on a regular basis (e.g. every week). Standard Case Full Refund Before Payment Partial Refund Before Payment Full Refund After Payment Partial Refund After Payment Integrating ...",t:"Payolution — Invoice Payment  "},"442":{i:0.000513801086699129,u:"../content/industry_partners/payment/payolution/payolution-requests.htm",a:" In order to perform the needed requests, you can easily use the implemented state machine commands and conditions. The next section gives a summary of them. You can also use the facade methods directly which, however, are invoked by the state machine. Payolution State Machine Commands and ...",t:"Payolution — Performing Requests  "},"443":{i:0.000513801086699129,u:"../content/industry_partners/payment/payolution/payolution-workflow.htm",a:" Both invoice and installment utilize the same request flow. It basically consists of the following requests: Calculation (for installment only): to calculate the installment amounts, dues, and durations. Pre-check (optional): to check the user information in order to make sure that all the needed ...",t:"Payolution — Workflow  "},"444":{i:0.0005283588349818,u:"../content/industry_partners/payment/payone/v1_1/payone-v1-1.htm",a:"Partner Information We integrate with a wide range of payment methods that can be configured according to your needs and convenience. Payment method flows are configured using state machines.\n\n Payone provides seven main methods of payment:\n\n Credit Card Direct Debit\n     Online Transfer Paypal ...",t:"Payment Integration - BS Payone - 1.1"},"445":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_1/payone-integration-with-project-example.htm",a:" Objectives: Place order with PayPal express checkout. Be redirected to summary page of standard checkout. Have shipping a method selector on summary page. First of all we need to provide a URL to Payone module, which will be used to redirect user when the quote is filled with data obtained from ...",t:"PayOne - Integration With Project"},"446":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_0/payone-state-machine-cmd-cond-evnt.htm",a:"PayOne - State Machine Commands, Conditions and Events ",t:"PayOne - State Machine Commands, Conditions and Events"},"447":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_0/payone-authorization-and-preauthorization-capture-flows.htm",a:" Payone module makes it possible for a project to choose which Payone flow it wants to implement: authorize or preauthorize + capture. Authorization Example State Machine: Authorization state machine example xml can be found in vendor/\u003cpayone_module_folder\u003e/src/config/Zed/Oms/PayoneInvoice.xml ...",t:"PayOne - Authorization and Preauthorization-Capture Flows"},"448":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_0/payone-facade.htm",a:"PayOne - Facade   ",t:"PayOne - Facade"},"449":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_0/payone-direct-debit.htm",a:"Payone - Direct Debit Payment  Front-end integration\n Run the antelope build yves after you include the javascript file for credit card check inside the payment step template (e.g. src/\u003cproject_name\u003e/Yves/Checkout/Theme/\u003ccustom_theme_name\u003e/checkout/payment.twig)\n\n {% block content %}\n\u003cscript ...",t:"PayOne - Direct Debit Payment"},"450":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_0/payone-invoice.htm",a:" Front-end Integration\n To adjust the frontend appearance, provide the following templates in your theme directory:\n\nsrc/\u003cproject_name\u003e/Yves/Payone/Theme/\u003ccustom_theme_name\u003e/invoice.twig State Machine Integration\n Payone module provides a demo state machine for the Invoice payment method which ...",t:"PayOne - Invoice Payment"},"451":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_0/payone-paypal.htm",a:" PayOne - Paypal Payment  The payment using PayPal requires a redirect to PayPal website. When the customer is redirected to PayPal’s website, he must authorize himself and he has the option to either cancel or validate the transaction.\n \nA concern regarding payment flows that require redirection on ...",t:"PayOne - Paypal Payment"},"452":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_0/payone-credit-card.htm",a:" PCI Compliance Because of PCI compliance reasons, credit card data is communicated to the third party through AJAX calls (sensitive information stays browser side).\n PCI Compliance\n The Payment Card Industry Data Security Standard ( PCI DSS ) is a set of rules with the intention to ensure that ...",t:"PayOne - Credit Card Payment"},"453":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_0/payone-prepayment.htm",a:"Payone - Pre-payment  Prepayment method is a safe alternative to payments involving credit cards or debit cards (such as online banking transfer). Usually bank transfer would require manual processing to mark transaction as cancelled or completed, but the process is fully automated through the ...",t:"PayOne - Prepayment"},"454":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_0/payone-online-trans.htm",a:" Supported online banking service providers are SofortBanking, Giropay, Electronic Payment Standard (Eps), PostFinance Card, PostFinance E-Finance, iDEAL, Przelewy24, and Bancontact. They are enabled  through the integration with Payone, using the online transfer payment type.\n\n Each payment method ...",t:"PayOne - Online Transfer Payment"},"455":{i:0.000513801086699129,u:"../content/industry_partners/payment/payone/v1_1/payone-paypal-express-checkout.htm",a:" The payment using PayPal requires redirect to PayPal website. When the customer is redirected to PayPal’s website, he must authorize himself and he has the option to either cancel or validate the transaction. A concern regarding payment flows that require redirection on third party website pages is ...",t:"PayOne - PayPal Express Checkout Payment"},});