define({"68":{i:0.00077402663196719,u:"../content/about_spryker/resources_and_developer_tools/zed/business_layer/facade/zed-facade-how-to-implement.htm",a:"AbstractFacade Every facade extends Spryker\\Zed\\Kernel\\Business\\AbstractFacade which provides an important method: Methods Inside a facade, the methods tell a story about the (Undefined variable: General.bundle/module). They expose  the (Undefined variable: General.bundle/module)\u0027s functions and ...",t:"How to Implement a Facade"},"69":{i:0.00077402663196719,u:"../content/about_spryker/resources_and_developer_tools/zed/business_layer/facade/zed-facade-how-to-use.htm",a:"1. How to use the facade from a controller or a plugin? In Zed’s communication layer the facade of the same (Undefined variable: General.bundle/module) is available with the getFacade() method from all controllers and plugins. A typical usage from a controller looks like this. The controller ...",t:"How to Use a Facade"},"70":{i:0.000604251503016567,u:"../content/about_spryker/resources_and_developer_tools/zed/business_layer/business-models.htm",a:"Business models are classes where you program the business logic of your system. With business logic we mean all kinds of algorithms (e.g. cart calculation), storage procedures (e.g. checkout save workflow) and interactions with external providers (e.g. payment). Business models are not visible from ...",t:"Business Models"},"71":{i:0.000604251503016567,u:"../content/about_spryker/resources_and_developer_tools/zed/business_layer/custom-exceptions.htm",a:"Custom Exceptions",t:"custom-exceptions"},"72":{i:0.000604251503016567,u:"../content/about_spryker/resources_and_developer_tools/zed/persistence-layer.htm",a:"Zed’s persistence layer is the owner of the schema, entities and queries. This layer knows the database structure and holds the connection to it.\n Integrated Technologies\n Propel\tFast and simple ORM Framework\nMySQL or PostgreSQL\tBoth databases are supported\n Persistence Layer Elements:\n The ...",t:"Persistence Layer"},"73":{i:0.00387409093682983,u:"../content/about_spryker/resources_and_developer_tools/zed/persistence_layer/database_overview.htm",a:"ORM Directory The ORM directory contains two folders: Propel and Zed. The src/Orm/Propel is for: Configuration in Propel format (generated propel.json - don’t touch). Copy of merged schema files (don’t touch). Migration files (can be on gitignore or can be committed, the decision is made on the ...",t:"Database Overview"},"74":{i:0.00482790120839743,u:"../content/about_spryker/resources_and_developer_tools/zed/persistence_layer/database_schema_definition.htm",a:"With Propel, a database schema is defined in an XML-file. Each (Undefined variable: General.bundle/module) carries it’s own part of the big schema that is collected and merged. Propel’s documentation on defining the database schema:  Database schema Example Schema XML File This file can be copied ...",t:"Database Schema Definition"},"75":{i:0.00406126937360896,u:"../content/about_spryker/resources_and_developer_tools/zed/persistence_layer/entity-manager.htm",a:"Entity Manager",t:"entity-manager"},"76":{i:0.00406126937360896,u:"../content/about_spryker/resources_and_developer_tools/zed/persistence_layer/entity.htm",a:"In Spryker an entity represents one entry from a table in the database. Entities are an implementation of the  Active record design pattern , so their usage is very simple.\nFor a full documentation see  Propel’s Active Record Reference .  Spryker’s entities are called Active Record classes or just ...",t:"Entity"},"77":{i:0.00430512345755943,u:"../content/about_spryker/resources_and_developer_tools/zed/persistence_layer/query_container.htm",a:"A query container holds all the database queries of the current (Undefined variable: General.bundle/module). Each (Undefined variable: General.bundle/module) has exactly one query container, which also acts as an entry point to the persistence layer. Internally it uses  query objects  and returns ...",t:"Query Container"},"78":{i:0.00463663032932225,u:"../content/about_spryker/resources_and_developer_tools/zed/persistence_layer/query_objects.htm",a:"Query objects provide an object-oriented API for writing database queries which are used in  query containers .\n Please check the official  Propel Query Reference  for a complete documentation.\n\n How to Create a New Query Object\n Query object are created by Propel during the build model step. See ...",t:"Query Objects"},"79":{i:0.00463663032932225,u:"../content/about_spryker/resources_and_developer_tools/zed/persistence_layer/repository.htm",a:"\n    Since Kernel version 3.2 it\u0027s possible to use a Repository class in your persistence layer.\n    The repository implements the  repository pattern , which means you have clear separation between business and persistence layers. \n    Propel entities are not allowed outside the persistence layer. ...",t:"Repository"},"80":{i:0.000795522382091753,u:"../content/about_spryker/resources_and_developer_tools/zed/controllers-actions.htm",a:"Controllers and Actions",t:"controllers-actions"},"81":{i:0.000560908467393122,u:"../content/about_spryker/resources_and_developer_tools/code-generator.htm",a:"The CodeGenerator (Undefined variable: General.bundle/module) can generate your project code.  Out of the box it provides generators for Yves, Zed, Client, Service and Shared application layers.\n\n This is a pre-release.\n Installation\n Install it as\n\n composer require --dev spryker/code-generator You ...",t:"Code Generator"},"82":{i:0.000752179346468308,u:"../content/about_spryker/resources_and_developer_tools/configuration-management.htm",a:"Default and Local Configuration Files\n Under config/Shared you’ll find several files that are used for the system’s configuration, that can be used by both Yves and Zed.\n The files are merged in a fixed order if they exist. So the entries of config_default.php are overwritten by the entries in ...",t:"Configuration Management"},"83":{i:0.00248065497902159,u:"../content/about_spryker/resources_and_developer_tools/console-commands.htm",a:"We provide an integrated mechanism to add command line calls. Technically this is based on Symfony’s Console Component.\n\t\t \n\t\t\tGet a list of all available commands\n\t\t You can see the list of all of the commands by running: vendor/bin/console. vagrant@spryker-vagrant ➜  current git:(develop) ✗ ...",t:"Console Commands"},"84":{i:0.000560908467393122,u:"../content/about_spryker/resources_and_developer_tools/container-globals.htm",a:"The ContainerGlobals is a way to inject dependencies which are available inside your  Factories . Every dependency added to the ContainerGlobals is available by using getProvidedDependency() in your factory.\n \nTo add something globally you need to create a service provider and add it to the ...",t:"Container Globals"},"85":{i:0.000560908467393122,u:"../content/about_spryker/resources_and_developer_tools/core-extension.htm",a:"We offer several ways like plugins to hook into the core’s behavior and extend this without modifications. But sometimes this is not enough, so you need to replace a method which is deep in the core.\n\n Before your proceed, double check if there is no other way to solve your requirement, maybe there ...",t:"Core Extension"},"86":{i:0.00128131469163068,u:"../content/about_spryker/resources_and_developer_tools/cronjob-scheduling.htm",a:"We use  Jenkins  for cronjob scheduling. Compared to Crontab, there are several benefits: Jobs are queued and can be manually executed Job definitions are under version control and can be changed by any developer Console output available for debugging Add a new job and run it Jobs are defined in ...",t:"Cronjob Scheduling"},"87":{i:0.000560908467393122,u:"../content/about_spryker/resources_and_developer_tools/dependency-injector.htm",a:"The  Dependency Provider  defines which “external dependencies” you need to retrieve(e.g. a facade of another (Undefined variable: General.bundle/module)).\n \nThe DependencyInjector is the opposite of it. This class will push dependencies into another (Undefined variable: General.bundle/module) ...",t:"Dependency Injector"},"88":{i:0.00103943057140126,u:"../content/about_spryker/resources_and_developer_tools/dependency-provider.htm",a:"Each (Undefined variable: General.bundles/modules) ships with a DependencyProvider class which explicitly defines services and external dependencies to other (Undefined variable: General.bundles/modules). For instance when the Cms (Undefined variable: General.bundle/module) requires the Glossary ...",t:"Dependency Provider"},"89":{i:0.00339927373975906,u:"../content/about_spryker/resources_and_developer_tools/factory.htm",a:"All (Undefined variable: General.bundles/modules) are shipped with a dedicated factory for each layer. The responsibility of the factory is to create new instances of the classes from the same layer and (Undefined variable: General.bundle/module).\n\n The following example shows a typical method from ...",t:"Factory"},"90":{i:0.000560908467393122,u:"../content/about_spryker/resources_and_developer_tools/flash-messenger.htm",a:"This tutorial describes how to show a message in the Zed GUI.\n In the controller you can use these shortcut methods to show a user message in the GUI. The messages will be translated later when they are rendered.\n\n \u003c?php\nclass IndexController extends AbstractController\n{\n    public function ...",t:"Flash Messenger"},"91":{i:0.000560908467393122,u:"../content/about_spryker/resources_and_developer_tools/internal-server-error-handling.htm",a:"This document describes how to configure the behavior when an internal server error occurs. Whether you need to show the details of the error or render a static page for any internal error, this is done through configuration.\n\n Configure Internal Server Error  Page\nDepending on the environment on ...",t:"Internal Server Error Handling"},"92":{i:0.000560908467393122,u:"../content/about_spryker/resources_and_developer_tools/performance-scalability.htm",a:"Spryker Commerce OS was built to enable the development of high performance e-commerce applications that are able to support an extremely high number of unique visitors. However, no application can be both, light and heavy, at the same time.\n\n Therefore, we have two applications: Yves and Zed. Both ...",t:"Performance and Scalability"},"93":{i:0.000848432808746657,u:"../content/about_spryker/resources_and_developer_tools/plugin.htm",a:"Plugins are small classes that are used to connect bundles in a flexible and configurable way. In contrast to a direct call to a facade of another (Undefined variable: General.bundle/module), there can be an array of provided (Undefined variable: General.bundles/modules).\n\n According to our ...",t:"Plugin"},"94":{i:0.000752179346468308,u:"../content/about_spryker/resources_and_developer_tools/service.htm",a:"Service is a Spryker application layer shared by the Client application layer and the Zed application layer. This service layer provides the ability to register a service once and have it applied to both layers. Usage is focused on level details (infrastructure layer). For example: encoding, text ...",t:"Service"},"95":{i:0.000560908467393122,u:"../content/about_spryker/resources_and_developer_tools/session-handlers.htm",a:"We provide a number of session handlers to work with different storages. By default, the demo-shop uses a locking Redis session handler for Yves and a non-locking Redis session handler for Zed in the development environment.\n\n The following session handlers are currently available:\n\n File\n ...",t:"Session Handlers"},"96":{i:0.000560908467393122,u:"../content/about_spryker/resources_and_developer_tools/spryker-middleware.htm",a:"Overview Spryker Middleware is a constructor that allows you to set up a linear data processing flow, also referred to as pipeline, for import/export of data from some system to shop, or from shop to some system. For example, it can be used for importing products to a shop, or exporting orders from ...",t:"Spryker Middleware"},"97":{i:0.000992314754547495,u:"../content/about_spryker/resources_and_developer_tools/transfer-objects.htm",a:"Transfer objects are simple data containers. Their purpose is to retrieve a standardized way to access data and to get more expressive method signatures. They are available everywhere in the system. How to use transfer objects Simple usage The example shows a typical use case for a transfer object. ...",t:"Transfer Objects"},"98":{i:0.000680101815357595,u:"../content/about_spryker/videos___webinars/videos.htm",a:"We believe that good technology doesn’t stop with the code. You also need the examples and information to help you convert your vision into reality. In this section you can check out our videos for more information about Spryker Commerce OS. You can also send us direct requests for videos and topics ...",t:"Spryker Videos"},"99":{i:0.000560908467393122,u:"../content/about_spryker/videos___webinars/category-management.htm",a:"Category Management This video shows how we use Categories to structure products for displaying and filtering products. We use the Demo Shop and the Spryker Administration Interface to demonstrate this feature.",t:"Category Management"},"100":{i:0.000560908467393122,u:"../content/about_spryker/videos___webinars/cms-blocks.htm",a:"CMS Blocks This video shows how CMS blocks are used to add complementary content to store pages. We use the Demo Shop to demonstrate this feature.",t:"CMS Blocks"},"101":{i:0.000560908467393122,u:"../content/about_spryker/videos___webinars/cms-pages.htm",a:"CMS Pages This video shows how CMS content is displayed and managed in Spryker. We use the Demo Shop to demonstrate this feature.",t:"CMS Pages"},"102":{i:0.000560908467393122,u:"../content/about_spryker/videos___webinars/demo-shop.htm",a:"Demo Shop This video is a short overview of the Spryker Demo Shop, our out-of-the-box online shop boilerplate. ",t:"Demo Shop"},"103":{i:0.000560908467393122,u:"../content/about_spryker/videos___webinars/navigation.htm",a:"Navigation This video shows how Navigation is used and created We use the Demo Shop to demonstrate this feature.",t:"Navigation"},"104":{i:0.000560908467393122,u:"../content/about_spryker/videos___webinars/product-groups.htm",a:"Product Groups This video shows how to create product groups. Product Groups allow you to display an item and its different variants such as different shoe colors or different t-shirt sizes. ",t:"Product Groups"},"105":{i:0.000560908467393122,u:"../content/about_spryker/videos___webinars/product-management.htm",a:"This video demonstrates how products are managed in Spryker. The video reviews product structure discussing concepts such as abstract and concrete products and their benefits. Then we review product features such as: Product Options, Product Labels, Product Relations, Product Sets and Product ...",t:"Product Management"},"106":{i:0.000560908467393122,u:"../content/about_spryker/videos___webinars/product-sets.htm",a:"Product Sets This video shows how product sets are managed in Spryker. The video uses the Spryker Demo Shop to review how products are displayed and bought as a set and how sets are managed and configured in the Administration Interface.",t:"Product Sets"},"107":{i:0.000560908467393122,u:"../content/about_spryker/videos___webinars/wishlists.htm",a:"Wishlists This video shows our demo shop implementation of Wishlists. ",t:"Wishlists"},"108":{i:0.000560908467393122,u:"../content/about_spryker/releases/releases.htm",a:"This section contains the notes for each release made by Spryker. Make sure you check this section from time-to-time to  stay up to date with the improvements, bug fixes and new features that are delivered by our team. Mailing Lists We recommend that you subscribe to our release newsletter and ...",t:"Releases"},"109":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-april-1-2017.htm",a:"Features Product Relations With this release we introduce product relations feature. This feature can be used in many different ways. Some of the anticipated (and most common for e-commerce shops) use cases are displaying similar products, up-selling of products, etc. The solution comes with a Zed ...",t:"Release Notes - April - 1 2017"},"110":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-april-2-2017.htm",a:"Features Multiple Wishlists This release introduces core functionality to support multiple wishlist handling in Yves. It is now possible to create multiple wishlists in customer account and select which wishlist to add a product to. In the customer account’s wishlist section, users can manage ...",t:"Release Notes - April - 2 2017"},"111":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-august-1-2017.htm",a:"Announcements PHP 7.2 is There Soon / EOL for PHP5.6 With the release of PHP 7.2 we want our Spryker code to stay cutting edge and using the best features available. Soon we want to start leveraging the new typehinting features the language provides and for that we need to stop supporting legacy ...",t:"Release Notes - August - 1 2017"},"112":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-august-2-2017.htm",a:"Features Order Details Improvement We have improved Zed usability for order management. Now in the order view you can have a convenient summary of products from the given order, including images and name of products. Product options related to the given product are visually differentiated making it ...",t:"Release Notes - August - 2 2017"},"113":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-december-2017.htm",a:"(missing or bad snippet) Features Initial Release of Heidelpay Module From now on, we support integration with Heidelpay payment service provider. Heidelpay covers the entire range of services connected to international electronic payment processing. It is possible to configure and use the following ...",t:"Release Notes - December - 2017"},"114":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-july-1-2017.htm",a:"Features Selecting Product Variant in the Cart With this release we are bringing the variant selection functionality to the cart. Your shop user can now modify the selected variant right in the cart which will then, if available, replace the current item in the cart with the newly selected one (e.g. ...",t:"Release Notes - July - 1 2017"},"115":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-july-2-2017.htm",a:"Features Filter by Product Labels We\u0027ve changed product label touch logic in order to be able to export label IDs for products when their label relations change. This will allow you to further search and filter by labels. Affected Modules Documentation For module documentation see:  Product Label ...",t:"Release Notes - July - 2 2017"},"116":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-june-1-2017.htm",a:"Improvements Session Service Provider Enhancement Previously the Yves and Zed SessionServiceProvider contained a switch statement to determine which SessionHandler should be used. The switch is a violation of the open-close principle and therefore we refactored the current SessionServiceProvider for ...",t:"Release Notes - June - 1 2017"},"117":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-june-2-2017.htm",a:"Release Notes - June - 2 2017 See:  Release Notes PDF",t:"Release Notes - June - 2 2017"},"118":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-may-1-2017.htm",a:"See:  Release Notes Documentation Updates Oryx: Oryx is the frontend helper and replacement for Antelope. Read more here. Product Groups: Product Group feature is for grouping multiple abstract products. Find up-to-date documentation under here. Zed API (Beta): You can read more about our flexible ...",t:"Release Notes - May - 1 2017"},"119":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-may-2-2017.htm",a:"Release Notes - May - 2 2017 See:  Release Notes",t:"Release Notes - May - 2 2017"},"120":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-november-1-2017.htm",a:"This month we released some important security updates. Check them out  here . Features Multi-currency for Shipments We are currently working on full enablement of multi-store and multi-currency concepts. In consequent releases we will be step-by-step enabling every relevant functionality with ...",t:"Release Notes - November - 1 2017"},"121":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-november-2-2017.htm",a:"(missing or bad snippet) Improvements Inspinia Update With this update we bring the latest version of Inspinia (2.7.1) into Zed Administrative Interdace. You can now take full advantage Inspinia\u0027s latest feature set and improvements.  In order to take the latest changes introduced by this version,  ...",t:"Release Notes - November - 2 2017"},"122":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-october-1-2017.html",a:"Features CMS Page Preview Introducing CMS Page Preview, for previewing a working version of your content before publishing it live. This feature gives you the chance to judge the final look of CMS placeholder content as it will appear in the final layout.  The CMS Page Preview has an option to view ...",t:"Release Notes - October - 1 2017"},"123":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-october-2-2017.htm",a:"Features Multi-currency for Discounts We are currently working on full enablement of multi-store and multi-currency concepts. In consequent releases we will be step-by-step enabling every relevant functionality with multi-store and -currency. This release focuses on enabling multi-currency for ...",t:"Release Notes - October - 2 2017"},"124":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-september-1-2017.htm",a:"Features Attribute Management for A High Number of Attributes To  manage a high number of product attributes, we moved them to a separate module supported with a UI.  Now stores with more than 100k of product attributes, have a convenient and easy \"process content management\" interface. Affected ...",t:"Release Notes - September - 1 2017"},"125":{i:0.000581503432715372,u:"../content/about_spryker/releases/2017/release-notes-september-2-2017.htm",a:"Features Discount Promotion Products For marketing reasons you, the shop owner, might sometimes give away free or discounted products. This can happen depending on the cart content or via a redeemed voucher code. With this release we are introducing discount promotions fully integrated in out ...",t:"Release Notes - September - 2 2017"},"126":{i:0.000581503432715372,u:"../content/about_spryker/releases/2018/release-notes-april-1-2018.htm",a:"Features Reorder One of the biggest factors that influences customer loyalty and persuades them to repeatedly buy from your shop, is shopping convenience. In this release we are introducing one more feature that will make your customers\u0027 (and your) life easier: reorder. This feature allows customers ...",t:"Release Notes - April - 2018"},"127":{i:0.000581503432715372,u:"../content/about_spryker/releases/2018/release-notes-february-2018.htm",a:"Please note, that we do not have  Toran Proxy  anymore, it has been shut down completely. Please use  Packagist  from now on. See more  here . Features Product Search Widget Previously we had only product list widgets for which the products were selected based on their SKUs, whereas the selection ...",t:"Release Notes - February - 1 2018"},"128":{i:0.000581503432715372,u:"../content/about_spryker/releases/2018/release-notes-february-2-2018.htm",a:"Features CMS Blocks Per Store We continue progressing towards full enablement of the multi-store concept. With this release we are introducing a new multi-store CMS blocks feature. It enables you to manage CMS blocks display per stores  through a store toggle element on CMS Block management pages in ...",t:"Release Notes - February - 2 2018"},"129":{i:0.000581503432715372,u:"../content/about_spryker/releases/2018/release-notes-january-2018.htm",a:"Please note, that we do not have  Toran Proxy  anymore. We recommend to download all Spryker modules from public  Packagist  from now on. See more  here . Features Multi-Currency Product Options With this release we are introducing a new functionality which enables the shop owners to manage prices ...",t:"Release Notes - January - 2018"},"130":{i:0.000581503432715372,u:"../content/about_spryker/releases/2018/release-notes-march-1-2018.htm",a:"(missing or bad snippet) Features Gift Cards The feature we have all been waiting for has arrived - gift cards! It goes without saying that gift cards\u0027 popularity among buyers is so high that there is really no reason not to offer them in your shop. Gift cards are not only an entry point for new ...",t:"Release Notes - March - 2018"},"131":{i:0.00115687520721549,u:"../content/about_spryker/releases/release-notes.htm",a:"On this page you can find the latest release notes and archived content.  Due to the nature of Spryker Commerce OS, we have releases nearly every day. Once or twice a month we aggregate this information into release notes and publish release information to out academy and our mailing list.  For more ...",t:"Release Notes"},"132":{i:0.000560908467393122,u:"../content/capabilities/capabilities.htm",a:" As a staring point to working with the Spryker Commerce OS, we created a list of all the capabilities we have to offer that arrive out-of-the-box.  Each Capability is marked to define if it is a B2C   or a B2B   capability.  Capabilities are high level descriptions of what a certain facet of ...",t:"Working with Spryker (Capabilities)    "},"133":{i:0.000577936088530904,u:"../content/capabilities/back_office/back-office.htm",a:"Back Office  Administration Interface Customer Groups",t:"Back Office    "},"134":{i:0.000683720196184174,u:"../content/capabilities/back_office/administration-interface.htm",a:" Through the Administration Interface you can manage all Back Office tasks . Here you can manage user and administrator accounts, create products pages, extend your catalog and navigation, create content, maintain price, tax and currency options, check orders and many more. If you are a:",t:"Administration Interface    "},"135":{i:0.000683720196184174,u:"../content/capabilities/back_office/customer-accounts.htm",a:" Customer Accounts are the area of the Administration Interface where you can view and edit customer accounts, see details and check order history. From Customer Accounts you can group customers to target them for exclusive or limited offers.  How are accounts created?\n Customers can create an ...",t:"Customer Accounts    "},"136":{i:0.000683720196184174,u:"../content/capabilities/back_office/data-protection.htm",a:" The Spryker Commerce OS is fully compliant with international GDPR regulations. \nFor example, customers can delete their account information, subscribe or unsubscribe from newsletters. Shop owners can also delete a customer account through the Administration Interface. However, this action does not ...",t:"Data Protection    "},"137":{i:0.000683720196184174,u:"../content/capabilities/back_office/permission-acl.htm",a:" Clearly define access permissions and roles of all Administration Interface users where needed and set initial passwords.\nEasily control who has access to the Administration Interface and which tasks they can perform by defining custom user permissions, roles and groups.\n   If you are a:",t:"Permission and ACL Management    "},"138":{i:0.000577936088530904,u:"../content/capabilities/cart/cart.htm",a:"Cart ",t:"Cart    "},"139":{i:0.00128717007333123,u:"../content/capabilities/cart/calculation/calculation-3-0.htm",a:" The latest version of this module can be found here  Calculation Spryker uses the Calculation module to calculate the cart totals that are displayed in the cart/checkout or when the order is placed.\n\n The calculation module extensively uses plugins to inject calculation algorithms.\n How Calculation ...",t:"Calculation 3.0    "},"140":{i:0.00358265494391343,u:"../content/capabilities/cart/calculation/calculation-data-structure.htm",a:" The following diagram illustrates the Calculation data structure.   Quote Transfer\n QuoteTransfer is the main data transfer object used in Cart, Calculation, Checkout and when order is placed. This object is created when first item is added to the cart.  The entire data object is stored into the ...",t:"Calculation Data Structure    "},"141":{i:0.00103928195196163,u:"../content/capabilities/cart/calculation/calculation-plugins.htm",a:" \nCalculator plugins are registered in the CalculationDependencyProvider::getQuoteCalculatorPluginStack() for QuoteTransfer and CalculationDependencyProvider::getOrderCalculatorPluginStack() or in later versions of the Calculation module 4.00 and above ...",t:"Calculator Plugins    "},"142":{i:0.00393949773729002,u:"../content/capabilities/cart/calculation/mg-calculation.htm",a:" Upgrading from Version 3.* to Version 4.* To upgrade from 3* to 4*, composer update your calculator to version 4. Updating Calculator Stacks In the new version there are two new calculator stacks, getQuoteCalculatorPluginStack and getOrderCalculatorPluginStack. They are both defined in ...",t:"Migration Guide - Calculation    "},});